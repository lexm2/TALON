Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02,  3.2887e-01, -7.4997e-01, -5.0656e-02,  1.3976e-02,
          1.1801e-01, -5.9536e-05, -1.1522e-02,  9.2660e-02,  7.3688e-02,
          2.4366e-02,  1.9742e-01, -2.2003e-01,  5.5012e-04,  7.7977e-03],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -1.8533e-01, -7.2353e-01, -4.3763e-02,  2.6280e-02,
          6.1157e-01, -1.3348e-01, -3.7149e-01, -3.9177e-01, -3.6400e-01,
         -3.7500e-01, -8.2438e-02, -1.6518e-01, -1.1912e-01, -5.4012e-02],
        [-3.2809e-02, -1.4930e-02,  2.1423e-01, -2.4706e+00,  1.3246e-01,
         -3.6961e-01,  6.0838e-02, -5.4277e-03,  1.3113e-02,  6.5377e-02,
          1.5996e-01,  4.6985e-02, -4.6678e-02,  1.9642e-01,  3.9834e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.3341e-02, -1.4601e-01,  2.7838e-02, -1.0576e-01,
         -8.8525e-01,  3.0342e-02, -7.6429e-01, -4.2763e-01, -5.0154e-01,
         -3.3115e-01, -4.2612e-01, -3.0642e-01,  6.3131e-02, -1.9664e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01,  4.6498e-03, -2.7510e-01,  2.3467e-01, -7.8641e-01,
          1.6257e-01, -6.0638e-01,  6.8832e-02, -5.6678e-01,  1.1879e-02,
         -2.3355e-01,  2.7532e-01, -7.6711e-01, -9.5310e-02, -2.0502e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.1158e-01, -6.8524e-01,  7.4997e-02,  5.1866e-03,
         -2.2092e-01, -1.3423e-01, -1.8134e-01, -2.8010e-01, -3.9149e-01,
          7.0772e-02,  1.2589e-01, -9.1822e-02,  8.8315e-02, -5.9903e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -9.5846e-02,  5.9696e-01,  5.7383e-03, -5.8385e-02,
          1.3314e-01, -1.8103e-01,  1.0410e-02, -1.6154e-01,  3.1481e-02,
          1.2426e-01, -1.6059e+00,  4.8931e-02,  1.4034e-01,  3.6683e-01],
        [-5.2546e-02,  2.2773e-01,  1.3937e-01, -1.8170e-02,  2.9425e-02,
         -9.0998e-02,  5.4933e-01, -2.9619e-01,  1.6831e-03, -2.7503e-01,
          2.7892e-01, -2.3619e-01,  1.9504e-01, -2.7069e-01, -1.2482e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([ 0.1604, -0.0498,  0.0130, -0.1203,  0.0259,  0.2833,  0.0791,  0.0196,
        -0.0220, -0.1799, -0.2375, -0.1683,  0.0653, -0.1520, -0.1776, -0.0746],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.0949,  0.0331, -1.0681,  ...,  0.0713,  0.2021, -0.0636],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.0786,  0.0590,  0.0235,  ...,  0.1302, -0.9773, -0.2507],
        ...,
        [-0.0398, -0.0335, -0.9813,  ...,  0.0371,  0.0418, -0.0237],
        [ 0.1183, -0.2251, -0.2857,  ...,  0.0834, -0.2239,  0.1592],
        [-0.1462,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([ 0.4116, -0.2566, -0.0661,  0.5380, -0.3874, -0.2312,  0.9178,  1.0366,
         0.7967,  0.0793, -0.2188, -0.0245, -0.3388, -0.2520, -0.3541,  0.4224,
         0.3793, -0.1532, -0.0976,  0.2365,  0.8519,  0.3110,  0.1570, -0.3418,
         0.0358, -0.2892, -0.2389,  0.4111,  0.3144, -0.3702,  0.6008,  0.4410,
        -0.3055, -0.2100, -0.4215,  0.1152,  0.1863, -0.0391,  0.0884, -0.0491,
         0.0145,  0.0275,  0.0616, -0.0634, -0.1514,  0.0812,  0.6569, -0.1091,
         0.6865, -0.3969, -0.4149,  0.1019,  0.7315,  0.5820, -0.4101,  0.2217,
         0.8456,  0.6833,  0.1851, -0.0836,  0.2112,  0.7660,  0.6024, -0.1052],
       device='cuda:0')), ('layers.4.weight', tensor([[-0.1553,  0.4424,  0.1497,  ...,  0.1971,  0.3325, -0.1432],
        [-0.0601, -0.3104, -0.1296,  ...,  0.2630,  0.1485, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ...,  0.0398, -0.1166,  0.0869],
        ...,
        [ 0.2067, -0.5342, -0.0124,  ...,  0.2983, -0.0579,  0.0880],
        [ 0.3838, -0.1953, -1.1425,  ...,  0.2753,  0.2068,  0.1076],
        [ 0.4440, -0.3631, -0.6709,  ...,  0.4744,  0.0255, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([ 0.0515,  0.7116, -0.0775,  0.9479,  0.1440,  0.2793,  0.8227, -0.1354,
        -0.1363, -0.1297,  1.1952, -0.1025,  0.3279,  0.4086,  0.7093,  0.0031],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.7879,  0.1241, -0.0688, -0.2165,  0.0375, -0.7014,  0.4588, -0.0598,
          0.1745,  0.0101, -0.4061,  0.1815,  0.1213,  0.0731,  0.3258,  0.6334],
        [-0.7227,  0.0383, -0.0661, -0.0900, -0.0346, -0.7007,  0.2888, -0.0853,
         -0.1827, -0.3225, -0.3989, -0.1109, -0.1369, -0.2233,  0.4448,  0.3188],
        [-0.6743, -0.5170,  0.0726, -0.3291,  0.1051, -0.8014,  0.2752,  0.1545,
          0.2227, -0.0219, -0.3267,  0.2186, -0.3729,  0.1462,  0.5127, -0.2256],
        [-0.0953,  0.2005,  0.0706,  0.4951,  0.1210,  0.0833,  0.1774, -0.0468,
          0.1739, -0.0289,  0.5598, -0.0044, -1.3446,  0.2638,  0.5572,  0.1762],
        [-0.7178, -0.9765, -0.1530, -0.0104, -0.1277, -0.4203, -0.3941, -0.2220,
          0.2362, -0.0817, -0.1127, -0.1734, -0.3991,  0.0760,  0.5582, -0.2822],
        [-0.6034, -1.0102, -0.0231, -0.0606,  0.0485, -0.3521, -0.7799,  0.1302,
          0.1378, -0.4205, -0.2202, -0.1817, -0.3229,  0.3338,  0.4788,  0.1275],
        [-0.6479, -0.7857,  0.0409,  0.0141,  0.1579, -0.2191, -1.0012, -0.1280,
          0.0355, -0.5158, -0.3164, -0.1994,  0.1849,  0.3534,  0.3497,  0.3440]],
       device='cuda:0')), ('layers.6.bias', tensor([-0.9546, -0.2230,  0.0978,  1.3778,  0.1586, -0.0774, -0.3668],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [-0.3840612769126892, -0.11535708606243134, -0.255493700504303, -1.0914596319198608, -0.21090494096279144, -0.35125017166137695, 0.3672177791595459]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [3.143235683441162, 3.6234843730926514, 4.012430191040039, 10.41096019744873, 2.6906375885009766, 0.5435254573822021, -1.6500247716903687]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [3.097972869873047, 3.043659210205078, 2.7909083366394043, 12.533785820007324, 2.3015754222869873, 1.065809726715088, -0.6229119300842285]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02,  4.9691e-02, -1.0440e+00, -2.2807e-03,  1.2172e-01,
         -4.9938e-02,  1.3397e-01, -2.0150e-02, -5.2986e-02,  1.6237e-03,
          3.0139e-02,  1.1538e+00, -5.0832e-01,  2.7973e-01,  2.8697e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -1.3158e-01, -1.0235e+00, -4.7349e-02,  5.2314e-02,
          7.6291e-01, -2.6812e-01, -4.7349e-01, -6.1619e-01, -3.4842e-01,
         -3.5620e-01, -2.3884e-01, -3.9129e-01, -1.7286e-01, -1.0775e-01],
        [-3.2809e-02, -1.1133e-01,  2.2148e-01, -3.0397e+00,  2.2886e-01,
         -3.1935e-01,  1.5724e-01, -3.4082e-02,  2.1697e-02,  3.8551e-02,
          1.6855e-01,  2.5056e-02, -3.8094e-02,  2.9282e-01,  4.9474e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  7.7208e-02, -3.2931e-01,  9.3776e-03, -1.9203e-01,
         -1.0529e+00, -1.1795e-01, -7.9017e-01, -4.1339e-01, -6.3064e-01,
         -4.3738e-01, -6.2258e-01, -3.7029e-01, -7.3560e-04, -2.6050e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -1.9389e-01, -2.9868e-01,  2.2114e-01, -8.9484e-01,
          1.7527e-01, -6.4325e-01,  2.8541e-02, -7.5329e-01,  9.2772e-02,
         -7.1852e-01,  2.0498e-01, -1.1195e+00,  1.0323e-01, -6.4863e-03],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -1.8761e-01,  1.0927e+00,  1.6101e-02, -3.2382e-02,
          8.8187e-02, -2.7434e-01,  2.9931e-02, -1.3010e-01, -2.5615e-01,
         -1.9096e-02, -1.7809e+00,  1.4070e-01,  2.3210e-01,  4.5859e-01],
        [-5.2546e-02,  2.8556e-01,  5.7007e-02, -1.6646e-02,  1.4746e-01,
         -1.3701e-01,  4.0865e-01, -3.3771e-01,  6.7870e-01, -4.2030e-01,
          1.0129e+00, -3.9816e-01,  3.2156e-01, -3.2852e-01, -1.8265e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.1188, -0.0498,  0.0668, -0.2167,  0.0259,  0.3472,  0.0791,  0.0196,
        -0.2205, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.2693, -0.0168],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1872,  0.0331, -1.8018,  ...,  0.0713,  0.1470,  0.0499],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.4514,  0.0590,  0.0350,  ...,  0.1302, -0.8169, -0.2939],
        ...,
        [-0.2572, -0.0335, -1.5258,  ...,  0.0371, -0.1957,  0.1582],
        [-0.3026, -0.2251,  0.3610,  ...,  0.0834, -0.5789,  0.1452],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([ 0.2815, -0.2566, -0.2485,  0.0121, -0.4884, -0.2948,  0.8665,  1.1353,
         0.9311, -0.2141, -0.2605,  0.0074, -0.4000, -0.3588, -0.3541,  0.4737,
        -0.0171, -0.1532, -0.0976, -0.2588,  1.0164,  0.3961, -0.3496, -0.3973,
        -0.0145, -0.3528, -0.1990,  0.6518,  0.5241, -0.4337,  0.3666,  0.3441,
        -0.3055, -0.2100, -0.8299,  0.3750, -0.1054, -0.1004, -0.0095, -0.0784,
        -0.0490, -0.1921, -0.2002,  0.3756, -0.2724,  0.5016,  0.9130, -0.1994,
         0.7938, -0.6422, -0.8153,  0.4324,  0.8161,  0.4409, -0.4101,  0.2969,
         0.9688,  0.6706, -0.6009, -0.0836,  0.0349,  0.7426,  0.4392, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.1371,  0.4424,  0.0313,  ...,  0.2933,  0.0785, -0.0872],
        [-0.2938, -0.3104, -0.5800,  ...,  0.1274,  0.4793, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ...,  0.0398, -0.1166,  0.0869],
        ...,
        [ 0.2272, -0.5342,  0.1524,  ...,  0.3855,  0.1936,  0.0321],
        [ 0.3820, -0.1953, -1.3725,  ...,  0.2373,  0.2595,  0.1076],
        [ 0.2790, -0.3631, -1.4532,  ...,  0.4196,  0.4829, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([ 0.3833,  0.5077, -0.0775,  1.2085,  0.1440,  0.4026,  1.3315,  0.0392,
        -0.1363, -0.1297,  1.5883, -0.1025,  0.3637,  0.5229,  0.8024, -0.2229],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.9503,  0.0892, -0.0688, -0.4716,  0.0375, -0.6755,  0.2514, -0.7005,
          0.1745,  0.0101, -0.9266,  0.1815,  0.4852,  0.0865,  0.3539,  0.9702],
        [-1.0985, -0.5501, -0.0661, -0.2046, -0.0346, -0.8808,  0.2517, -0.2456,
         -0.1827, -0.3225, -0.6724, -0.1109, -0.1795, -0.2406,  0.5273,  0.3869],
        [-1.0795, -0.7914,  0.0726, -0.4761,  0.1051, -0.8198,  0.1732, -0.2898,
          0.2227, -0.0219, -0.5010,  0.2186, -0.5072, -0.2560,  0.5499, -0.4056],
        [-0.2703,  0.4239,  0.0706,  0.7013,  0.1210,  0.3350,  0.3061, -0.5335,
          0.1739, -0.0289,  0.7320, -0.0044, -1.7170,  0.4050,  0.7421,  0.2143],
        [-0.8393, -1.8335, -0.1530,  0.0214, -0.1277, -0.7725, -0.8015, -1.0254,
          0.2362, -0.0817, -0.0198, -0.1734, -0.4826,  0.3639,  0.5429, -0.2110],
        [-0.8315, -0.5254, -0.0231,  0.0690,  0.0485, -0.4887, -1.1582, -0.3100,
          0.1378, -0.4205, -0.2773, -0.1817, -0.1987,  0.5833,  0.4637,  0.0877],
        [-0.5982,  0.4892,  0.0409,  0.0612,  0.1579, -0.2039, -1.4564, -0.1432,
          0.0355, -0.5158, -0.4725, -0.1994,  0.0970,  0.6971,  0.4547,  0.2222]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.3865, -0.4653,  0.0577,  1.8807,  0.3857, -0.0389, -0.4985],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [2.76668381690979, 2.4942915439605713, 1.9993036985397339, 0.8071906566619873, 2.367769956588745, 2.4174060821533203, 2.9546735286712646]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [6.456150054931641, 7.459848403930664, 6.078888893127441, 13.682971954345703, 2.9060258865356445, 0.7662253379821777, -0.8481350541114807]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [2.150569200515747, 4.522170543670654, 4.5477752685546875, 12.30424976348877, 1.6665786504745483, -1.1595258712768555, -3.172459125518799]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -1.1944e-01, -1.2132e+00, -4.1677e-03, -3.7621e-02,
         -2.7786e-02,  1.6277e-01, -4.9310e-02,  1.3426e-01, -4.1944e-02,
          4.3529e-02,  1.5481e+00, -2.8209e-01,  4.4886e-01,  4.5611e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -2.1869e-01, -1.0470e+00,  5.5029e-03,  7.5008e-02,
          8.7417e-01, -1.6389e-01, -8.2424e-01, -3.6947e-01, -4.4459e-01,
         -3.1107e-01, -8.6725e-01, -3.7155e-01, -8.5756e-02, -2.0643e-02],
        [-3.2809e-02, -1.4764e-01,  2.0309e-01, -3.2740e+00,  2.6516e-01,
         -2.8305e-01,  1.9354e-01,  2.2213e-03,  5.8000e-02,  7.4855e-02,
          2.0485e-01,  6.1359e-02, -1.7904e-03,  3.2912e-01,  5.3105e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.3542e-01, -4.8415e-01,  6.7279e-02,  5.5164e-03,
         -1.2744e+00, -3.3920e-02, -9.2126e-01, -2.6137e-01, -5.7537e-01,
         -4.5647e-01, -7.0925e-01, -4.2851e-01, -5.8952e-02, -3.1872e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -1.5695e-01, -2.1258e-01,  2.1744e-01, -8.1905e-01,
          2.4825e-01, -5.1950e-01,  8.4380e-02, -8.1760e-01,  4.4039e-01,
         -1.2756e+00,  2.2097e-01, -8.9669e-01,  6.6294e-02, -4.3419e-02],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -2.0621e-01,  1.3213e+00,  3.6418e-02, -1.8693e-01,
          7.4292e-02, -2.8176e-01,  8.7983e-02, -4.8421e-01, -5.0114e-01,
          2.4394e-01, -1.9272e+00,  1.5930e-01,  2.5071e-01,  4.7719e-01],
        [-5.2546e-02,  3.2562e-01, -3.4266e-02,  3.8445e-02, -7.1078e-02,
         -1.1033e-01,  2.4578e-01, -4.8690e-01,  9.5938e-01, -6.6258e-01,
          1.2983e+00, -3.7594e-01,  3.9243e-01, -3.6858e-01, -2.2271e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.2879, -0.0498, -0.0203, -0.2530,  0.0259,  0.4054,  0.0791,  0.0196,
        -0.1836, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.2879,  0.0233],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5512,  0.0590, -0.0742,  ...,  0.1302, -0.9176, -0.0675],
        ...,
        [-0.5180, -0.0335, -1.3877,  ...,  0.0371, -0.2733,  0.3254],
        [-0.3752, -0.2251,  0.4342,  ...,  0.0834, -0.5348,  0.2787],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -0.6794, -0.0366, -0.7719, -0.2948,  1.1174,  1.3810,
         1.2087, -0.4474, -0.5626, -0.4347, -0.4000, -0.3588, -0.3541,  0.5757,
        -0.3621, -0.1532, -0.0976, -0.6854,  1.1837,  0.1527, -0.8481, -0.3973,
        -0.0145, -0.3528, -0.2308,  0.8284,  0.6023, -0.4337,  0.4223,  0.7932,
        -0.3055, -0.2114, -0.8299,  0.2234, -0.3561, -0.1073, -0.3974, -0.1581,
        -0.0490, -0.2556, -0.4535,  0.4283, -0.2724,  1.0701,  1.1806, -0.1994,
         0.4094, -0.7058, -1.2039,  0.1976,  0.8653,  0.6282, -0.4101, -0.0108,
         1.2058,  0.9582, -1.0934, -0.0836,  0.1808,  1.0032,  0.3034, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.2074,  ...,  0.1075, -0.1718, -0.0872],
        [-0.2348, -0.3104, -0.4879,  ...,  0.0901,  0.3558, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ...,  0.0398, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.0579,  ...,  0.5591,  0.4129,  0.0321],
        [ 0.1699, -0.1953, -1.5040,  ...,  0.3369,  0.2530,  0.1076],
        [ 0.2073, -0.3631, -1.8898,  ...,  0.3461,  0.3657, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([ 0.3566,  0.5412, -0.0775,  1.5828,  0.1571,  0.2639,  1.6082,  0.1646,
        -0.1363, -0.1297,  1.9308, -0.1025,  0.3731,  0.4095,  1.1043, -0.0541],
       device='cuda:0')), ('layers.6.weight', tensor([[-1.0225, -0.3553, -0.0688, -0.4557,  0.0375, -0.1890,  0.4701, -0.3508,
          0.1745,  0.0101, -1.5392,  0.1815,  0.5560,  0.1942,  0.4612,  0.9409],
        [-1.2481, -1.0017, -0.0661, -0.3641, -0.0346, -0.7224,  0.1923, -0.3382,
         -0.1827, -0.3225, -1.2952, -0.1109, -0.0253, -0.1010,  0.5905,  0.5118],
        [-1.3151, -1.0291,  0.0726, -0.3823,  0.1051, -1.4014,  0.4510, -0.8947,
          0.2227, -0.0219, -0.5108,  0.2186, -0.5223, -0.2541,  0.7261, -0.1757],
        [-0.5239,  0.4141,  0.0706,  0.9751,  0.1427,  0.3933,  0.3837, -1.4085,
          0.1739, -0.0289,  0.7940, -0.0044, -1.5794,  0.4138,  0.9492,  0.4598],
        [-0.7636, -2.3961, -0.1530,  0.2446, -0.1277, -1.2326, -0.6574, -1.1419,
          0.2362, -0.0817,  0.1788, -0.1734, -0.5577,  0.4077,  0.6292, -0.9060],
        [-0.4086,  0.1796, -0.0231, -0.0212,  0.0485, -0.4493, -1.2908, -1.0716,
          0.1378, -0.4205, -0.3885, -0.1817, -0.0965,  0.6202,  0.4489, -0.4478],
        [-0.2723,  1.3103,  0.0409, -0.1228,  0.1579, -0.1208, -1.5216, -0.7819,
          0.0355, -0.5158, -0.8771, -0.1994,  0.2478,  0.9132,  0.4951,  0.2714]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.6390, -0.6939,  0.3249,  2.0741,  0.7811,  0.1705, -0.5879],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [5.533432960510254, 5.325032711029053, 5.616429805755615, 5.142621994018555, 4.915857791900635, 4.414464950561523, 5.612834930419922]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [2.3039467334747314, 3.754517078399658, 7.013513565063477, 15.014578819274902, 5.7454681396484375, 2.1757302284240723, 1.9091770648956299]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [1.890939712524414, 2.5471043586730957, 5.702752113342285, 12.26845932006836, 2.674776792526245, -1.5676307678222656, -2.575214147567749]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -1.9080e-01, -1.2845e+00, -6.5569e-02,  3.2567e-02,
         -7.8514e-02,  1.2287e-01, -1.9427e-02,  4.6785e-02,  8.4526e-02,
          4.6329e-02,  1.8029e+00, -3.2677e-01,  5.2021e-01,  5.2746e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -2.3696e-01, -1.0633e+00, -1.3073e-02,  1.8620e-01,
          9.3853e-01, -4.9850e-02, -9.7086e-01, -2.2749e-01, -8.6180e-01,
         -2.7320e-01, -1.0101e+00, -3.8336e-01, -6.7492e-02, -2.3792e-03],
        [-3.2809e-02, -1.4334e-01,  2.0680e-01, -3.3159e+00,  2.6086e-01,
         -2.8735e-01,  1.8924e-01, -2.0795e-03,  5.3699e-02,  7.0554e-02,
          2.0055e-01,  5.7058e-02, -6.0912e-03,  3.2482e-01,  5.2675e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.7904e-01, -3.5739e-01,  6.8708e-02, -2.6782e-02,
         -1.4269e+00,  2.5930e-02, -9.9783e-01, -8.1746e-02, -7.7336e-01,
         -4.2794e-01, -9.7092e-01, -4.7213e-01, -1.0257e-01, -3.6234e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -2.3066e-01, -1.3676e-01,  1.6301e-01, -7.8124e-01,
          2.5704e-01, -8.5111e-01,  2.4033e-01, -1.0693e+00,  4.0560e-01,
         -1.4336e+00,  8.3657e-02, -5.4082e-01,  1.4000e-01,  3.0289e-02],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -2.2833e-01,  1.5038e+00,  6.2233e-02, -1.9002e-01,
          2.5316e-02, -3.6199e-01,  8.8076e-02, -4.4186e-01, -5.5670e-01,
          3.2913e-01, -2.2984e+00,  1.8142e-01,  2.7283e-01,  4.9932e-01],
        [-5.2546e-02,  4.6338e-01, -1.1635e-01,  6.0614e-02, -2.4624e-02,
         -7.7725e-02,  1.6900e-01, -6.8974e-01,  8.8027e-01, -8.2447e-01,
          1.3542e+00, -2.1541e-01,  4.1858e-01, -5.0633e-01, -3.6046e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.3593, -0.0498, -0.0386, -0.2487,  0.0259,  0.4490,  0.0791,  0.0196,
        -0.2573, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.3101,  0.1610],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.4011,  0.0590, -0.1414,  ...,  0.1302, -0.9877, -0.0303],
        ...,
        [-0.5868, -0.0335, -1.5728,  ...,  0.0371, -0.5598,  0.2367],
        [-0.4988, -0.2251,  0.4709,  ...,  0.0834, -0.5417, -0.0330],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -0.8256, -0.0366, -0.8265, -0.2948,  1.2177,  1.5301,
         1.3581, -0.3383, -0.9935, -0.6724, -0.4000, -0.3588, -0.3541,  0.2882,
        -0.2530, -0.1532, -0.0976, -0.8847,  1.3688, -0.0238, -1.2006, -0.3973,
        -0.0145, -0.4163, -0.2943,  0.9135,  0.6086, -0.4337,  0.7223,  1.1592,
        -0.3055, -0.2114, -0.8299,  0.0285, -0.6709, -0.1073, -0.4614, -0.1581,
        -0.0490, -0.2556, -0.5797,  0.2840, -0.2724,  1.3826,  1.4501, -0.1994,
         0.3948, -0.7058, -1.4627,  0.2207,  0.9390,  0.8262, -0.4101, -0.2642,
         1.3217,  0.9604, -1.4547, -0.0836,  0.1052,  1.1869, -0.1227, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.2466,  ..., -0.3465,  0.0283, -0.0872],
        [-0.2348, -0.3104, -0.5604,  ..., -0.0453,  0.1187, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ...,  0.0398, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.1334,  ...,  0.6151,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.4041,  ...,  0.7076,  0.0870,  0.1076],
        [ 0.2073, -0.3631, -2.3106,  ..., -0.0134,  0.1812, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([ 0.4548,  0.5807, -0.0775,  1.7905,  0.1571,  0.2145,  1.7440,  0.2868,
        -0.1363, -0.1932,  2.0007, -0.1025,  0.6119, -0.0489,  1.2498,  0.0647],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.7282, -0.4445, -0.0688, -0.2640,  0.0375,  0.3407,  0.4360, -0.2403,
          0.1745,  0.0101, -1.9345,  0.1815,  0.6952, -0.1170,  0.5137,  0.6689],
        [-1.3640, -0.9167, -0.0661, -0.6008, -0.0346, -0.4156,  0.3779, -0.8034,
         -0.1827, -0.3225, -1.1707, -0.1109,  0.0484,  0.1001,  0.5583,  0.3926],
        [-1.6301, -1.5105,  0.0726, -0.4678,  0.1051, -1.6637,  0.3958, -1.0236,
          0.2227, -0.0219, -0.7293,  0.2186, -0.2324,  0.1824,  0.6410, -0.2833],
        [-0.8341,  0.3761,  0.0706,  1.1229,  0.1427,  0.5654,  0.3317, -2.0839,
          0.1739,  0.0346,  0.7454, -0.0044, -1.7585,  0.4315,  0.8714,  0.6441],
        [-0.7522, -2.4851, -0.1530,  0.2463, -0.1277, -1.5759, -0.8196, -1.1822,
          0.2362, -0.0817, -0.0773, -0.1734, -0.6795,  0.1068,  0.6977, -1.3413],
        [-0.3354, -0.5310, -0.0231, -0.0821,  0.0485, -0.6939, -1.1526, -1.4206,
          0.1378, -0.4205, -0.4930, -0.1817, -0.1803,  0.4195,  0.5158, -0.1743],
        [-0.0874,  1.1973,  0.0409, -0.1665,  0.1579,  0.0616, -1.4094, -1.4664,
          0.0355, -0.5158, -1.1159, -0.1994,  0.3624,  1.0259,  0.4865,  0.3601]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.1443, -0.6562,  0.4500,  2.1918,  0.7104,  0.4366, -0.6774],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [3.7572782039642334, 3.0930416584014893, 3.6723947525024414, 1.1551085710525513, 2.6177942752838135, 3.057443618774414, 3.797769546508789]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [-0.3045213222503662, -1.8544623851776123, -1.313790202140808, 7.015533447265625, 2.8891119956970215, 2.6188716888427734, 2.250905752182007]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [0.9969377517700195, -1.1930866241455078, -0.5927199125289917, 8.842148780822754, 0.19659125804901123, -1.3150219917297363, -2.5256729125976562]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -2.5901e-01, -1.3527e+00, -2.5691e-02,  6.1969e-02,
          6.8189e-02, -4.3980e-02,  2.1932e-02,  6.5349e-02,  1.0351e-01,
         -2.3406e-02,  2.0506e+00, -1.3147e-01,  5.8843e-01,  5.9568e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -3.2053e-01, -1.0769e+00, -2.7098e-02,  2.2616e-01,
          1.1075e+00,  2.7054e-01, -1.1107e+00,  1.0597e-01, -1.1042e+00,
         -2.2824e-01, -1.0656e+00, -3.5574e-01,  1.6072e-02,  8.1186e-02],
        [-3.2809e-02, -1.2258e-01,  2.3250e-01, -3.5338e+00,  2.4010e-01,
         -3.0811e-01,  1.6848e-01, -2.2841e-02,  3.2938e-02,  4.9792e-02,
          1.7979e-01,  3.6297e-02, -2.6852e-02,  3.0406e-01,  5.0598e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.2604e-01, -4.5365e-01, -4.8218e-02, -1.4176e-01,
         -1.3952e+00,  4.5502e-02, -1.2291e+00, -1.5010e-01, -9.2368e-01,
         -3.2071e-01, -9.3100e-01, -4.1913e-01, -4.9570e-02, -3.0934e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -2.6622e-01, -2.5133e-01,  1.8488e-01, -8.3883e-01,
          1.0152e-01, -6.3232e-01,  3.0827e-01, -1.3954e+00,  3.2919e-01,
         -1.6791e+00, -7.1229e-04, -3.8974e-01,  1.7556e-01,  6.5844e-02],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -2.1644e-01,  1.6271e+00,  8.3372e-02, -1.8578e-01,
          1.0909e-01, -3.4946e-01,  1.0492e-01, -5.0246e-01, -7.0105e-01,
          3.9736e-01, -2.5170e+00,  1.6953e-01,  2.6093e-01,  4.8742e-01],
        [-5.2546e-02,  5.3383e-01, -9.7038e-02,  4.5811e-02, -1.4565e-01,
         -6.1413e-02,  1.9937e-01, -7.9509e-01,  1.0510e+00, -9.5123e-01,
          1.4848e+00, -1.9346e-01,  4.4088e-01, -5.7678e-01, -4.3090e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.4275, -0.0498, -0.1222, -0.2280,  0.0259,  0.3960,  0.0791,  0.0196,
        -0.2929, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.2982,  0.2315],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.4270,  0.0590, -0.1532,  ...,  0.1302, -1.0606, -0.2794],
        ...,
        [-0.7745, -0.0335, -1.2523,  ...,  0.0371, -0.6649,  0.3408],
        [-0.4988, -0.2251,  0.5205,  ...,  0.0834, -0.5417,  0.0165],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -0.9885, -0.0366, -0.7583, -0.2948,  1.2019,  1.6768,
         1.4929, -0.4061, -1.2054, -0.9723, -0.4000, -0.3588, -0.3541,  0.0747,
         0.1380, -0.1532, -0.0976, -1.2755,  1.5243, -0.0238, -1.3546, -0.3973,
        -0.0145, -0.4163, -0.2943,  0.9842,  0.5042, -0.4337,  1.0947,  1.2657,
        -0.3055, -0.2114, -0.8299,  0.0775, -0.7782, -0.1073, -0.3514, -0.1581,
        -0.0490, -0.2556, -0.7138,  0.2173, -0.2724,  1.6681,  1.6821, -0.1994,
        -0.0155, -0.7058, -1.5409, -0.2467,  0.9683,  0.8244, -0.4101, -0.5227,
         1.3865,  0.8756, -1.8756, -0.0836,  0.0815,  1.3769, -0.0731, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.3274,  ..., -0.5942, -0.0364, -0.0872],
        [-0.2348, -0.3104, -0.5080,  ..., -0.0943,  0.1187, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ...,  0.0398, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.0148,  ...,  0.8526,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.5261,  ...,  0.9502,  0.0870,  0.1076],
        [ 0.2073, -0.3631, -2.3241,  ..., -0.0038,  0.1812, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([ 0.4049,  0.5910, -0.0775,  1.9373,  0.1571,  0.1718,  1.8158,  0.3198,
        -0.1363, -0.1932,  2.2212, -0.1025,  0.5003, -0.4515,  1.3849,  0.1923],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.9646, -0.2219, -0.0688, -0.2687,  0.0375,  0.1206,  0.5030, -0.0422,
          0.1745,  0.0101, -2.0849,  0.1815,  0.7870, -0.0498,  0.5704,  0.3659],
        [-1.3368, -0.9216, -0.0661, -0.5913, -0.0346, -0.2158,  0.4308, -1.4491,
         -0.1827, -0.3225, -1.4962, -0.1109,  0.2154,  0.2766,  0.6257,  0.3764],
        [-1.6432, -2.1872,  0.0726, -0.3788,  0.1051, -1.3363,  0.4794, -1.1515,
          0.2227, -0.0219, -1.0605,  0.2186, -0.3035,  0.4168,  0.5727, -0.4671],
        [-1.0632,  0.2830,  0.0706,  1.1741,  0.1427,  0.7239,  0.2084, -2.4511,
          0.1739,  0.0346,  0.6226, -0.0044, -1.6681,  0.3967,  0.8877,  0.7718],
        [-0.8209, -3.0647, -0.1530,  0.2342, -0.1277, -1.8874, -0.6673, -1.5578,
          0.2362, -0.0817,  0.2139, -0.1734, -0.7764,  0.0250,  0.7649, -1.4971],
        [-0.3440, -0.7521, -0.0231, -0.2189,  0.0485, -0.8079, -1.4347, -1.7473,
          0.1378, -0.4205, -0.7890, -0.1817, -0.1348,  0.4679,  0.5875,  0.0447],
        [ 0.0086,  0.5801,  0.0409, -0.4550,  0.1579,  0.1975, -1.3222, -1.8093,
          0.0355, -0.5158, -1.3530, -0.1994,  0.5746,  1.1824,  0.5316,  0.2442]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.3938, -0.6921,  0.6364,  2.2088,  0.9208,  0.6623, -0.8582],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [5.170310020446777, 5.551089286804199, 4.763554096221924, 4.809104919433594, 5.256383419036865, 5.455723285675049, 5.68822717666626]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [4.454164505004883, 5.8491668701171875, 5.947452068328857, 12.1460599899292, 7.204165458679199, 3.41109299659729, 2.2649898529052734]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [3.854418992996216, 4.341737747192383, 4.6304707527160645, 12.282344818115234, 4.579077243804932, -0.8920362591743469, -1.7533345222473145]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -3.0462e-01, -1.3983e+00, -1.6607e-02,  1.9353e-02,
         -3.5939e-02,  3.4452e-03, -2.1640e-02, -2.5891e-02, -1.1018e-02,
         -1.1624e-01,  2.2554e+00,  4.2833e-02,  6.3404e-01,  6.4128e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -3.8023e-01, -1.1518e+00, -2.6183e-03,  1.8907e-01,
          1.2538e+00,  3.3526e-01, -1.2072e+00,  1.0512e-01, -1.1150e+00,
         -2.0899e-01, -1.0271e+00, -3.1456e-01,  7.5779e-02,  1.4089e-01],
        [-3.2809e-02, -1.4707e-01,  2.0312e-01, -3.5360e+00,  2.6460e-01,
         -2.8362e-01,  1.9298e-01,  1.6532e-03,  5.7432e-02,  7.4286e-02,
          2.0428e-01,  6.0791e-02, -2.3584e-03,  3.2855e-01,  5.3048e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.5268e-01, -4.5052e-01,  2.5063e-02, -2.2211e-03,
         -1.4923e+00, -3.9933e-02, -1.1490e+00, -1.2242e-01, -1.1542e+00,
         -3.7644e-01, -9.5609e-01, -4.4577e-01, -7.6214e-02, -3.3599e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -3.4823e-01, -2.6537e-01,  8.3585e-02, -9.8280e-01,
          8.9046e-02, -8.5864e-01,  2.9023e-01, -1.4588e+00,  3.9025e-01,
         -1.7468e+00, -1.2350e-01, -6.8092e-01,  2.5757e-01,  1.4786e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -2.3359e-01,  1.7183e+00,  2.3462e-02, -2.0895e-01,
          2.3050e-02, -2.8347e-01,  1.2016e-01, -4.8969e-01, -7.9461e-01,
          5.0997e-01, -2.7506e+00,  1.8668e-01,  2.7808e-01,  5.0457e-01],
        [-5.2546e-02,  5.5535e-01, -5.6782e-02,  1.1970e-02, -1.5263e-01,
         -8.3914e-02,  5.2870e-02, -8.6464e-01,  1.2656e+00, -1.0235e+00,
          1.6511e+00, -2.6279e-01,  5.5546e-01, -5.9830e-01, -4.5243e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.4731, -0.0498, -0.1819, -0.2525,  0.0259,  0.4226,  0.0791,  0.0196,
        -0.3749, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.3153,  0.2530],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5218,  0.0590, -0.2703,  ...,  0.1302, -1.0606,  0.1053],
        ...,
        [-0.8962, -0.0335, -1.2784,  ...,  0.0371, -0.6907,  0.3936],
        [-0.4988, -0.2251,  0.4132,  ...,  0.0834, -0.5417, -0.0717],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.1831, -0.0366, -0.6521, -0.2948,  0.8528,  1.5584,
         1.7658, -0.3029, -1.5018, -1.1944, -0.4000, -0.3588, -0.3541, -0.0988,
         0.3257, -0.1532, -0.0976, -1.4760,  1.2140, -0.0238, -1.5855, -0.4552,
        -0.0145, -0.4163, -0.2943,  0.6842,  0.6513, -0.4337,  1.1708,  1.4055,
        -0.3055, -0.2749, -0.8935,  0.0604, -0.3214, -0.1073, -0.1370, -0.1581,
        -0.0490, -0.2556, -0.2389, -0.0420, -0.2724,  2.0149,  1.9990, -0.1994,
        -0.0155, -0.7693, -1.7584, -0.7695,  0.5972,  0.5152, -0.4101, -0.9110,
         1.6280,  0.7537, -2.2852, -0.0836, -0.0060,  1.4881, -0.1778, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.2575,  ..., -0.7026, -0.1023, -0.0872],
        [-0.2348, -0.3104, -0.7207,  ...,  0.1351,  0.1187, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ...,  0.0398, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.2549,  ...,  0.8332,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.2893,  ...,  1.0764,  0.1844,  0.1076],
        [ 0.2073, -0.3631, -2.1799,  ..., -0.2009,  0.1628, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([ 0.3208,  0.4212, -0.0775,  1.9685,  0.1293,  0.0814,  2.1242,  0.3434,
        -0.1363, -0.1932,  2.3031, -0.1025,  0.8712, -0.6809,  1.7617,  0.2412],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.6595,  0.5792, -0.0688, -0.6499,  0.0375, -0.2121,  0.7297,  0.3296,
          0.1745,  0.0101, -2.3694,  0.1815,  1.5477, -0.0077,  0.6466,  0.3798],
        [-1.3098, -1.3150, -0.0661, -0.6131, -0.0346, -0.7386,  0.4633, -1.6095,
         -0.1827, -0.3225, -1.7207, -0.1109,  0.1229,  0.2596,  0.6191,  0.0995],
        [-1.6210, -2.2143,  0.0726, -0.2848,  0.1051, -1.6402,  0.6433, -1.6236,
          0.2227, -0.0219, -1.5745,  0.2186, -0.2683,  0.3430,  0.5092, -0.3259],
        [-1.1605, -0.1205,  0.0706,  1.0885,  0.1261,  0.7621,  0.2810, -2.7000,
          0.1739,  0.0346,  0.5288, -0.0044, -1.6484,  0.3462,  0.8820,  0.9200],
        [-0.8931, -2.1737, -0.1530,  0.0188, -0.1277, -2.0973, -0.7886, -1.8042,
          0.2362, -0.0817, -0.0515, -0.1734, -0.4116,  0.0909,  0.7742, -0.8297],
        [-0.4765, -0.3246, -0.0231, -0.1669, -0.0150, -0.7860, -1.3323, -2.1102,
          0.1378, -0.4205, -0.8947, -0.1817,  0.0438,  0.3788,  0.6122, -0.0808],
        [-0.0572,  0.3035,  0.0409, -0.5010,  0.1579,  0.4625, -1.1479, -2.2495,
          0.0355, -0.5158, -1.5928, -0.1994, -0.0447,  1.2362,  0.4779,  0.3348]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.4012, -0.2359,  0.8005,  2.3807,  0.8799,  0.5401, -1.1962],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [3.8543152809143066, 2.9290874004364014, 2.4139323234558105, 3.7625513076782227, 3.813241720199585, 4.6825408935546875, 4.69901704788208]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [5.159116268157959, 5.03832483291626, 4.181339740753174, 11.082901954650879, 7.405862808227539, 5.286805152893066, 3.1238040924072266]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [6.470118522644043, 4.919236183166504, 4.622889995574951, 14.075504302978516, 5.605633735656738, 1.7994972467422485, -0.21820688247680664]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.3202, -1.4139, -0.0773, -0.1893, -0.0047, -0.1118, -0.0594,
         -0.1239, -0.0583,  0.0545,  2.4417,  0.1423,  0.6496,  0.6569],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.3891, -1.1611,  0.0178,  0.1237,  1.2740,  0.3410, -1.3387,
          0.0954, -1.3517, -0.2263, -1.0884, -0.3097,  0.0846,  0.1498],
        [-0.0328, -0.1313,  0.2085, -3.5056,  0.2488, -0.2994,  0.1772, -0.0141,
          0.0416,  0.0585,  0.1885,  0.0450, -0.0182,  0.3128,  0.5147],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.1389, -0.4364, -0.0511,  0.0209, -1.6070,  0.1856, -1.1967,
         -0.1283, -1.3043, -0.3627, -0.9187, -0.4320, -0.0624, -0.3222],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.3529, -0.1583,  0.1140, -0.7764,  0.2592, -0.8995,  0.3733,
         -1.3628,  0.3650, -2.0341,  0.1026, -0.8550,  0.2622,  0.1525],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.2514,  1.8706,  0.0815, -0.2280,  0.1133, -0.3764,  0.1468,
         -0.5720, -0.8882,  0.5622, -2.9999,  0.2045,  0.2959,  0.5224],
        [-0.0525,  0.5760, -0.0191,  0.0151,  0.0300, -0.1146,  0.0192, -0.8086,
          1.2680, -1.1690,  1.8322, -0.3436,  0.5979, -0.6190, -0.4731]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.4887, -0.0498, -0.1907, -0.2367,  0.0259,  0.4089,  0.0791,  0.0196,
        -0.3795, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.3331,  0.2737],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5874,  0.0590, -0.3338,  ...,  0.1302, -1.0375,  0.1413],
        ...,
        [-1.0080, -0.0335, -0.9079,  ...,  0.0371, -0.7124,  0.1317],
        [-0.4988, -0.2251,  0.5601,  ...,  0.0834, -0.5979, -0.0595],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.3462, -0.0366, -0.8675, -0.2948,  0.6896,  1.6146,
         1.7474, -0.1157, -1.5481, -1.5017, -0.4000, -0.3588, -0.3541,  0.0869,
         0.5302, -0.1532, -0.0976, -1.6406,  1.1116, -0.0238, -1.8787, -0.4552,
        -0.0145, -0.4163, -0.2943,  0.4290,  0.5591, -0.4337,  1.1191,  1.6669,
        -0.3055, -0.2749, -0.8935, -0.0732,  0.0209, -0.1073, -0.0431, -0.1581,
        -0.0490, -0.2556,  0.0656, -0.1216, -0.2724,  2.1510,  2.0899, -0.1994,
        -0.0155, -0.7693, -1.9090, -0.9664,  0.4856,  0.6343, -0.4101, -1.2507,
         1.5595,  0.9472, -2.6179, -0.0836,  0.0960,  1.6633, -0.0682, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.1215,  ..., -0.9323, -0.2582, -0.0872],
        [-0.2348, -0.3104, -0.5795,  ...,  0.0088, -0.0061, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.3121,  ...,  0.7437,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.4998,  ...,  1.2678,  0.2619,  0.1076],
        [ 0.2073, -0.3631, -2.1319,  ..., -0.3514,  0.1146, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([ 0.1965,  0.3872, -0.1253,  2.2025,  0.0194,  0.1995,  2.2158,  0.1998,
        -0.1363, -0.1932,  2.4651, -0.1025,  0.9367, -0.8888,  1.9904,  0.2646],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.7757,  0.6265, -0.0688, -0.6463,  0.1003, -0.3445,  0.6018,  0.4088,
          0.1745,  0.0101, -2.1911,  0.1815,  1.6290,  0.0810,  0.6669,  0.5322],
        [-1.2002, -1.6285, -0.0661, -0.8301,  0.2061, -0.6013,  0.4948, -1.7588,
         -0.1827, -0.3225, -1.8237, -0.1109,  0.1424,  0.3631,  0.5851,  0.1495],
        [-1.7027, -2.3502,  0.0726, -0.3141, -0.0979, -1.7561,  0.7621, -1.4591,
          0.2227, -0.0219, -1.9507,  0.2186, -0.6204,  0.6455,  0.4607,  0.1004],
        [-1.2571, -0.3321,  0.0147,  1.0852,  0.0695,  0.9060,  0.3317, -3.0816,
          0.1739,  0.0346,  0.5816, -0.0044, -1.8507,  0.3325,  0.8908,  1.0749],
        [-0.9964, -1.0771, -0.1530, -0.1574, -0.2642, -2.1943, -1.0487, -2.2022,
          0.2362, -0.0817, -0.2278, -0.1734, -0.2729,  0.0943,  0.8019, -0.8754],
        [-0.6005, -0.2366, -0.0231, -0.1857, -0.3425, -0.8615, -1.5095, -2.5189,
          0.1378, -0.4205, -0.8747, -0.1817,  0.1601,  0.3014,  0.5579, -0.1523],
        [ 0.1111,  0.1192,  0.0409, -0.5235,  0.0233,  0.6176, -1.0901, -2.3487,
          0.0355, -0.5158, -1.8298, -0.1994, -0.2830,  1.1679,  0.3699,  0.5318]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.6457, -0.1750,  1.1583,  2.6513,  0.7997,  0.3856, -1.2396],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [3.2042927742004395, 2.899709701538086, 2.0610032081604004, 4.867140769958496, 4.557492733001709, 4.148262977600098, 3.58878755569458]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.669210433959961, 8.98796558380127, 8.839001655578613, 15.720428466796875, 7.672062397003174, 2.3531925678253174, 0.3561335802078247]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.794650077819824, 10.195096969604492, 10.683560371398926, 16.692670822143555, 6.641627788543701, 0.5257875323295593, -1.2368848323822021]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.3960, -1.4897, -0.0508, -0.1233,  0.0565, -0.2248, -0.0445,
         -0.2737, -0.2028,  0.0604,  2.5144,  0.0350,  0.7255,  0.7327],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.4618, -1.2816,  0.0204,  0.1173,  1.3074,  0.3489, -1.3951,
          0.1811, -1.2882, -0.1680, -1.1250, -0.3009,  0.1574,  0.2225],
        [-0.0328, -0.1028,  0.2347, -3.6758,  0.2203, -0.3279,  0.1487, -0.0426,
          0.0132,  0.0300,  0.1600,  0.0165, -0.0466,  0.2843,  0.4862],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.1702, -0.4479, -0.0799,  0.0691, -1.6327,  0.1338, -1.3710,
         -0.0622, -1.5181, -0.3940, -0.8374, -0.4633, -0.0937, -0.3535],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.3951, -0.0920,  0.1531, -0.6898,  0.2047, -0.9797,  0.3891,
         -1.4203,  0.4894, -1.9751, -0.0524, -0.9534,  0.3044,  0.1947],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.2462,  2.0146,  0.0350, -0.2718,  0.0770, -0.5009,  0.0652,
         -0.5659, -0.9413,  0.5394, -3.2423,  0.1993,  0.2907,  0.5172],
        [-0.0525,  0.6284, -0.0817, -0.0091, -0.0602, -0.0759,  0.0873, -0.8799,
          1.2424, -1.2570,  2.1530, -0.2778,  0.5826, -0.6713, -0.5255]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.5645, -0.0498, -0.2635, -0.2082,  0.0259,  0.4402,  0.0791,  0.0196,
        -0.4217, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.3279,  0.3260],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6972,  0.0590, -0.4048,  ...,  0.1302, -1.0155,  0.2169],
        ...,
        [-0.9423, -0.0335, -1.0577,  ...,  0.0371, -0.7848,  0.1066],
        [-0.4988, -0.2251,  0.4143,  ...,  0.0834, -0.6614, -0.2249],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -1.3427e+00, -3.6639e-02, -1.0007e+00,
        -2.9477e-01,  7.4861e-01,  1.8770e+00,  1.7404e+00, -5.8141e-02,
        -1.5481e+00, -1.5264e+00, -4.0004e-01, -3.5885e-01, -3.5407e-01,
         1.3116e-01,  6.6459e-01, -1.5324e-01, -9.7591e-02, -1.6370e+00,
         1.0138e+00, -2.3760e-02, -2.1310e+00, -4.5524e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01,  4.5342e-01,  7.4634e-01, -4.3375e-01,
         1.1840e+00,  1.7172e+00, -3.0549e-01, -2.7489e-01, -8.9347e-01,
         2.2755e-03,  1.8409e-01, -1.0726e-01, -1.3552e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -9.2734e-02,  5.1139e-02, -2.7245e-01,
         2.1671e+00,  2.0844e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -2.0302e+00, -1.1112e+00,  4.7003e-01,  6.5699e-01, -4.1007e-01,
        -1.4495e+00,  1.5332e+00,  1.0725e+00, -2.8995e+00, -8.3575e-02,
         1.2713e-01,  1.8399e+00, -2.2071e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.2156,  ..., -1.0435, -0.1198, -0.0872],
        [-0.2348, -0.3104, -0.8403,  ..., -0.0034,  0.1018, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.3827,  ...,  0.5927,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.6617,  ...,  1.1939,  0.2125,  0.1076],
        [ 0.2073, -0.3631, -2.1874,  ..., -0.6537,  0.1146, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.0132,  0.2478, -0.1253,  2.3503,  0.0194,  0.0578,  2.2805,  0.0229,
        -0.1337, -0.1932,  2.5275, -0.1025,  0.9130, -0.9944,  2.1914,  0.2916],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.8226,  0.6514, -0.0688, -0.6220,  0.1003, -0.6144,  0.4999,  0.5384,
          0.1752,  0.0101, -1.9745,  0.1815,  1.6539,  0.0481,  0.6849,  0.4723],
        [-1.3798, -1.6575, -0.0661, -0.7902,  0.2061, -1.0932,  0.5824, -2.0148,
         -0.1249, -0.3225, -1.9052, -0.1109,  0.2652,  0.2215,  0.5032,  0.1792],
        [-1.7330, -2.2207,  0.0726, -0.1374, -0.0979, -1.9100,  0.6765, -1.3180,
          0.0803, -0.0219, -2.4203,  0.2186, -0.4495,  0.4684,  0.2802,  0.2474],
        [-1.2741, -0.0658,  0.0147,  0.9867,  0.0695,  0.8907,  0.2271, -3.6995,
          0.2533,  0.0346,  0.3315, -0.0044, -2.0804,  0.3958,  0.9579,  1.1652],
        [-1.0435, -0.9694, -0.1530, -0.1002, -0.2642, -2.0573, -1.2591, -2.2792,
          0.2781, -0.0817, -0.2519, -0.1734, -0.5763,  0.1014,  0.9239, -0.9103],
        [-0.8386, -0.4226, -0.0231, -0.2901, -0.3425, -1.1045, -1.5577, -2.5950,
          0.0147, -0.4205, -0.8256, -0.1817,  0.0485,  0.3731,  0.5271, -0.0898],
        [ 0.2451,  0.1848,  0.0409, -0.5106,  0.0233,  1.0430, -1.0899, -2.3550,
         -0.0252, -0.5158, -1.8928, -0.1994, -0.3143,  1.2373,  0.3571,  0.3654]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.8116, -0.1951,  1.3277,  2.6651,  0.8765,  0.2722, -1.1315],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [4.718388557434082, 3.988276243209839, 3.8544869422912598, 4.5165114402771, 4.693175315856934, 4.768993854522705, 5.622717380523682]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.530513763427734, 8.316849708557129, 6.609128475189209, 18.052690505981445, 12.704063415527344, 5.772632598876953, 4.458823204040527]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.670923233032227, 8.373076438903809, 5.738595008850098, 17.689472198486328, 8.92620849609375, 0.48888176679611206, 0.5297574996948242]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -3.7579e-01, -1.4695e+00,  3.9990e-02, -3.0273e-02,
          5.7827e-02, -2.4498e-01, -3.8878e-02, -1.1538e-01, -2.6902e-01,
          2.3270e-01,  2.6808e+00,  1.5029e-01,  7.0521e-01,  7.1246e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -4.5500e-01, -1.2828e+00,  3.1498e-03,  2.4927e-01,
          1.4300e+00,  4.6934e-01, -1.3882e+00,  7.7728e-02, -1.7356e+00,
          5.6038e-03, -1.2582e+00, -3.0771e-01,  1.5054e-01,  2.1565e-01],
        [-3.2809e-02, -2.5846e-01,  7.7570e-02, -3.5803e+00,  3.7599e-01,
         -1.7222e-01,  3.0437e-01,  1.1305e-01,  1.6883e-01,  1.8568e-01,
          3.1568e-01,  1.7219e-01,  1.0904e-01,  4.3995e-01,  6.4187e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.7991e-01, -1.6653e-01, -4.5882e-01,  9.8879e-02,
         -1.5358e+00,  1.8426e-01, -1.3840e+00, -7.5288e-02, -1.6281e+00,
         -4.0367e-01, -8.4313e-01, -4.7300e-01, -1.0344e-01, -3.6321e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -4.8235e-01, -2.6451e-02,  2.2068e-01, -1.2367e+00,
          2.2252e-01, -9.3431e-01,  2.9472e-01, -1.4265e+00,  3.8134e-01,
         -2.0833e+00,  5.7300e-02, -9.4179e-01,  3.9169e-01,  2.8198e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -3.1105e-01,  2.0795e+00,  7.4919e-02, -2.5622e-01,
          9.7979e-02, -3.4963e-01,  1.0165e-01, -5.6017e-01, -9.8381e-01,
          5.9381e-01, -3.4624e+00,  2.6414e-01,  3.5554e-01,  5.8204e-01],
        [-5.2546e-02,  6.5930e-01, -2.6810e-01,  8.6420e-02, -1.5695e-01,
         -7.9198e-02,  6.6621e-02, -9.2004e-01,  1.4016e+00, -1.3815e+00,
          2.2718e+00, -3.6594e-01,  5.9144e-01, -7.0225e-01, -5.5637e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.5443, -0.0498, -0.2566, -0.3639,  0.0259,  0.4499,  0.0791,  0.0196,
        -0.5090, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.3928,  0.3569],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6213,  0.0590, -0.4048,  ...,  0.1302, -1.0446,  0.0519],
        ...,
        [-0.9910, -0.0335, -0.8838,  ...,  0.0371, -0.7331, -0.0284],
        [-0.4988, -0.2251,  0.3931,  ...,  0.0834, -0.6614, -0.3671],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.5003, -0.0366, -1.0352, -0.2948,  0.6048,  1.9475,
         1.7443,  0.0328, -1.5481, -1.5875, -0.4000, -0.3588, -0.3541,  0.1078,
         0.7254, -0.1532, -0.0976, -1.9286,  0.8448, -0.0238, -2.3677, -0.4552,
        -0.0145, -0.4163, -0.2943,  0.5791,  0.8568, -0.4337,  1.2648,  1.7515,
        -0.3055, -0.2749, -0.8935,  0.1774,  0.3104, -0.1073, -0.3223, -0.1581,
        -0.0490, -0.2556, -0.1112,  0.1539, -0.2724,  2.2326,  2.2822, -0.1994,
        -0.0155, -0.7693, -2.1528, -1.2408,  0.3422,  0.3098, -0.4101, -1.8250,
         1.6106,  1.0620, -3.0559, -0.0836,  0.0561,  2.0027, -0.2652, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.3409,  ..., -1.3394, -0.2537, -0.0872],
        [-0.2348, -0.3104, -0.8172,  ...,  0.1209,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.4614,  ...,  0.6357,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.5908,  ...,  1.0123,  0.3151,  0.1076],
        [ 0.2073, -0.3631, -2.0256,  ..., -0.8030,  0.1146, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.0672,  0.3525, -0.1253,  2.5909,  0.0194, -0.1072,  2.2527, -0.0833,
        -0.1337, -0.1932,  2.5743, -0.1025,  1.0164, -1.0709,  2.4104,  0.1785],
       device='cuda:0')), ('layers.6.weight', tensor([[-1.0420,  0.5817, -0.0688, -0.7584,  0.1003, -0.9042,  0.4475,  0.6131,
          0.1752,  0.0101, -1.8884,  0.1815,  1.6715,  0.3575,  0.7336,  0.4945],
        [-1.3417, -2.0446, -0.0661, -0.7851,  0.2061, -1.2306,  0.4189, -1.8975,
         -0.1249, -0.3225, -1.8776, -0.1109, -0.2199,  0.4057,  0.5392,  0.1394],
        [-1.6120, -2.4743,  0.0726, -0.1985, -0.0979, -2.1636,  0.7179, -2.0611,
          0.0803, -0.0219, -2.6611,  0.2186, -0.9920,  0.5796,  0.3238,  0.0614],
        [-1.8154, -0.1309,  0.0147,  0.9568,  0.0695,  0.6286,  0.3468, -4.0562,
          0.2533,  0.0346,  0.2061, -0.0044, -2.3245,  0.3384,  1.0240,  1.0377],
        [-0.7332, -1.0323, -0.1530, -0.1380, -0.2642, -2.0568, -1.3716, -2.5726,
          0.2781, -0.0817, -0.4075, -0.1734, -0.7598,  0.3422,  0.9043, -0.8582],
        [-0.5270, -0.4982, -0.0231, -0.3324, -0.3425, -0.8987, -1.7142, -2.7927,
          0.0147, -0.4205, -0.5805, -0.1817,  0.1542,  0.5381,  0.7373, -0.3181],
        [ 0.2455,  0.4767,  0.0409, -0.4759,  0.0233,  1.1767, -1.3306, -2.6489,
         -0.0252, -0.5158, -1.8941, -0.1994, -0.2310,  1.2107,  0.3865,  0.2514]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.5923, -0.1849,  1.5556,  1.7794,  1.3138,  0.9217, -0.4087],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [3.2983531951904297, 1.2492183446884155, -0.8796577453613281, 7.304749011993408, 8.159989356994629, 6.154714107513428, 5.584316253662109]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.641670227050781, 3.7998976707458496, -0.23578226566314697, 12.874713897705078, 6.360191822052002, 1.0785417556762695, 1.9730616807937622]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.27055549621582, 2.9867215156555176, -0.5552208423614502, 11.250394821166992, 4.609577655792236, -0.48125869035720825, 0.4122263491153717]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.4726, -1.5663, -0.0083, -0.2128,  0.0065, -0.2689, -0.0378,
         -0.1459, -0.1307,  0.0948,  2.7907, -0.0225,  0.8021,  0.8093],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.4623, -1.4382, -0.0665,  0.4017,  1.4783,  0.4469, -1.2706,
          0.1975, -1.7834, -0.1023, -1.4040, -0.4445,  0.1579,  0.2230],
        [-0.0328, -0.2585,  0.0776, -3.5803,  0.3760, -0.1722,  0.3044,  0.1130,
          0.1688,  0.1857,  0.3157,  0.1722,  0.1090,  0.4399,  0.6419],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.1607, -0.1579, -0.2170,  0.1147, -1.6309,  0.5164, -1.2481,
         -0.1162, -1.5528, -0.3844, -0.8873, -0.4538, -0.0842, -0.3440],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.5146, -0.0451,  0.2146, -1.1678,  0.2844, -1.1722,  0.3918,
         -1.3935,  0.3776, -2.2141, -0.0721, -0.9946,  0.4239,  0.3142],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.3216,  2.2092,  0.0564, -0.1857,  0.1214, -0.2585,  0.1735,
         -0.6089, -0.9709,  0.7131, -3.6610,  0.2747,  0.3661,  0.5926],
        [-0.0525,  0.7257, -0.4384,  0.0566, -0.0938, -0.0237,  0.0581, -0.8743,
          1.5423, -1.4108,  2.2560, -0.2008,  0.6970, -0.7686, -0.6228]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.6411, -0.0498, -0.2640, -0.3639,  0.0259,  0.4306,  0.0791,  0.0196,
        -0.5412, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4033,  0.4233],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.7809,  0.0590, -0.4048,  ...,  0.1302, -1.0446,  0.0040],
        ...,
        [-1.0077, -0.0335, -1.1354,  ...,  0.0371, -0.8797, -0.2193],
        [-0.4988, -0.2251,  0.6136,  ...,  0.0834, -0.6614, -0.1760],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.5386, -0.0366, -0.9798, -0.2948,  0.4413,  2.2438,
         1.8888,  0.0544, -1.5481, -1.5947, -0.4000, -0.3588, -0.3541,  0.0256,
         0.7009, -0.1532, -0.0976, -1.9067,  0.5254, -0.0238, -2.4912, -0.4552,
        -0.0145, -0.4163, -0.2943,  0.4992,  1.0745, -0.4337,  1.4237,  1.7942,
        -0.3055, -0.2749, -0.8935,  0.2745,  0.3864, -0.1073, -0.3223, -0.1581,
        -0.0490, -0.2556, -0.1460,  0.1316, -0.2724,  2.3659,  2.4026, -0.1994,
        -0.0155, -0.7693, -2.3270, -1.2189, -0.0357, -0.0374, -0.4101, -1.9339,
         1.6972,  1.1354, -3.2194, -0.0836,  0.0254,  1.9916, -0.0689, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.3742,  ..., -1.5246, -0.4418, -0.0872],
        [-0.2348, -0.3104, -0.9771,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.5022,  ...,  0.6525,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.7773,  ...,  1.0175,  0.3399,  0.1076],
        [ 0.2073, -0.3631, -2.0014,  ..., -1.3674,  0.1927, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2313,  0.0076, -0.1253,  2.9778,  0.0120, -0.2000,  2.5154, -0.1123,
        -0.1167, -0.1932,  2.6655, -0.1025,  0.9223, -1.2882,  2.6557,  0.1926],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.9503,  0.6413, -0.0688, -0.9221,  0.1003, -1.1942,  0.4589,  0.3666,
          0.2697,  0.0101, -1.7717,  0.1815,  1.7018,  0.5237,  0.7960,  0.3455],
        [-1.2195, -2.5276, -0.0661, -0.8193,  0.0774, -0.9544,  0.3651, -2.1899,
         -0.1249, -0.3225, -2.1650, -0.1109, -0.6657,  0.5133,  0.5049,  0.1664],
        [-1.6694, -2.0949,  0.0726, -0.4556, -0.0752, -2.4521,  0.4606, -2.1934,
          0.1439, -0.0219, -2.6138,  0.2186, -1.2933,  0.4613,  0.4164,  0.3952],
        [-1.6425, -0.4955,  0.0147,  1.1229,  0.1087,  0.6402,  0.5381, -4.0678,
          0.1856,  0.0346,  0.4348, -0.0044, -2.3484,  0.3560,  0.8795,  1.0996],
        [-0.7448, -0.5429, -0.1530, -0.1849, -0.3278, -2.3077, -1.3921, -3.4469,
          0.2781, -0.0817, -0.3587, -0.1734, -0.5232,  0.3654,  0.8197, -0.9476],
        [-0.5494, -0.7571, -0.0231, -0.3923, -0.4110, -1.0716, -1.7569, -3.3264,
          0.0147, -0.4205, -0.5787, -0.1817,  0.2604,  0.6214,  0.7332, -0.0818],
        [ 0.2482,  0.9980,  0.0409, -0.5945, -0.0651,  1.1900, -1.3115, -2.7958,
         -0.1000, -0.5158, -2.0685, -0.1994,  0.0659,  1.1798,  0.4014,  0.3581]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.1939,  0.1273,  1.4230,  1.6746,  1.1807,  0.9037,  0.0277],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.672453880310059, 7.852263927459717, 6.5497355461120605, 15.195780754089355, 11.60775375366211, 9.893353462219238, 6.989792823791504]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [20.315614700317383, 10.926624298095703, 7.338202953338623, 22.812498092651367, 8.287310600280762, 3.2159786224365234, 1.7258117198944092]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [19.18821144104004, 9.463725090026855, 5.4457502365112305, 20.799304962158203, 4.761465072631836, -0.5215604901313782, -0.0861709862947464]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -4.5070e-01, -1.5444e+00,  3.4814e-02, -1.2541e-01,
         -1.6250e-02, -1.9039e-01,  4.7915e-02, -1.7393e-01, -2.1237e-01,
          9.9303e-02,  2.9422e+00, -1.1118e-01,  7.8012e-01,  7.8736e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -4.3680e-01, -1.3337e+00, -1.0403e-01,  6.8641e-01,
          1.4587e+00,  7.8417e-01, -1.4265e+00,  2.1618e-01, -2.0524e+00,
         -1.6743e-01, -1.4417e+00, -4.4322e-01,  1.3235e-01,  1.9746e-01],
        [-3.2809e-02, -2.5846e-01,  7.7570e-02, -3.5803e+00,  3.7599e-01,
         -1.7222e-01,  3.0437e-01,  1.1305e-01,  1.6883e-01,  1.8568e-01,
          3.1568e-01,  1.7219e-01,  1.0904e-01,  4.3995e-01,  6.4187e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.0700e-01, -1.3464e-01, -1.8936e-03,  2.0342e-01,
         -1.6064e+00,  6.3270e-01, -1.3342e+00,  8.3109e-02, -1.5950e+00,
         -3.3076e-01, -9.1189e-01, -4.0009e-01, -3.0528e-02, -2.9030e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.4294e-01,  1.5531e-02,  2.7276e-01, -9.7103e-01,
          4.1227e-01, -1.3209e+00,  3.3391e-01, -1.4612e+00,  4.2442e-01,
         -2.1143e+00, -1.7814e-01, -1.2411e+00,  4.5228e-01,  3.4257e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -3.4176e-01,  2.3239e+00,  9.3749e-02, -2.9544e-01,
          1.2261e-01, -4.0001e-01,  1.1301e-01, -6.2071e-01, -1.0569e+00,
          7.0490e-01, -3.8508e+00,  2.9485e-01,  3.8625e-01,  6.1276e-01],
        [-5.2546e-02,  7.7078e-01, -5.2232e-01,  7.9566e-02, -8.4756e-02,
          4.9150e-03, -3.8390e-02, -9.9787e-01,  1.3509e+00, -1.5200e+00,
          2.4377e+00, -3.9701e-01,  6.4443e-01, -8.1373e-01, -6.6785e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.6192, -0.0498, -0.2384, -0.3639,  0.0259,  0.3770,  0.0791,  0.0196,
        -0.5696, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4235,  0.4684],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.7645,  0.0590, -0.4683,  ...,  0.1302, -1.0446,  0.0907],
        ...,
        [-0.9904, -0.0335, -1.0783,  ...,  0.0371, -0.9026, -0.1613],
        [-0.4988, -0.2251,  0.3940,  ...,  0.0834, -0.7330, -0.3183],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.5428, -0.0366, -1.2145, -0.2948, -0.0273,  2.3279,
         1.8985,  0.2027, -1.5481, -1.6074, -0.4000, -0.3588, -0.3541, -0.0729,
         0.8739, -0.1532, -0.0976, -1.9409,  0.2449, -0.0238, -2.6723, -0.4552,
        -0.0145, -0.4163, -0.2943,  0.3850,  1.2920, -0.4337,  1.5619,  1.8331,
        -0.3055, -0.2749, -0.8935,  0.5097,  0.7105, -0.1073, -0.3223, -0.1581,
        -0.0490, -0.2556, -0.1112,  0.2277, -0.2724,  2.2981,  2.4461, -0.1994,
        -0.0155, -0.7693, -2.3027, -1.1403, -0.0443, -0.2107, -0.4101, -2.1017,
         1.6563,  0.9987, -3.3680, -0.0836, -0.0933,  2.0668, -0.3449, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.6276,  ..., -1.5308, -0.3069, -0.0872],
        [-0.2348, -0.3104, -0.9771,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.8610,  ...,  0.4418,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.7631,  ...,  1.0389,  0.2383,  0.1076],
        [ 0.2073, -0.3631, -1.8489,  ..., -1.7180,  0.0913, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.1552, -0.0554, -0.1253,  3.2239, -0.0055,  0.0495,  2.5893, -0.0705,
        -0.1662, -0.1932,  2.7151, -0.1597,  0.9246, -1.3743,  2.8851,  0.1800],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.8895,  0.5817, -0.0688, -0.9160,  0.1003, -0.7778,  0.3163,  0.2936,
          0.2697,  0.0101, -1.9986,  0.1815,  1.5401,  0.4133,  0.8108,  0.4380],
        [-1.0641, -2.5276, -0.0661, -0.8482,  0.0774, -1.0500,  0.0564, -2.3468,
         -0.1249, -0.3225, -2.1515, -0.0474, -0.8659,  0.2125,  0.5945,  0.1913],
        [-1.1561, -2.0949,  0.0726, -0.3463, -0.0248, -2.2882,  0.4382, -2.6357,
          0.1439, -0.0219, -2.6791,  0.2186, -1.4804,  0.5298,  0.4434,  0.2619],
        [-1.8002, -0.4955,  0.0147,  1.1907,  0.1087,  0.6615,  0.7279, -4.1262,
          0.1293,  0.0346,  0.2202, -0.0652, -2.2616,  0.2963,  0.7803,  1.0099],
        [-0.5377, -0.5429, -0.1530, -0.0793, -0.3278, -2.7742, -1.2767, -3.4118,
          0.2781, -0.0817, -0.0454, -0.1734, -0.8729,  0.4512,  0.7100, -1.0902],
        [-0.6128, -0.7571, -0.0231, -0.3970, -0.4746, -0.6957, -1.8472, -3.6561,
          0.0147, -0.4205, -0.7171, -0.1817, -0.4040,  0.6739,  0.5996, -0.0167],
        [ 0.0142,  0.9980,  0.0409, -0.7128, -0.0651,  0.9716, -1.6033, -3.4738,
         -0.1000, -0.5158, -2.1184, -0.1994, -0.4684,  1.1181,  0.5147,  0.6986]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.7916,  0.2493,  1.7260,  1.2518,  1.1192,  0.7170,  0.3663],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [7.1167497634887695, 2.514289379119873, 4.56374454498291, 15.397660255432129, 7.228097915649414, 0.291964054107666, 2.0944759845733643]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.83637809753418, 3.3527276515960693, 5.372602462768555, 18.078243255615234, 2.9685096740722656, -9.546528816223145, -3.8869786262512207]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.872039794921875, 4.037905216217041, 3.3525800704956055, 8.042511940002441, 3.380829334259033, -6.546926498413086, 0.37508320808410645]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -4.6470e-01, -1.5584e+00, -3.3544e-02,  4.6794e-02,
          2.1960e-03, -1.7844e-01, -2.1973e-02, -1.0654e-01, -1.8497e-01,
          1.3328e-01,  3.0073e+00, -1.3545e-01,  7.9412e-01,  8.0137e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -4.0300e-01, -1.4310e+00, -6.9235e-02,  6.8627e-01,
          1.4735e+00,  9.0865e-01, -1.5571e+00,  1.7469e-01, -1.6527e+00,
         -2.1725e-01, -1.4649e+00, -5.0384e-01,  9.8546e-02,  1.6366e-01],
        [-3.2809e-02, -2.5846e-01,  7.7570e-02, -3.5803e+00,  3.7599e-01,
         -1.7222e-01,  3.0437e-01,  1.1305e-01,  1.6883e-01,  1.8568e-01,
          3.1568e-01,  1.7219e-01,  1.0904e-01,  4.3995e-01,  6.4187e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.2699e-01, -1.6317e-01, -5.7417e-02,  1.8064e-01,
         -1.6459e+00,  6.9696e-01, -1.2448e+00,  3.6983e-03, -1.6854e+00,
         -3.5075e-01, -9.8848e-01, -4.2008e-01, -5.0522e-02, -3.1029e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.1920e-01, -6.3234e-02,  1.9063e-01, -1.0124e+00,
          2.5837e-01, -1.2162e+00,  3.8651e-01, -1.5090e+00,  5.7224e-01,
         -2.0206e+00, -2.1261e-02, -1.3949e+00,  4.2854e-01,  3.1883e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -3.5926e-01,  2.4447e+00,  2.3882e-02, -2.8468e-01,
          1.1118e-01, -3.6141e-01,  1.4279e-01, -4.7939e-01, -1.0101e+00,
          6.3029e-01, -4.0589e+00,  3.1235e-01,  4.0375e-01,  6.3026e-01],
        [-5.2546e-02,  8.0233e-01, -6.0550e-01,  4.7142e-02, -1.1450e-01,
         -4.0812e-03,  1.8365e-04, -9.4539e-01,  1.4309e+00, -1.6327e+00,
          2.6674e+00, -3.6989e-01,  7.5292e-01, -8.4528e-01, -6.9940e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.6332, -0.0498, -0.2046, -0.3639,  0.0259,  0.3970,  0.0791,  0.0196,
        -0.5458, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4410,  0.5000],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6847,  0.0590, -0.5319,  ...,  0.1302, -1.0446, -0.0059],
        ...,
        [-0.8852, -0.0335, -0.9486,  ...,  0.0371, -1.0347, -0.3377],
        [-0.4988, -0.2251,  0.3660,  ...,  0.0834, -0.7330, -0.3854],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.7196, -0.0366, -1.3705, -0.2948, -0.0060,  2.5852,
         2.0463,  0.3089, -1.5481, -1.7151, -0.4000, -0.3588, -0.3541, -0.2789,
         1.0788, -0.1532, -0.0976, -2.0676,  0.3070, -0.0238, -2.8567, -0.4893,
        -0.0145, -0.4163, -0.2943,  0.2716,  1.2824, -0.4337,  1.6840,  2.0074,
        -0.3055, -0.2749, -0.8935,  0.5662,  0.7376, -0.1073, -0.3369, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.1133, -0.2724,  2.5694,  2.5885, -0.1994,
        -0.0155, -0.7693, -2.4108, -1.0910, -0.0226, -0.3553, -0.4101, -2.1252,
         1.6950,  1.1552, -3.5798, -0.0836,  0.0085,  1.8784, -0.3734, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.8443,  ..., -1.6776, -0.2656, -0.0872],
        [-0.2348, -0.3104, -0.9771,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.8964,  ...,  0.2170,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.5674,  ...,  0.9801,  0.1712,  0.1076],
        [ 0.2073, -0.3631, -2.2368,  ..., -1.8801,  0.0362, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2071, -0.0554, -0.1253,  3.2997, -0.0055,  0.0500,  2.7689, -0.1364,
        -0.1662, -0.1932,  2.7231, -0.1597,  0.9292, -1.4594,  2.9530,  0.3872],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.7390,  0.5817, -0.0688, -0.9445,  0.1003, -1.0623,  0.3728,  0.0392,
          0.2697,  0.0101, -2.0515,  0.1815,  1.6435,  0.3393,  0.7781,  0.6464],
        [-1.1463, -2.5276, -0.0661, -0.8629,  0.0774, -1.3277,  0.2775, -2.3553,
         -0.1249, -0.3225, -1.8260, -0.0474, -1.0217,  0.3813,  0.4052,  0.0992],
        [-1.1413, -2.0949,  0.0726, -0.4625, -0.0248, -2.2861,  0.4393, -1.9928,
          0.1439, -0.0219, -2.8942,  0.2186, -1.3483,  0.6097,  0.3572,  0.3025],
        [-1.8323, -0.4955,  0.0147,  1.2162,  0.1087,  0.7565,  0.9132, -4.9799,
          0.1293,  0.0346,  0.2114, -0.0652, -2.3930,  0.4207,  0.7032,  0.9704],
        [-0.3770, -0.5429, -0.1530,  0.0305, -0.3278, -2.5880, -1.1116, -3.7880,
          0.2781, -0.0817,  0.0461, -0.1734, -0.7593,  0.6225,  0.7655, -1.2015],
        [-0.3844, -0.7571, -0.0231, -0.3226, -0.4746, -0.4736, -1.5953, -4.2835,
          0.0147, -0.4205, -1.0648, -0.1817, -0.1572,  0.7617,  0.6361,  0.0392],
        [-0.0658,  0.9980,  0.0409, -0.6932, -0.0651,  0.9179, -1.4918, -3.9810,
         -0.1000, -0.5158, -1.7883, -0.1994, -0.3322,  1.0565,  0.5100,  0.6621]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.7293,  0.7221,  2.0902,  1.0652,  0.9058,  0.6855,  0.5106],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [6.387551307678223, -0.4962281584739685, 2.203326463699341, 13.423603057861328, 11.526021003723145, 5.878317832946777, 3.3833401203155518]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [14.562294960021973, 1.215280532836914, 3.2149975299835205, 11.382887840270996, 9.79798698425293, 1.1696760654449463, 1.0351393222808838]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [14.879267692565918, 0.9473081231117249, 2.3005287647247314, 7.6653618812561035, 8.420365333557129, -0.10261964797973633, 0.7262576222419739]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.5360, -1.6297, -0.2257, -0.1060, -0.0455, -0.0598, -0.0617,
         -0.1434, -0.2477,  0.1007,  3.0723, -0.0255,  0.8655,  0.8727],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.3984, -1.3695, -0.1252,  0.7187,  1.3992,  1.0084, -1.6683,
          0.2675, -1.8952, -0.3215, -1.5199, -0.4540,  0.0939,  0.1591],
        [-0.0328, -0.2585,  0.0776, -3.5803,  0.3760, -0.1722,  0.3044,  0.1130,
          0.1688,  0.1857,  0.3157,  0.1722,  0.1090,  0.4399,  0.6419],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.0924, -0.2006, -0.0417,  0.1788, -1.6020,  0.6640, -1.4994,
          0.2309, -1.7640, -0.3162, -0.9686, -0.3855, -0.0159, -0.2757],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4710, -0.0859,  0.3379, -1.0441,  0.3607, -1.1589,  0.5704,
         -1.4276,  0.5695, -2.0475,  0.1578, -1.4183,  0.3803,  0.2706],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.3879,  2.5469,  0.0652, -0.3898,  0.2029, -0.3981,  0.1805,
         -0.5689, -1.0337,  0.7653, -4.0942,  0.3410,  0.4324,  0.6590],
        [-0.0525,  0.8490, -0.6060,  0.0677, -0.1088, -0.0344,  0.0135, -1.0108,
          1.4451, -1.7909,  2.7701, -0.4126,  0.7789, -0.8920, -0.7461]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7045, -0.0498, -0.2000, -0.3639,  0.0259,  0.3624,  0.0791,  0.0196,
        -0.4976, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4697,  0.5467],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.7821,  0.0590, -0.5319,  ...,  0.1302, -1.1767,  0.0472],
        ...,
        [-1.0129, -0.0335, -0.7938,  ...,  0.0371, -1.0834, -0.2134],
        [-0.4988, -0.2251,  0.4217,  ...,  0.0834, -0.7330, -0.3298],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.5921, -0.0366, -1.5536, -0.2948, -0.1164,  2.4482,
         2.0457,  0.2946, -1.5481, -1.7643, -0.4000, -0.3588, -0.3541, -0.4162,
         1.1147, -0.1532, -0.0976, -1.9464,  0.1893, -0.0238, -2.9153, -0.4893,
        -0.0145, -0.4163, -0.2943,  0.1406,  1.2802, -0.4337,  1.8316,  1.9728,
        -0.3055, -0.2749, -0.8935,  0.5098,  0.4243, -0.1073, -0.3369, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.0623, -0.2724,  2.7215,  2.7463, -0.1994,
        -0.0155, -0.7693, -2.5625, -1.1030, -0.1023, -0.3914, -0.4101, -2.1895,
         1.6000,  1.1144, -3.7784, -0.0836, -0.0047,  1.9019, -0.3178, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.7558,  ..., -1.7448, -0.3279, -0.0872],
        [-0.2348, -0.3104, -0.9771,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.8627,  ...,  0.1061,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.6131,  ...,  1.0165,  0.1712,  0.1076],
        [ 0.2073, -0.3631, -2.3765,  ..., -2.1423,  0.1003, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.1508, -0.0554, -0.1253,  3.4631, -0.0055, -0.1226,  2.8996,  0.0595,
        -0.1662, -0.1932,  2.7789, -0.1597,  0.8572, -1.4277,  3.0128,  0.3609],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.7274,  0.5817, -0.0688, -0.9822,  0.1003, -0.8564,  0.3363,  0.0774,
          0.2697,  0.0101, -2.1504,  0.1815,  1.5474,  0.2091,  0.8313,  0.6533],
        [-0.8515, -2.5276, -0.0661, -0.8315,  0.0774, -1.1311,  0.4525, -2.4849,
         -0.1249, -0.3225, -1.9668, -0.0474, -1.4558,  0.1877,  0.5536,  0.1573],
        [-0.7731, -2.0949,  0.0726, -0.3477, -0.0248, -2.1396,  0.4657, -2.4087,
          0.1439, -0.0219, -2.6819,  0.2186, -1.6009,  0.3024,  0.4157,  0.5321],
        [-1.8034, -0.4955,  0.0147,  1.1773,  0.1087,  0.7352,  0.8803, -4.8150,
          0.1293,  0.0346,  0.1841, -0.0652, -2.2816,  0.4132,  0.6080,  0.9731],
        [-0.0594, -0.5429, -0.1530,  0.0095, -0.3278, -2.6651, -1.1229, -4.0400,
          0.2781, -0.0817,  0.4153, -0.1734, -0.9165,  0.7334,  0.6609, -0.9637],
        [-0.3259, -0.7571, -0.0231, -0.3674, -0.4746, -0.4713, -1.5943, -4.5496,
          0.0147, -0.4205, -0.9983, -0.1817, -0.4141,  0.7261,  0.6069,  0.0272],
        [ 0.0224,  0.9980,  0.0409, -0.7391, -0.0651,  0.9043, -1.5094, -4.6798,
         -0.1000, -0.5158, -1.8047, -0.1994, -0.6724,  1.1774,  0.6156,  0.8512]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.5213,  0.4716,  1.9999,  0.9566,  0.8092,  0.6046,  0.4649],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [6.902751445770264, 2.987041473388672, 5.799301624298096, 17.203872680664062, 14.644594192504883, 7.499851226806641, 6.883283615112305]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [13.965014457702637, 7.366365432739258, 8.744790077209473, 17.15569305419922, 12.839040756225586, 1.1932039260864258, 3.2511110305786133]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [17.54537582397461, 11.110062599182129, 10.895546913146973, 15.141530990600586, 9.904141426086426, -0.924748420715332, 2.3207271099090576]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.5262, -1.6199, -0.0170, -0.0715,  0.0473, -0.1515,  0.0482,
         -0.3786, -0.2074,  0.1893,  3.1956, -0.1514,  0.8556,  0.8629],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.4502, -1.3641, -0.1584,  0.5793,  1.4143,  1.1267, -1.7314,
          0.1840, -1.9879, -0.2562, -1.5558, -0.3723,  0.1458,  0.2109],
        [-0.0328, -0.2585,  0.0776, -3.5803,  0.3760, -0.1722,  0.3044,  0.1130,
          0.1688,  0.1857,  0.3157,  0.1722,  0.1090,  0.4399,  0.6419],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.1328, -0.2346, -0.0899,  0.1929, -1.7627,  0.6666, -1.4764,
          0.1630, -1.7714, -0.3566, -1.0344, -0.4259, -0.0564, -0.3161],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4816, -0.0359,  0.2053, -0.9738,  0.4543, -1.2492,  0.4795,
         -1.5806,  0.5917, -2.1778,  0.1440, -1.3666,  0.3910,  0.2813],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.3801,  2.6567,  0.0695, -0.3546,  0.1457, -0.4888,  0.1308,
         -0.7114, -1.0921,  0.7942, -4.1603,  0.3332,  0.4246,  0.6511],
        [-0.0525,  0.9116, -0.6627,  0.0480, -0.1235, -0.0559,  0.1047, -1.0920,
          1.4163, -1.8176,  2.7945, -0.3784,  0.8123, -0.9546, -0.8087]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.6947, -0.0498, -0.2519, -0.3639,  0.0259,  0.4028,  0.0791,  0.0196,
        -0.5083, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4618,  0.6093],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6390,  0.0590, -0.5319,  ...,  0.1302, -1.1767,  0.0366],
        ...,
        [-1.0524, -0.0335, -0.7896,  ...,  0.0371, -0.9937, -0.7993],
        [-0.4988, -0.2251,  0.3650,  ...,  0.0834, -0.7330, -0.3865],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.8424, -0.0366, -1.7088, -0.2948, -0.1164,  2.5742,
         2.2179,  0.4393, -1.5481, -1.8572, -0.4000, -0.3588, -0.3541, -0.3942,
         1.0448, -0.1532, -0.0976, -2.2176,  0.2087, -0.0238, -3.0766, -0.4893,
        -0.0145, -0.4163, -0.2943,  0.1485,  1.2490, -0.4337,  1.7812,  2.1160,
        -0.3055, -0.2749, -0.8935,  0.6087,  0.4889, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.0178, -0.2724,  2.7388,  2.8260, -0.1994,
        -0.0155, -0.7693, -2.7162, -1.3050, -0.2229, -0.5368, -0.4101, -2.4572,
         1.7541,  1.0092, -3.9748, -0.0836, -0.1095,  1.8909, -0.3745, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.7776,  ..., -1.7193, -0.2727, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.9667,  ..., -0.0040,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.5629,  ...,  0.9754,  0.1712,  0.1076],
        [ 0.2073, -0.3631, -2.5031,  ..., -2.0786,  0.0442, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.1934, -0.1189, -0.1253,  3.7107, -0.0055, -0.1693,  3.1613, -0.0707,
        -0.1662, -0.1932,  2.8700, -0.1597,  0.7407, -1.7172,  2.9935,  0.3244],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.5122,  0.5817, -0.0688, -1.0762,  0.1003, -0.9715,  0.3924, -0.0907,
          0.2697,  0.0101, -1.8931,  0.1815,  1.5101,  0.2752,  0.9010,  0.7333],
        [-0.6598, -2.5276, -0.0661, -0.7483,  0.0774, -1.1835,  0.5147, -2.2025,
         -0.1249, -0.3225, -2.0123, -0.0474, -1.0111,  0.1507,  0.6130,  0.5906],
        [-0.7197, -2.0949,  0.0726, -0.1293, -0.0248, -2.1776,  0.5172, -3.2206,
          0.1439, -0.0219, -2.6246,  0.2186, -2.1648,  0.2548,  0.4150,  0.4162],
        [-1.7084, -0.4319,  0.0147,  1.1815,  0.1087,  0.6662,  0.7758, -4.7388,
          0.1293,  0.0346,  0.3448, -0.0652, -2.3788,  0.3714,  0.4956,  0.8485],
        [ 0.0553, -0.5429, -0.1530, -0.0718, -0.3278, -2.9485, -1.0590, -4.5504,
          0.2781, -0.0817,  0.4778, -0.1734, -0.5423,  0.7331,  0.5529, -1.0133],
        [-0.3573, -0.7571, -0.0231, -0.4368, -0.4746, -0.7872, -1.6257, -4.5191,
          0.0147, -0.4205, -0.8701, -0.1817, -0.5537,  0.7916,  0.6184,  0.1138],
        [ 0.0978,  0.9980,  0.0409, -0.7067, -0.0651,  0.9067, -1.4872, -4.7768,
         -0.1000, -0.5158, -1.7736, -0.1994, -0.9382,  1.1097,  0.6078,  0.5437]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.5853,  0.2784,  1.8372,  1.0974,  0.6277,  0.5678,  0.5249],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.518044471740723, 8.150787353515625, 9.463618278503418, 17.22598648071289, 9.02752685546875, 4.393741607666016, 4.300148010253906]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [18.115251541137695, 13.414186477661133, 12.742154121398926, 17.79785919189453, 6.817022323608398, -3.070103645324707, -0.023257136344909668]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [20.215797424316406, 15.878698348999023, 14.556648254394531, 19.357637405395508, 3.7592692375183105, -6.1977667808532715, -3.08010196685791]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.5460, -1.6397, -0.0147, -0.1207,  0.0237, -0.2179,  0.0546,
         -0.3993, -0.3928,  0.3125,  3.2752, -0.0718,  0.8754,  0.8827],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.4808, -1.3869, -0.0691,  0.5126,  1.4632,  1.1195, -1.7622,
          0.1345, -2.1981, -0.2801, -1.6245, -0.3697,  0.1763,  0.2414],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.1418, -0.2674,  0.0461,  0.2785, -1.8973,  0.5821, -1.6590,
          0.2827, -1.8339, -0.3655, -1.1020, -0.4348, -0.0653, -0.3251],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4830, -0.1223,  0.3110, -0.9754,  0.3684, -1.2676,  0.5057,
         -1.6113,  0.5582, -2.3427,  0.1540, -1.3849,  0.3924,  0.2827],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.3938,  2.7514,  0.0906, -0.3417,  0.1389, -0.5172,  0.1035,
         -0.6192, -1.1795,  0.7849, -4.2343,  0.3469,  0.4383,  0.6649],
        [-0.0525,  0.9836, -0.7268,  0.0274, -0.0878, -0.0884,  0.0712, -1.1001,
          1.4593, -1.8405,  2.8140, -0.4302,  0.8074, -1.0265, -0.8806]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7145, -0.0498, -0.2824, -0.4274,  0.0259,  0.4117,  0.0791,  0.0196,
        -0.5097, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4756,  0.6812],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6752,  0.0590, -0.5319,  ...,  0.1302, -1.1767,  0.1051],
        ...,
        [-1.0657, -0.0335, -0.4275,  ...,  0.0371, -0.9606, -0.8133],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.8335, -0.0366, -1.7258, -0.2948, -0.1164,  2.6572,
         2.1917,  0.3768, -1.6116, -1.8760, -0.4000, -0.3588, -0.3672, -0.2652,
         0.9528, -0.1532, -0.0976, -2.3263,  0.2476, -0.0238, -3.2555, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.1469,  1.3529, -0.4337,  1.9072,  2.3666,
        -0.3055, -0.2749, -0.8935,  0.5322,  0.8470, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350, -0.0042, -0.2724,  2.7238,  2.7517, -0.1994,
        -0.0155, -0.7693, -2.8196, -1.2186, -0.0472, -0.6114, -0.4101, -2.5307,
         1.6932,  0.9004, -4.1039, -0.0836, -0.0633,  1.8688, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.7521,  ..., -1.7309, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.9401,  ...,  0.1689,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.7264,  ...,  0.8757,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.9607,  ..., -2.1542, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.3033, -0.1189, -0.1253,  3.8773, -0.0055,  0.0049,  3.2790, -0.0114,
        -0.1662, -0.1932,  3.0834, -0.1597,  0.6099, -1.7685,  2.7745,  0.3521],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.4476,  0.5817, -0.0688, -0.9050,  0.1003, -1.1992,  0.4001, -0.1053,
          0.2697,  0.0101, -1.9882,  0.1815,  1.5127,  0.2241,  0.8717,  0.7671],
        [-0.6812, -2.5276, -0.0661, -0.7846,  0.0774, -1.1939,  0.5461, -2.4043,
         -0.1249, -0.3225, -2.2162, -0.0474, -1.3514,  0.2231,  0.5364,  0.1272],
        [-0.5720, -2.0949,  0.0726, -0.1795, -0.0248, -2.1296,  0.3913, -3.5510,
          0.1439, -0.0219, -2.8758,  0.2186, -1.9571,  0.1792,  0.4103,  0.2725],
        [-1.6880, -0.4319,  0.0147,  1.2745,  0.1087,  0.8199,  0.6196, -4.8750,
          0.1293,  0.0346,  0.4484, -0.0652, -2.5729,  0.2237,  0.4541,  0.8674],
        [-0.0145, -0.5429, -0.1530,  0.0238, -0.3278, -2.6879, -1.2760, -4.4984,
          0.2781, -0.0817,  0.2408, -0.1734, -0.5712,  0.5999,  0.5975, -0.8408],
        [-0.3009, -0.7571, -0.0231, -0.3085, -0.4746, -0.8831, -1.6515, -4.9025,
          0.0147, -0.4205, -0.7850, -0.1817, -0.6312,  0.6761,  0.5988,  0.2029],
        [ 0.1380,  0.9980,  0.0409, -0.7281, -0.0651,  0.7895, -1.3924, -4.7619,
         -0.1000, -0.5158, -1.5781, -0.1994, -1.0398,  1.2079,  0.5347,  0.5558]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.7122,  0.3464,  1.7070,  1.1805,  0.4447,  0.3820,  0.5620],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.258185386657715, 3.6824522018432617, 7.168339729309082, 13.808540344238281, 8.015124320983887, 2.453035593032837, 1.3544068336486816]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.991737365722656, 5.885848045349121, 8.614291191101074, 11.509849548339844, 6.091576099395752, -2.6168549060821533, -0.8337364196777344]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [15.921704292297363, 9.209524154663086, 10.651200294494629, 13.888909339904785, 3.353346347808838, -5.376106262207031, -3.2622733116149902]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -5.6290e-01, -1.6566e+00,  6.8829e-02, -7.4527e-02,
          2.2226e-02, -2.6268e-01,  2.1257e-03, -1.9539e-01, -4.0231e-01,
          2.8344e-01,  3.3455e+00, -1.8252e-01,  8.9231e-01,  8.9956e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -4.2444e-01, -1.3363e+00, -8.1055e-02,  6.3229e-01,
          1.5379e+00,  1.2646e+00, -1.7757e+00,  2.3873e-01, -2.2390e+00,
         -3.5705e-01, -1.8563e+00, -4.2599e-01,  1.1999e-01,  1.8510e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.6186e-01, -3.0961e-01,  9.6485e-03,  5.0683e-03,
         -1.8758e+00,  8.0118e-01, -1.7976e+00,  5.5410e-01, -1.9205e+00,
         -3.8562e-01, -1.1390e+00, -4.5495e-01, -8.5385e-02, -3.4516e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.2509e-01, -1.5991e-01,  1.9720e-01, -1.0377e+00,
          2.4718e-01, -1.4813e+00,  4.8342e-01, -1.8971e+00,  5.3842e-01,
         -2.3748e+00,  6.0199e-04, -1.5958e+00,  4.3444e-01,  3.2473e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -4.1283e-01,  2.8455e+00,  7.1119e-02, -3.2865e-01,
          1.2023e-01, -5.1568e-01,  1.1802e-01, -6.2632e-01, -1.2333e+00,
          6.1386e-01, -4.3871e+00,  3.6592e-01,  4.5732e-01,  6.8385e-01],
        [-5.2546e-02,  9.5727e-01, -7.6004e-01,  6.2441e-02, -1.6848e-01,
         -9.6369e-02,  7.9968e-02, -1.1891e+00,  1.5167e+00, -1.9536e+00,
          2.9603e+00, -5.6945e-01,  6.4594e-01, -1.0002e+00, -8.5435e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7314, -0.0498, -0.2261, -0.4274,  0.0259,  0.4318,  0.0791,  0.0196,
        -0.5517, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4946,  0.6549],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6817,  0.0590, -0.5154,  ...,  0.1302, -1.1767, -0.0203],
        ...,
        [-1.1443, -0.0335, -0.4234,  ...,  0.0371, -0.9427, -0.9650],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.7886, -0.0366, -1.7507, -0.2948, -0.1164,  2.7576,
         2.2207,  0.4600, -1.6116, -1.9152, -0.4000, -0.3588, -0.3672, -0.2855,
         0.8884, -0.1532, -0.0976, -2.5343, -0.0444, -0.0238, -3.3671, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.0840,  1.3725, -0.4337,  1.8297,  2.3582,
        -0.3055, -0.2749, -0.8935,  0.3809,  0.7739, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350, -0.0559, -0.2724,  2.7116,  2.9010, -0.1994,
        -0.0155, -0.7693, -3.1426, -1.2998, -0.0489, -0.5579, -0.4101, -2.6299,
         1.7778,  0.9537, -4.2166, -0.0836,  0.0448,  1.7729, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.8481,  ..., -1.7647, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  1.0384,  ...,  0.1368,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.1437,  ...,  0.8384,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.8027,  ..., -2.5192, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2292, -0.1189, -0.1253,  3.9456, -0.0055, -0.1079,  3.3865, -0.0105,
        -0.1662, -0.1932,  3.1595, -0.1597,  0.5888, -1.7371,  2.8626,  0.3553],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.3951,  0.5817, -0.0688, -0.8072,  0.1003, -1.0300,  0.4237, -0.0989,
          0.2697,  0.0101, -2.0746,  0.1815,  1.5533,  0.3790,  0.8172,  0.7826],
        [-0.3877, -2.5276, -0.0661, -0.6384,  0.0774, -1.3909,  0.5324, -2.7877,
         -0.1249, -0.3225, -1.9857, -0.0474, -1.5079,  0.2364,  0.5770,  0.2016],
        [-0.3096, -2.0949,  0.0726, -0.2537, -0.0248, -2.1006,  0.7261, -3.2349,
          0.1439, -0.0219, -2.6034,  0.2186, -1.9190,  0.4792,  0.3879,  0.2605],
        [-1.7874, -0.4319,  0.0147,  1.2494,  0.1087,  0.9355,  0.6489, -5.3456,
          0.1293,  0.0346,  0.4785, -0.0652, -2.5917,  0.3931,  0.4355,  1.0228],
        [ 0.1550, -0.5429, -0.1530,  0.0439, -0.3278, -2.9050, -1.1284, -4.6902,
          0.2781, -0.0817,  0.5403, -0.1734, -0.5490,  0.6629,  0.5404, -1.0207],
        [-0.0580, -0.7571, -0.0231, -0.2502, -0.4746, -0.8783, -1.5548, -5.2688,
          0.0147, -0.4205, -1.0746, -0.1817, -0.5256,  0.7543,  0.5285,  0.0562],
        [ 0.0918,  0.9980,  0.0409, -0.6589, -0.0651,  0.6865, -1.4456, -5.1896,
         -0.1000, -0.5158, -1.7738, -0.1994, -0.9434,  1.1976,  0.5733,  0.3976]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.6863,  0.0362,  2.0017,  1.2557,  0.5058,  0.5684,  0.3623],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.118427276611328, 8.655435562133789, 10.928862571716309, 18.43860626220703, 11.830374717712402, 5.336579322814941, 3.2971980571746826]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [14.976921081542969, 11.887067794799805, 14.331831932067871, 17.926776885986328, 10.66867446899414, 1.8951349258422852, 0.7727248668670654]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.11090850830078, 13.549127578735352, 15.012353897094727, 18.574588775634766, 6.607790946960449, 0.03483891487121582, -0.20281055569648743]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.5569, -1.6506,  0.0890, -0.0625,  0.0708, -0.2509, -0.0807,
         -0.3312, -0.1853,  0.0182,  3.4716, -0.4068,  0.8863,  0.8936],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.4659, -1.3422, -0.1687,  0.5759,  1.4850,  1.7527, -1.8474,
          0.1445, -2.2697, -0.3003, -1.8230, -0.3845,  0.1615,  0.2266],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.1621, -0.3545,  0.0478,  0.1489, -1.8885,  1.0085, -1.8992,
          0.7367, -2.0665, -0.3859, -1.1892, -0.4552, -0.0857, -0.3454],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4810, -0.1684,  0.2364, -1.0776,  0.3937, -1.2841,  0.6119,
         -2.0808,  0.6669, -2.1420, -0.0279, -1.6533,  0.3903,  0.2806],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.4245,  2.9387,  0.1051, -0.2382,  0.1739, -0.4456,  0.1127,
         -0.6723, -1.1306,  0.8642, -4.5045,  0.3776,  0.4690,  0.6955],
        [-0.0525,  1.0233, -0.7867,  0.0398, -0.1232, -0.0993,  0.0089, -1.2233,
          1.5958, -1.9884,  2.9975, -0.5185,  0.7163, -1.0662, -0.9203]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7254, -0.0498, -0.2676, -0.4274,  0.0259,  0.4321,  0.0791,  0.0196,
        -0.5076, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.5063,  0.7209],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6081,  0.0590, -0.5423,  ...,  0.1302, -1.4951, -0.0579],
        ...,
        [-1.5085, -0.0335, -0.4819,  ...,  0.0371, -0.9526, -0.6014],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.5850, -0.0366, -1.6974, -0.2948, -0.1164,  2.7095,
         2.1310,  0.5207, -1.6116, -2.1417, -0.4000, -0.3588, -0.3672, -0.5066,
         0.7713, -0.1532, -0.0976, -2.4758, -0.3360, -0.0238, -3.5627, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2906,  1.6021, -0.4337,  1.9140,  2.5257,
        -0.3055, -0.2749, -0.8935,  0.3931,  0.7927, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.1146, -0.2724,  2.8833,  2.9438, -0.1994,
        -0.0155, -0.7693, -3.4245, -1.2751,  0.0356, -0.5382, -0.4101, -2.5856,
         1.7091,  1.1667, -4.3813, -0.0836, -0.0261,  1.7331, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.1203,  ..., -1.9263, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.9127,  ...,  0.1847,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -0.5726,  ...,  0.5830,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.8077,  ..., -3.0257, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.1534, -0.1825, -0.1253,  3.8374, -0.0342, -0.1419,  3.5360,  0.0530,
        -0.1662, -0.1932,  3.2117, -0.1597,  0.5432, -1.3648,  3.0084,  0.1912],
       device='cuda:0')), ('layers.6.weight', tensor([[-3.0861e-01,  5.8173e-01, -6.8783e-02, -7.2869e-01,  1.0027e-01,
         -1.5879e+00,  3.4749e-01, -9.1402e-02,  2.6968e-01,  1.0108e-02,
         -2.1320e+00,  1.8148e-01,  1.4950e+00,  1.4621e-01,  8.7681e-01,
          8.8138e-01],
        [-5.5744e-01, -2.5276e+00, -6.6083e-02, -6.3537e-01,  7.7449e-02,
         -1.7422e+00,  5.9428e-01, -2.9667e+00, -1.2491e-01, -3.2248e-01,
         -2.0858e+00, -4.7394e-02, -1.3574e+00,  2.5870e-01,  5.3077e-01,
          1.8760e-01],
        [-5.4524e-01, -2.0949e+00,  7.2597e-02, -2.0090e-01, -2.4838e-02,
         -2.0246e+00,  7.5320e-01, -3.5356e+00,  1.4386e-01, -2.1891e-02,
         -2.7308e+00,  2.1864e-01, -2.0366e+00,  3.1152e-01,  3.7099e-01,
          3.8020e-01],
        [-1.6372e+00, -3.6839e-01,  1.4672e-02,  1.2168e+00,  1.7225e-01,
          7.6770e-01,  6.9206e-01, -5.3544e+00,  1.2935e-01,  3.4636e-02,
          3.1303e-01, -6.5249e-02, -2.8038e+00,  4.8572e-01,  4.3565e-01,
          9.5034e-01],
        [ 9.9295e-02, -5.4289e-01, -1.5297e-01, -2.6537e-03, -2.6423e-01,
         -2.6663e+00, -1.1989e+00, -4.9482e+00,  2.7806e-01, -8.1673e-02,
          3.9747e-01, -1.7344e-01, -6.9365e-01,  7.5358e-01,  6.5011e-01,
         -8.4929e-01],
        [-2.9272e-01, -7.5709e-01, -2.3105e-02, -2.5877e-01, -4.7457e-01,
         -8.6965e-01, -1.5255e+00, -5.2900e+00,  1.4677e-02, -4.2051e-01,
         -8.4444e-01, -1.8170e-01, -8.4171e-01,  7.2369e-01,  5.8234e-01,
          2.2744e-02],
        [ 3.4033e-02,  9.9796e-01,  4.0944e-02, -6.8336e-01, -6.5097e-02,
          8.7258e-01, -1.4075e+00, -5.5024e+00, -9.9954e-02, -5.1584e-01,
         -1.8936e+00, -1.9939e-01, -1.2337e+00,  1.2241e+00,  6.1002e-01,
          2.2519e-01]], device='cuda:0')), ('layers.6.bias', tensor([-1.8057,  0.0338,  1.6427,  1.1354,  0.5913,  0.5802,  0.4162],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.442858695983887, 5.391127586364746, 6.656739234924316, 11.791620254516602, 13.977396011352539, 8.495593070983887, 7.786075115203857]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.94521713256836, 8.50333309173584, 8.496698379516602, 6.304023265838623, 15.23494815826416, 7.51142692565918, 9.68395709991455]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [19.766372680664062, 12.102903366088867, 11.219943046569824, 11.276412010192871, 14.687124252319336, 9.109146118164062, 10.40368366241455]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.5930, -1.6866,  0.0732, -0.0252, -0.0646, -0.1400,  0.0255,
         -0.1072, -0.0192,  0.0194,  3.5655, -0.1860,  0.9224,  0.9296],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.5227, -1.4115, -0.1054,  0.4015,  1.6378,  1.3554, -1.5999,
          0.0736, -2.2141, -0.1437, -1.8372, -0.3278,  0.2182,  0.2833],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.1762, -0.3896,  0.0346,  0.2878, -1.9258,  0.6951, -2.0227,
          0.7137, -2.1147, -0.4000, -1.2032, -0.4693, -0.0997, -0.3595],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.5009, -0.2103,  0.2418, -1.1503,  0.1801, -1.5750,  0.6292,
         -2.0594,  0.5759, -2.2376, -0.0606, -1.9823,  0.4103,  0.3005],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.4392,  2.9871,  0.0283, -0.3333,  0.1694, -0.6002,  0.1803,
         -0.5795, -1.3465,  0.6867, -4.5196,  0.3923,  0.4837,  0.7102],
        [-0.0525,  1.0347, -0.8641, -0.0128, -0.0480, -0.0486,  0.0567, -1.1679,
          1.6458, -2.0072,  3.1128, -0.4516,  0.7850, -1.0777, -0.9318]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7614, -0.0498, -0.3243, -0.4274,  0.0259,  0.4462,  0.0791,  0.0196,
        -0.5275, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.5210,  0.7324],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5353,  0.0590, -0.5423,  ...,  0.1302, -1.6766,  0.0044],
        ...,
        [-1.8550, -0.0335, -0.4606,  ...,  0.0371, -0.9024, -1.0663],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.7672, -0.0366, -1.5429, -0.2948, -0.1164,  2.8358,
         2.0676,  0.3817, -1.6116, -2.1571, -0.4000, -0.3588, -0.3672, -0.5572,
         0.6161, -0.1532, -0.0976, -2.6698, -0.3360, -0.0238, -3.6393, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.3583,  1.7473, -0.4337,  1.9318,  2.5683,
        -0.3055, -0.2749, -0.8935,  0.6972,  0.7608, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.2897, -0.2724,  2.8844,  2.9235, -0.1994,
        -0.0155, -0.7693, -3.7184, -1.2732, -0.0126, -0.5097, -0.4101, -2.4402,
         1.6300,  0.9995, -4.4405, -0.0836, -0.1406,  1.6357, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.1539,  ..., -2.1038, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.6795,  ...,  0.4453,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.2273,  ...,  0.8737,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.8298,  ..., -3.1228, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.0302, -0.1825, -0.1253,  3.9618, -0.0342,  0.2643,  3.5909,  0.1915,
        -0.1662, -0.1932,  3.2047, -0.1597,  0.4652, -0.7043,  2.9340,  0.0727],
       device='cuda:0')), ('layers.6.weight', tensor([[-2.8779e-01,  5.8173e-01, -6.8783e-02, -7.1108e-01,  1.0027e-01,
         -1.7549e+00,  3.8896e-01, -1.2923e-01,  2.6968e-01,  1.0108e-02,
         -2.1199e+00,  1.8148e-01,  1.4356e+00,  3.4634e-01,  8.1101e-01,
          7.4110e-01],
        [-2.9439e-01, -2.5276e+00, -6.6083e-02, -5.4171e-01,  7.7449e-02,
         -1.5447e+00,  6.0061e-01, -3.3666e+00, -1.2491e-01, -3.2248e-01,
         -1.9669e+00, -4.7394e-02, -1.5081e+00,  3.4912e-01,  5.5609e-01,
          4.7579e-02],
        [-5.6142e-01, -2.0949e+00,  7.2597e-02, -2.9254e-01, -2.4838e-02,
         -1.7040e+00,  7.7427e-01, -3.7122e+00,  1.4386e-01, -2.1891e-02,
         -2.5561e+00,  2.1864e-01, -2.0852e+00,  4.1985e-01,  4.1881e-01,
          3.9540e-01],
        [-1.9196e+00, -3.6839e-01,  1.4672e-02,  1.2691e+00,  1.7225e-01,
          6.8198e-01,  5.6123e-01, -5.2162e+00,  1.2935e-01,  3.4636e-02,
          4.4189e-01, -6.5249e-02, -2.7327e+00,  5.9529e-01,  4.5639e-01,
          8.4444e-01],
        [ 1.3270e-01, -5.4289e-01, -1.5297e-01,  2.2034e-02, -2.6423e-01,
         -2.7174e+00, -1.3035e+00, -4.9792e+00,  2.7806e-01, -8.1673e-02,
          1.1954e-01, -1.7344e-01, -9.4431e-01,  7.7889e-01,  6.1113e-01,
         -5.5851e-01],
        [-2.3365e-01, -7.5709e-01, -2.3105e-02, -3.1199e-01, -4.7457e-01,
         -1.2472e+00, -1.4841e+00, -5.4532e+00,  1.4677e-02, -4.2051e-01,
         -7.6543e-01, -1.8170e-01, -7.3093e-01,  8.8588e-01,  6.7542e-01,
         -9.3195e-04],
        [-2.0794e-01,  9.9796e-01,  4.0944e-02, -8.3086e-01, -6.5097e-02,
          1.0848e+00, -1.2442e+00, -5.7345e+00, -9.9954e-02, -5.1584e-01,
         -2.0072e+00, -1.9939e-01, -1.0984e+00,  1.1037e+00,  6.4003e-01,
          7.1196e-01]], device='cuda:0')), ('layers.6.bias', tensor([-1.8027, -0.0043,  1.4722,  1.3741,  0.5291,  0.5856,  0.4130],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.567828178405762, 8.576228141784668, 8.425654411315918, 16.832494735717773, 11.690260887145996, 7.664731502532959, 2.5737860202789307]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [15.287259101867676, 11.9721097946167, 10.299599647521973, 14.104525566101074, 14.127988815307617, 8.902097702026367, 3.9546964168548584]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [14.599963188171387, 11.509791374206543, 10.02046012878418, 15.215214729309082, 12.930286407470703, 8.990641593933105, 4.586762428283691]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -6.4336e-01, -1.7370e+00,  2.2775e-02, -2.0063e-01,
         -2.1067e-02, -8.2825e-02,  2.2418e-02, -2.0895e-01, -2.5674e-01,
         -3.2090e-02,  3.5672e+00, -2.4769e-01,  9.7277e-01,  9.8002e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -5.7156e-01, -1.4914e+00, -1.3021e-01,  3.6097e-01,
          1.6809e+00,  1.2417e+00, -1.6656e+00, -9.7706e-02, -2.1794e+00,
         -7.2325e-02, -1.7298e+00, -3.4950e-01,  2.6711e-01,  3.3222e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  1.5827e-01, -4.3132e-01, -9.8169e-03,  4.1943e-02,
         -2.1314e+00,  6.8158e-01, -1.9464e+00,  9.1556e-01, -2.1397e+00,
         -3.8203e-01, -1.1906e+00, -4.5136e-01, -8.1804e-02, -3.4158e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.5293e-01, -2.9316e-01,  3.2304e-01, -1.0271e+00,
          3.2564e-01, -1.3126e+00,  5.1703e-01, -2.1293e+00,  3.7922e-01,
         -2.6716e+00, -4.1350e-03, -2.0079e+00,  4.6227e-01,  3.5256e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -4.0992e-01,  3.0730e+00,  9.0340e-02, -2.9288e-01,
          1.0008e-01, -6.4474e-01,  7.3983e-02, -7.6222e-01, -1.3218e+00,
          7.7944e-01, -4.6767e+00,  3.6301e-01,  4.5441e-01,  6.8093e-01],
        [-5.2546e-02,  1.0796e+00, -9.5182e-01,  2.5347e-02, -1.8650e-02,
         -5.6817e-02,  4.8966e-02, -1.1608e+00,  1.6353e+00, -2.0430e+00,
          3.2219e+00, -3.6182e-01,  8.1930e-01, -1.1226e+00, -9.7669e-01]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.8118, -0.0498, -0.3732, -0.4274,  0.0259,  0.4282,  0.0791,  0.0196,
        -0.5796, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.4916,  0.7773],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6893,  0.0590, -0.5024,  ...,  0.1302, -1.7012,  0.0412],
        ...,
        [-1.6192, -0.0335, -0.3439,  ...,  0.0371, -0.9333, -1.3915],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.6688, -0.0366, -1.4625, -0.2948, -0.1164,  2.9029,
         2.2495,  0.1760, -1.6116, -2.2727, -0.4000, -0.3588, -0.3672, -0.6047,
         0.5583, -0.1532, -0.0976, -2.7701, -0.3360, -0.0238, -3.7188, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.3351,  1.7039, -0.4337,  1.8969,  2.5955,
        -0.3055, -0.2749, -0.8935,  0.7625,  0.7570, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.3153, -0.2724,  2.7429,  3.0887, -0.1994,
        -0.0155, -0.7693, -3.9194, -1.3938, -0.0548, -0.4975, -0.4101, -2.3626,
         1.6336,  0.7701, -4.5657, -0.0836, -0.2889,  1.6756, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.9421,  ..., -1.9254, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0080, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.6011,  ...,  0.5210,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.4969,  ...,  0.8883,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -3.0335,  ..., -3.1101, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2166, -0.1825, -0.1253,  4.1091, -0.0527,  0.5502,  3.4669,  0.2761,
        -0.1662, -0.1932,  3.1062, -0.1597,  0.5672, -0.4795,  2.9364,  0.1355],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0701,  0.5817, -0.0688, -0.6283,  0.1003, -1.8895,  0.6014, -0.1859,
          0.2697,  0.0101, -1.7619,  0.1815,  1.5440,  0.2182,  0.8868,  0.8084],
        [-0.3159, -2.5276, -0.0661, -0.5573,  0.0774, -1.8083,  0.6536, -3.4263,
         -0.1249, -0.3225, -1.8881, -0.0474, -1.4706,  0.2643,  0.6424,  0.1630],
        [-0.4474, -2.0949,  0.0726, -0.1663, -0.0248, -1.8281,  0.7276, -3.7083,
          0.1439, -0.0219, -2.5356,  0.2186, -2.2316,  0.4034,  0.3909,  0.1392],
        [-1.7749, -0.3684,  0.0147,  1.2723,  0.1192,  0.4513,  0.4905, -6.0013,
          0.1293,  0.0346,  0.4241, -0.0652, -2.7142,  0.5894,  0.3925,  0.9547],
        [ 0.2247, -0.5429, -0.1530,  0.0720, -0.2642, -2.5982, -1.2141, -5.1195,
          0.2781, -0.0817,  0.2537, -0.1734, -0.6198,  0.6907,  0.5897, -0.7163],
        [-0.2699, -0.7571, -0.0231, -0.3104, -0.4746, -1.1614, -1.5031, -5.6533,
          0.0147, -0.4205, -0.6734, -0.1817, -0.8956,  0.8340,  0.5726,  0.0474],
        [-0.2684,  0.9980,  0.0409, -0.8232, -0.0651,  1.1340, -1.0593, -5.7696,
         -0.1000, -0.5158, -2.0534, -0.1994, -1.4430,  1.0514,  0.5872,  0.5470]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.8175, -0.1798,  1.6067,  1.3006,  0.8737,  0.7122,  0.3320],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.069652557373047, 8.022882461547852, 8.35354995727539, 16.762657165527344, 10.292882919311523, 3.9657251834869385, 0.3622779846191406]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.18215560913086, 11.364181518554688, 10.059066772460938, 12.72778606414795, 11.183736801147461, 2.9552359580993652, 0.6284222602844238]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [19.661718368530273, 14.804550170898438, 12.081048011779785, 10.570798873901367, 9.84056282043457, 3.4665935039520264, 3.5366976261138916]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.6252, -1.7189,  0.0154,  0.0147, -0.0076, -0.1441, -0.0571,
         -0.1758, -0.3139,  0.1807,  3.6576, -0.1532,  0.9546,  0.9619],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.5990, -1.4138, -0.0401,  0.4127,  1.6124,  1.3117, -1.6267,
         -0.0410, -2.4538, -0.0206, -1.8903, -0.3498,  0.2945,  0.3596],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.2102, -0.4300, -0.0618,  0.0860, -2.0807,  0.7999, -2.1577,
          0.8066, -2.1825, -0.4340, -1.1767, -0.5033, -0.1337, -0.3935],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.5180, -0.3234,  0.2886, -1.2905,  0.3101, -1.1947,  0.5594,
         -1.9604,  0.6209, -2.4134,  0.0333, -2.3124,  0.4273,  0.3176],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.4388,  3.1519,  0.0944, -0.3817,  0.1336, -0.5184,  0.1431,
         -0.7972, -1.3755,  0.9361, -4.7942,  0.3919,  0.4833,  0.7098],
        [-0.0525,  1.1176, -1.0231, -0.0232, -0.1076, -0.1340,  0.0764, -1.1603,
          1.6318, -2.0583,  3.2370, -0.4108,  0.7312, -1.1605, -1.0146]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7937, -0.0498, -0.4006, -0.4274,  0.0259,  0.4802,  0.0791,  0.0196,
        -0.5446, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.5205,  0.8152],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.4831,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.0048],
        ...,
        [-1.5735, -0.0335, -0.1877,  ...,  0.0371, -0.9932, -2.2056],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.8381, -0.0366, -1.1566, -0.2948, -0.1164,  2.9469,
         2.2142,  0.3902, -1.6116, -2.3361, -0.4000, -0.3588, -0.3672, -0.6506,
         0.5470, -0.1532, -0.0976, -2.9756, -0.3360, -0.0238, -3.6942, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.3410,  1.7682, -0.4337,  1.9543,  2.3909,
        -0.3055, -0.2749, -0.8935,  0.7720,  0.8170, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.3357, -0.2724,  3.0338,  3.1225, -0.1994,
        -0.0155, -0.7693, -4.1201, -1.3930,  0.0498, -0.5851, -0.4101, -2.2808,
         1.4976,  0.7731, -4.6928, -0.0836, -0.3513,  1.5698, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.8828,  ..., -1.9540, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.6203,  ...,  0.6925,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.4432,  ...,  0.9489,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.5072,  ..., -2.9619, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2166, -0.1825, -0.1888,  4.2339, -0.0527,  0.7303,  3.5096,  0.2068,
        -0.1662, -0.1932,  3.0344, -0.1597,  0.6179, -0.3265,  2.8722, -0.0466],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0708,  0.5817, -0.0688, -0.6268,  0.1003, -2.0391,  0.6430, -0.2020,
          0.2697,  0.0101, -1.7866,  0.1815,  1.5883,  0.2424,  0.8929,  0.7190],
        [-0.0925, -2.5276, -0.0661, -0.5158,  0.0774, -1.9307,  0.5455, -3.7891,
         -0.1249, -0.3225, -1.9378, -0.0474, -1.5275,  0.1843,  0.6926,  0.1876],
        [-0.3652, -2.0949,  0.0726, -0.2532, -0.0248, -1.8635,  0.8023, -3.8918,
          0.1439, -0.0219, -2.3735,  0.2186, -2.2323,  0.2681,  0.4701,  0.1579],
        [-1.7227, -0.3684,  0.0147,  1.3493,  0.1192,  0.2426,  0.4909, -5.9600,
          0.1293,  0.0346,  0.4576, -0.0652, -2.6878,  0.5542,  0.3405,  0.9421],
        [ 0.2302, -0.5429, -0.0894,  0.1736, -0.2642, -2.5005, -1.2199, -5.2917,
          0.2781, -0.0817,  0.1370, -0.1734, -0.6053,  0.5484,  0.4786, -0.5770],
        [-0.3131, -0.7571, -0.0231, -0.2811, -0.4746, -1.4376, -1.4009, -5.7247,
          0.0147, -0.4205, -0.8311, -0.1817, -0.6277,  0.8412,  0.5552, -0.0445],
        [-0.3254,  0.9980,  0.0409, -0.6983, -0.0651,  1.1432, -1.0865, -6.0265,
         -0.1000, -0.5158, -1.9327, -0.1994, -1.2645,  1.0832,  0.5937,  0.6392]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.7215, -0.4911,  1.3906,  1.4627,  0.7223,  0.6979,  0.1819],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.730184555053711, 8.074630737304688, 7.795907974243164, 17.48611831665039, 11.128705978393555, 7.211443901062012, 3.734884738922119]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [15.849315643310547, 12.857152938842773, 11.510640144348145, 16.315616607666016, 10.667577743530273, 5.22535514831543, 2.7835397720336914]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [17.274518966674805, 14.002684593200684, 12.77695369720459, 16.688663482666016, 7.485446453094482, 5.440398216247559, 4.587332248687744]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.6119, -1.7056,  0.0060, -0.2824,  0.1287, -0.1325, -0.0240,
         -0.2100, -0.2226,  0.3213,  3.7361, -0.0198,  0.9413,  0.9486],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.5797, -1.3342, -0.0973,  0.5259,  1.6086,  1.4537, -1.4160,
          0.1201, -2.6359, -0.0140, -2.0791, -0.3690,  0.2752,  0.3403],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.2511, -0.5178,  0.0548,  0.1747, -2.1263,  0.8228, -2.0641,
          0.8248, -2.1773, -0.4749, -1.2147, -0.5442, -0.1747, -0.4344],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.5477, -0.3843,  0.3357, -0.9453,  0.2454, -1.4294,  0.5540,
         -1.9405,  0.6407, -2.4762,  0.2214, -2.4376,  0.4570,  0.3473],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.4635,  3.1966,  0.1160, -0.4022,  0.1538, -0.6250,  0.1293,
         -0.7288, -1.3479,  0.9658, -4.8806,  0.4166,  0.5080,  0.7345],
        [-0.0525,  1.1318, -1.0629, -0.0176, -0.0706, -0.0917,  0.0987, -1.1770,
          1.6061, -2.1372,  3.3431, -0.4620,  0.7666, -1.1748, -1.0289]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7804, -0.0498, -0.3813, -0.4274,  0.0259,  0.5211,  0.0791,  0.0196,
        -0.5743, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.5453,  0.8295],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5777,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.0103],
        ...,
        [-1.4798, -0.0335,  0.1892,  ...,  0.0371, -0.8956, -1.9216],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.8415, -0.0366, -1.0643, -0.2948, -0.1164,  3.0026,
         2.1060,  0.3155, -1.6116, -2.3566, -0.4000, -0.3588, -0.3672, -0.8018,
         0.4394, -0.1532, -0.0976, -3.0349, -0.3360, -0.0238, -3.8300, -0.4893,
        -0.0145, -0.4163, -0.2943,  0.0381,  1.7001, -0.4337,  1.9509,  2.5302,
        -0.3055, -0.2749, -0.8935,  0.7837,  0.6550, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.5341, -0.2724,  3.2670,  3.1333, -0.1994,
        -0.0155, -0.7693, -4.3195, -1.4310, -0.0096, -0.6060, -0.4101, -2.1602,
         1.5140,  0.7767, -4.7111, -0.0836, -0.5404,  1.4705, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.1008,  ..., -1.8725, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.7084,  ...,  0.6295,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.6463,  ...,  0.9512,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.2671,  ..., -2.6677, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.1141, -0.1825, -0.1888,  4.2028, -0.0527,  0.8050,  3.7245,  0.3686,
        -0.1662, -0.1932,  2.8476, -0.1597,  0.6039, -0.1757,  2.7095, -0.1513],
       device='cuda:0')), ('layers.6.weight', tensor([[ 0.0459,  0.5817, -0.0688, -0.6066,  0.1003, -2.0933,  0.6141,  0.1236,
          0.2697,  0.0101, -1.6739,  0.1815,  1.5634,  0.1146,  0.8929,  0.7490],
        [-0.2162, -2.5276, -0.0661, -0.4521,  0.0774, -1.9162,  0.6527, -3.6760,
         -0.1249, -0.3225, -1.6866, -0.0474, -1.5591,  0.1300,  0.6948,  0.0209],
        [-0.3356, -2.0949,  0.0726, -0.2911, -0.0248, -1.8968,  0.7768, -4.1704,
          0.1439, -0.0219, -2.1845,  0.2186, -2.2494,  0.4863,  0.4736,  0.1111],
        [-1.6008, -0.3684,  0.0147,  1.3033,  0.1192,  0.0879,  0.5111, -6.1917,
          0.1293,  0.0346,  0.5282, -0.0652, -2.9427,  0.5813,  0.3240,  1.0482],
        [ 0.3223, -0.5429, -0.0894,  0.3120, -0.2642, -2.5176, -1.4354, -5.8285,
          0.2781, -0.0817,  0.2179, -0.1734, -0.3454,  0.6570,  0.5439, -0.7597],
        [-0.2451, -0.7571, -0.0231, -0.1798, -0.4746, -1.4091, -1.4897, -6.2167,
          0.0147, -0.4205, -0.8607, -0.1817, -0.6375,  0.6933,  0.4864, -0.0765],
        [-0.1450,  0.9980,  0.0409, -0.6619, -0.0651,  1.2085, -0.9571, -5.9276,
         -0.1000, -0.5158, -1.8460, -0.1994, -1.1857,  1.0972,  0.5716,  0.3908]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.6737, -0.2571,  1.3509,  1.4500,  0.8534,  0.6228,  0.2568],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.435604095458984, 7.507093906402588, 6.845526695251465, 16.283111572265625, 11.578364372253418, 4.634905815124512, 2.118269205093384]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.586143493652344, 13.9236478805542, 12.091507911682129, 13.911723136901855, 8.69783878326416, 0.7334735989570618, 1.8877389430999756]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [21.259719848632812, 18.083799362182617, 15.140925407409668, 12.656898498535156, 4.312101364135742, -0.8798930048942566, 3.129317045211792]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -6.1317e-01, -1.7068e+00,  1.0965e-02, -3.3329e-01,
          1.2820e-01, -1.2588e-01, -5.3778e-02, -5.0808e-01, -2.5671e-01,
          2.2162e-01,  3.8307e+00,  3.6036e-02,  9.4258e-01,  9.4983e-01],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -5.6843e-01, -1.3557e+00, -1.1398e-01,  3.9550e-01,
          1.6214e+00,  1.5703e+00, -1.5840e+00, -9.1596e-02, -2.6303e+00,
         -5.8525e-02, -2.1124e+00, -3.8028e-01,  2.6399e-01,  3.2910e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  2.2401e-01, -5.1764e-01,  2.3850e-03,  1.9347e-01,
         -2.0912e+00,  6.8216e-01, -2.3022e+00,  8.2892e-01, -2.3176e+00,
         -4.4776e-01, -1.1876e+00, -5.1710e-01, -1.4754e-01, -4.0731e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -4.4201e-01, -3.5272e-01,  2.8901e-01, -1.0061e+00,
          4.3103e-01, -1.2101e+00,  5.9298e-01, -2.0862e+00,  8.7069e-01,
         -2.2116e+00,  2.8687e-01, -2.4244e+00,  3.5136e-01,  2.4165e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -5.1495e-01,  3.2878e+00,  1.4202e-01, -2.8731e-01,
          2.5304e-01, -5.1593e-01,  1.2174e-01, -8.6735e-01, -1.3937e+00,
          8.3035e-01, -5.0674e+00,  4.6805e-01,  5.5944e-01,  7.8596e-01],
        [-5.2546e-02,  1.1599e+00, -1.1334e+00,  4.3446e-02, -3.9879e-02,
         -2.0272e-02,  9.0469e-02, -1.2217e+00,  1.5337e+00, -2.2055e+00,
          3.4707e+00, -3.3760e-01,  8.9676e-01, -1.2029e+00, -1.0570e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.7816, -0.0498, -0.3701, -0.4274,  0.0259,  0.4940,  0.0791,  0.0196,
        -0.4686, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.5967,  0.8576],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6652,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.1249],
        ...,
        [-1.5879, -0.0335,  0.2844,  ...,  0.0371, -0.9144, -2.0308],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.7829, -0.0366, -1.0501, -0.2948, -0.1164,  3.1278,
         2.1743,  0.5908, -1.6116, -2.3339, -0.4000, -0.3588, -0.3672, -0.8653,
         0.3865, -0.1532, -0.0976, -3.1040, -0.3360, -0.0238, -3.9528, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.0092,  1.5426, -0.4337,  1.8815,  2.4085,
        -0.3055, -0.2749, -0.8935,  0.9411,  0.6334, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.5529, -0.2724,  3.4014,  3.2880, -0.1994,
        -0.0155, -0.7693, -4.6150, -1.4058, -0.0475, -0.6965, -0.4101, -2.2017,
         1.4613,  0.7270, -4.8202, -0.0836, -0.6162,  1.3398, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.3068,  ..., -1.8426, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.5532,  ...,  0.6433,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -1.9551,  ...,  0.9911,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.6219,  ..., -2.6927, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.1743, -0.1825, -0.1888,  4.2683, -0.0527,  0.9210,  3.7661,  0.2781,
        -0.1662, -0.1932,  2.8477, -0.1597,  0.6156, -0.1802,  2.6981, -0.0902],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.1090,  0.5817, -0.0688, -0.6168,  0.1003, -1.9346,  0.6404, -0.2054,
          0.2697,  0.0101, -1.8259,  0.1815,  1.5937,  0.2150,  0.8982,  0.8162],
        [-0.2066, -2.5276, -0.0661, -0.4244,  0.0774, -1.8699,  0.6791, -4.1888,
         -0.1249, -0.3225, -1.6499, -0.0474, -1.3814,  0.1398,  0.6230,  0.2935],
        [-0.3946, -2.0949,  0.0726, -0.2572, -0.0248, -2.1146,  0.7989, -3.9356,
          0.1439, -0.0219, -2.1071,  0.2186, -2.4806,  0.3377,  0.3618,  0.0586],
        [-1.7843, -0.3684,  0.0147,  1.3697,  0.1192, -0.1001,  0.3699, -6.4853,
          0.1293,  0.0346,  0.4079, -0.0652, -2.9394,  0.7074,  0.3372,  1.0169],
        [ 0.1940, -0.5429, -0.0894,  0.1708, -0.2642, -2.4774, -1.5129, -5.7914,
          0.2781, -0.0817,  0.3315, -0.1734, -0.4094,  0.6122,  0.5451, -1.1398],
        [-0.1091, -0.7571, -0.0231, -0.0672, -0.4746, -1.5006, -1.5357, -5.9284,
          0.0147, -0.4205, -0.8370, -0.1817, -0.5222,  0.7060,  0.4951, -0.2737],
        [-0.1557,  0.9980,  0.0409, -0.6324, -0.0651,  1.2211, -1.1021, -5.8339,
         -0.1000, -0.5158, -1.8618, -0.1994, -1.2140,  1.0453,  0.5687,  0.1571]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.9911, -0.4242,  1.4858,  1.3841,  0.6646,  0.9436,  0.1793],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.792920112609863, 8.678650856018066, 6.958479881286621, 18.507410049438477, 10.59821605682373, 7.27557373046875, 3.45467209815979]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.678001403808594, 13.389547348022461, 10.772542953491211, 16.155574798583984, 7.1504130363464355, 3.8766283988952637, 2.8435890674591064]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [15.1770658493042, 10.778829574584961, 4.354403495788574, 15.379409790039062, 9.118016242980957, 1.988592505455017, -0.25124362111091614]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.6889, -1.7825, -0.0168, -0.2810,  0.0651, -0.2325,  0.0676,
         -0.1787, -0.2085,  0.2683,  3.8591,  0.0543,  1.0183,  1.0255],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.6020, -1.3906, -0.0383,  0.5487,  1.6800,  1.7427, -1.3166,
         -0.1604, -2.7245, -0.0637, -2.1725, -0.3752,  0.2975,  0.3626],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.2587, -0.5680,  0.0314,  0.3675, -2.1065,  0.7332, -2.2913,
          0.9352, -2.3588, -0.4824, -1.2223, -0.5518, -0.1822, -0.4420],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4364, -0.3952,  0.2394, -0.9496,  0.3048, -1.4714,  0.5561,
         -1.9022,  0.8201, -2.4306,  0.0662, -2.6201,  0.3457,  0.2360],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.5494,  3.3312,  0.0925, -0.2996,  0.1665, -0.6481,  0.0799,
         -0.8108, -1.3345,  0.7302, -5.1988,  0.5025,  0.5939,  0.8204],
        [-0.0525,  1.1715, -1.1969,  0.0299, -0.0738, -0.1230,  0.0205, -1.1739,
          1.6440, -2.2356,  3.5605, -0.4855,  0.8222, -1.2145, -1.0686]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.8573, -0.0498, -0.4036, -0.4274,  0.0259,  0.5286,  0.0791,  0.0196,
        -0.4630, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6311,  0.8692],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5250,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.0441],
        ...,
        [-1.7331, -0.0335,  0.2488,  ...,  0.0371, -0.8643, -1.9989],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.9534, -0.0366, -0.9295, -0.2948, -0.1164,  3.3337,
         1.9195,  0.3863, -1.6116, -2.5597, -0.4000, -0.3588, -0.3672, -0.9408,
         0.3534, -0.1532, -0.0976, -3.2443, -0.3360, -0.0238, -4.0486, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.5136, -0.4337,  1.8667,  2.6003,
        -0.3055, -0.2749, -0.8935,  0.8278,  0.8604, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.6617, -0.2724,  3.3210,  3.2689, -0.1994,
        -0.0155, -0.7693, -4.8502, -1.5798, -0.0340, -0.6988, -0.4101, -1.9963,
         1.3332,  0.6820, -4.8772, -0.0836, -0.7622,  0.9867, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.2727,  ..., -1.8969, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.5835,  ...,  0.4422,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -2.4322,  ...,  0.7581,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.6757,  ..., -2.4118, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2691, -0.1825, -0.1888,  4.1771, -0.0527,  1.0738,  3.8079,  0.3238,
        -0.1662, -0.1932,  2.8398, -0.1597,  0.6105,  0.0125,  2.4553, -0.1881],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.1044,  0.5817, -0.0688, -0.5500,  0.1003, -1.8728,  0.5897,  0.0678,
          0.2697,  0.0101, -1.7398,  0.1815,  1.6277,  0.3078,  0.8548,  0.8417],
        [-0.3494, -2.5276, -0.0661, -0.4439,  0.0774, -1.9626,  0.6802, -3.6170,
         -0.1249, -0.3225, -1.7420, -0.0474, -1.3833,  0.3357,  0.6446,  0.4832],
        [-0.3670, -2.0949,  0.0726, -0.1884, -0.0248, -1.9937,  0.9067, -4.0463,
          0.1439, -0.0219, -2.2465,  0.2186, -2.8658,  0.4512,  0.3752,  0.1678],
        [-1.7360, -0.3684,  0.0147,  1.2677,  0.1192, -0.1954,  0.2985, -6.1530,
          0.1293,  0.0346,  0.3701, -0.0652, -2.8449,  0.8325,  0.3864,  0.9425],
        [ 0.3062, -0.5429, -0.0894,  0.3946, -0.2642, -2.7451, -1.5175, -5.8664,
          0.2781, -0.0817,  0.3248, -0.1734, -0.4541,  0.6024,  0.5091, -1.2135],
        [-0.1685, -0.7571, -0.0231, -0.0903, -0.4746, -1.3974, -1.6713, -6.3515,
          0.0147, -0.4205, -0.7404, -0.1817, -0.6661,  0.8193,  0.4468, -0.0716],
        [-0.1049,  0.9980,  0.0409, -0.7037, -0.0651,  1.2686, -1.0446, -6.6837,
         -0.1000, -0.5158, -1.7976, -0.1994, -1.5266,  1.0028,  0.5817,  0.5615]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.0407, -0.2487,  1.6186,  1.3273,  0.7394,  1.1002, -0.0528],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [6.705081939697266, 5.679179668426514, 5.587679862976074, 14.255276679992676, 11.600798606872559, 5.965118885040283, 2.3319942951202393]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.124558448791504, 8.437738418579102, 8.40870189666748, 15.026390075683594, 9.988725662231445, 2.4199395179748535, 0.27985891699790955]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [15.058191299438477, 11.799034118652344, 6.0718255043029785, 11.979511260986328, 9.202998161315918, 3.4087371826171875, 4.204610824584961]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.7150, -1.8087,  0.0630, -0.1085,  0.1061, -0.2284, -0.0562,
         -0.1473, -0.2681,  0.2388,  3.9024, -0.0188,  1.0444,  1.0517],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.6569, -1.3724, -0.1633,  0.5320,  1.5844,  1.7880, -1.4926,
         -0.3681, -2.8964, -0.0075, -2.3231, -0.3203,  0.3525,  0.4176],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.2739, -0.5807, -0.0296,  0.3152, -2.2027,  0.7411, -2.3361,
          0.9600, -2.3844, -0.4977, -1.2474, -0.5670, -0.1974, -0.4572],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.5258, -0.4121,  0.2789, -0.9286,  0.3467, -1.4389,  0.4941,
         -1.9495,  0.6088, -2.8467,  0.0206, -2.5203,  0.4351,  0.3254],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.5351,  3.3972,  0.1238, -0.3665,  0.1181, -0.6741,  0.1145,
         -0.5950, -1.4175,  0.6149, -5.3021,  0.4882,  0.5796,  0.8061],
        [-0.0525,  1.1912, -1.1849,  0.0533, -0.1097, -0.1428, -0.0191, -1.2090,
          1.6439, -2.2987,  3.6264, -0.4565,  0.8478, -1.2342, -1.0883]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.8835, -0.0498, -0.4586, -0.4274,  0.0259,  0.5439,  0.0791,  0.0196,
        -0.5524, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6168,  0.8889],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5173,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.0469],
        ...,
        [-2.0915, -0.0335,  0.3714,  ...,  0.0371, -0.8690, -2.1244],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.9704, -0.0366, -0.9139, -0.2948, -0.1164,  3.4118,
         1.8396, -0.0197, -1.6116, -2.4701, -0.4000, -0.3588, -0.3672, -0.9480,
         0.1025, -0.1532, -0.0976, -3.4017, -0.3360, -0.0238, -4.0980, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.5480, -0.4337,  1.7555,  2.4735,
        -0.3055, -0.2749, -0.8935,  0.7977,  0.8192, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.5144, -0.2724,  3.1718,  3.2942, -0.1994,
        -0.0155, -0.7693, -5.0225, -1.5798,  0.0545, -0.8252, -0.4101, -2.1208,
         1.1529,  0.5025, -4.8557, -0.0836, -0.8859,  0.9001, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.2705,  ..., -1.9070, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.3282,  ...,  0.2538,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -2.7216,  ...,  0.4598,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.7103,  ..., -2.7054, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.3717, -0.1825, -0.1888,  4.2339, -0.0527,  1.1342,  3.9104,  0.2198,
        -0.1662, -0.1932,  2.8175, -0.1597,  0.5508,  0.1875,  2.4446, -0.2657],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.2110,  0.5817, -0.0688, -0.3565,  0.1003, -2.1215,  0.5474,  0.3265,
          0.2697,  0.0101, -1.5278,  0.1815,  1.6007,  0.2308,  0.8371,  0.9272],
        [-0.3062, -2.5276, -0.0661, -0.3436,  0.0774, -2.1770,  0.6663, -3.7654,
         -0.1249, -0.3225, -1.7513, -0.0474, -1.8919,  0.2278,  0.5880,  0.2617],
        [-0.5242, -2.0949,  0.0726, -0.2064, -0.0248, -2.0054,  0.8707, -4.0122,
          0.1439, -0.0219, -2.3009,  0.2186, -2.6003,  0.3492,  0.3872,  0.1772],
        [-1.7956, -0.3684,  0.0147,  1.4143,  0.1192, -0.2212,  0.4719, -6.2499,
          0.1293,  0.0346,  0.4846, -0.0652, -2.7705,  0.8229,  0.3722,  0.9491],
        [ 0.4753, -0.5429, -0.0894,  0.4072, -0.2642, -2.9375, -1.4381, -6.1178,
          0.2781, -0.0817,  0.5206, -0.1734, -0.7933,  0.5735,  0.4890, -1.1008],
        [-0.2656, -0.7571, -0.0231, -0.1523, -0.4746, -1.3860, -1.6238, -6.9128,
          0.0147, -0.4205, -0.6854, -0.1817, -0.8671,  0.7027,  0.4903, -0.3199],
        [-0.1493,  0.9980,  0.0409, -0.7222, -0.0651,  1.2265, -1.1875, -6.3421,
         -0.1000, -0.5158, -1.5200, -0.1994, -1.5539,  0.9942,  0.6587,  0.3874]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.0270, -0.2372,  1.4635,  1.4898,  1.0729,  1.1375, -0.2803],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.593093872070312, 7.4411940574646, 6.757534027099609, 15.821700096130371, 11.09893798828125, 7.4173479080200195, 5.564873218536377]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.308650016784668, 9.601856231689453, 8.62253189086914, 16.44217872619629, 10.272403717041016, 3.9846277236938477, 3.0386388301849365]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.878894805908203, 12.456088066101074, 8.493577003479004, 16.23027801513672, 4.58458137512207, -1.499558925628662, 1.2302500009536743]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.6898, -1.7834, -0.0103, -0.1082,  0.1306, -0.2461,  0.0670,
         -0.0222, -0.1742,  0.2326,  3.9825, -0.0174,  1.0192,  1.0264],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.6970, -1.4615, -0.0538,  0.5045,  1.5991,  1.5405, -1.5443,
         -0.4985, -2.9674, -0.0585, -2.2345, -0.2802,  0.3926,  0.4577],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.2904, -0.6375, -0.0347,  0.2368, -2.2365,  0.8175, -2.2223,
          0.9408, -2.4153, -0.5142, -1.2538, -0.5835, -0.2139, -0.4737],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.5495, -0.3473,  0.2240, -1.0198,  0.4553, -1.5374,  0.4934,
         -1.8113,  0.8905, -2.6191,  0.0245, -2.6005,  0.4588,  0.3491],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.5933,  3.4033,  0.0314, -0.4490,  0.1686, -0.6305,  0.2029,
         -0.5930, -1.4237,  0.6998, -5.3307,  0.5464,  0.6378,  0.8643],
        [-0.0525,  1.1727, -1.2222,  0.0304, -0.1664, -0.0507, -0.0144, -1.2718,
          1.6803, -2.2528,  3.7641, -0.3925,  0.9506, -1.2157, -1.0698]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.8582, -0.0498, -0.4987, -0.4274,  0.0259,  0.5604,  0.0791,  0.0196,
        -0.5761, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6750,  0.8704],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5871,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.0077],
        ...,
        [-2.2112, -0.0335,  0.1697,  ...,  0.0371, -0.9638, -1.9986],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -1.9181, -0.0366, -0.7369, -0.2948, -0.1164,  3.4588,
         1.7198, -0.0318, -1.6116, -2.5408, -0.4000, -0.3588, -0.3672, -1.0206,
         0.1122, -0.1532, -0.0976, -3.4990, -0.3914, -0.0238, -4.1326, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.6905, -0.4337,  1.7600,  2.7033,
        -0.3055, -0.2749, -0.8935,  0.7212,  1.2349, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.4319, -0.2724,  3.3491,  3.1964, -0.1994,
        -0.0155, -0.7693, -5.1657, -1.5798, -0.0270, -0.9410, -0.4101, -2.0522,
         0.6425,  0.4161, -4.9750, -0.0836, -0.9495,  0.8771, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.2054,  ..., -1.9317, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.4055,  ...,  0.2831,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -3.0497,  ...,  0.5551,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.6013,  ..., -2.7716, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4208, -0.1825, -0.1888,  4.3180, -0.0527,  1.2484,  3.9503,  0.2758,
        -0.1662, -0.1932,  2.8908, -0.1597,  0.6131,  0.3653,  2.2560, -0.4634],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0614,  0.5817, -0.0688, -0.4412,  0.1003, -1.8699,  0.5326,  0.1945,
          0.2697,  0.0101, -1.7001,  0.1815,  1.6046,  0.1394,  0.8616,  0.8922],
        [-0.3797, -2.5276, -0.0661, -0.4415,  0.0774, -2.1627,  0.7269, -3.8154,
         -0.1249, -0.3225, -1.8191, -0.0474, -1.7495,  0.2129,  0.5786,  0.5200],
        [-0.5152, -2.0949,  0.0726, -0.1190, -0.0248, -2.1147,  0.9213, -4.4367,
          0.1439, -0.0219, -2.4181,  0.2186, -2.7473,  0.4065,  0.3925,  0.1777],
        [-1.8229, -0.3684,  0.0147,  1.3340,  0.1192, -0.4421,  0.3808, -6.2083,
          0.1293,  0.0346,  0.4570, -0.0652, -3.1324,  0.7467,  0.3659,  0.9006],
        [ 0.4229, -0.5429, -0.0894,  0.2820, -0.2642, -2.9769, -1.5312, -6.2648,
          0.2781, -0.0817,  0.2838, -0.1734, -0.3486,  0.5742,  0.4629, -1.1214],
        [-0.2970, -0.7571, -0.0231, -0.1697, -0.4746, -1.5197, -1.5935, -6.8764,
          0.0147, -0.4205, -0.8662, -0.1817, -0.5244,  0.7895,  0.4787, -0.3038],
        [-0.0516,  0.9980,  0.0409, -0.6573, -0.0651,  1.3342, -1.0308, -6.6968,
         -0.1000, -0.5158, -1.6423, -0.1994, -1.2307,  1.0280,  0.6519,  0.3785]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.0451, -0.1786,  1.2911,  1.4408,  0.9923,  1.0010, -0.3445],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [7.499627113342285, 5.208804607391357, 6.326171875, 15.867908477783203, 10.329167366027832, 7.376798629760742, 5.507262706756592]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.552762985229492, 6.459233283996582, 7.537111282348633, 16.151721954345703, 9.314366340637207, 4.619513511657715, 3.485224723815918]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.50730037689209, 8.55502986907959, 3.797697067260742, 15.301084518432617, 2.070239782333374, -4.391452789306641, -1.8663522005081177]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.7136, -1.8073,  0.0070, -0.1461,  0.0483, -0.2486, -0.0419,
         -0.1998, -0.1005,  0.1964,  4.0564, -0.0426,  1.0430,  1.0502],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.6588, -1.4792, -0.0320,  0.4699,  1.6952,  1.4771, -1.5121,
         -0.5061, -2.9607, -0.0550, -2.2438, -0.3184,  0.3544,  0.4195],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.2872, -0.7128,  0.0470,  0.2287, -2.2897,  0.7021, -2.0873,
          0.7654, -2.5278, -0.5110, -1.2451, -0.5803, -0.2108, -0.4705],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4543, -0.3546,  0.2474, -1.1267,  0.4384, -1.5402,  0.4997,
         -1.8488,  0.9656, -2.7046,  0.2258, -2.2804,  0.3636,  0.2539],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.5626,  3.5180,  0.0942, -0.4003,  0.2022, -0.6304,  0.1243,
         -0.6462, -1.4185,  0.7986, -5.4885,  0.5157,  0.6071,  0.8336],
        [-0.0525,  1.1977, -1.2126,  0.0456, -0.1867, -0.0232,  0.0258, -1.2300,
          1.6874, -2.3039,  3.8099, -0.4917,  0.7555, -1.2407, -1.0948]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.8821, -0.0498, -0.4605, -0.4274,  0.0259,  0.5572,  0.0791,  0.0196,
        -0.4809, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6443,  0.8954],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6366,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.0604],
        ...,
        [-2.6276, -0.0335,  0.1652,  ...,  0.0371, -0.9326, -1.7835],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.0322, -0.0366, -0.7139, -0.2948, -0.1164,  3.4051,
         1.7596, -0.0318, -1.6116, -2.5170, -0.4000, -0.3588, -0.3672, -1.0396,
        -0.0070, -0.1532, -0.0976, -3.5216, -0.3914, -0.0238, -4.2764, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.9506, -0.4337,  1.8909,  2.8708,
        -0.3055, -0.2749, -0.8935,  0.4103,  1.1664, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.2775, -0.2724,  3.4269,  3.2551, -0.1994,
        -0.0155, -0.7693, -5.3493, -1.5798, -0.1010, -1.0688, -0.4101, -2.0924,
         0.7753, -0.0092, -5.1576, -0.0836, -0.9495,  0.7547, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.0059,  ..., -2.1574, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.4878,  ...,  0.0374,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -4.0701,  ...,  0.2882,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.8485,  ..., -2.2042, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.5022, -0.2027, -0.1888,  4.2844, -0.0527,  1.0908,  4.0601,  0.1545,
        -0.1662, -0.1932,  2.8349, -0.1597,  0.8016,  0.5213,  2.2338, -0.2548],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.2585,  0.6453, -0.0688, -0.4539,  0.1003, -1.9962,  0.5937,  0.4764,
          0.2697,  0.0101, -1.8337,  0.1815,  1.6101,  0.2962,  0.9084,  0.7898],
        [-0.3913, -2.4641, -0.0661, -0.3061,  0.0774, -1.8597,  0.6298, -3.8755,
         -0.1249, -0.3225, -1.9314, -0.0474, -1.9223,  0.2994,  0.6305,  0.2494],
        [-0.5275, -2.1584,  0.0726, -0.1415, -0.0248, -2.0719,  0.8276, -4.6186,
          0.1439, -0.0219, -2.4018,  0.2186, -2.9194,  0.4198,  0.4782,  0.2824],
        [-1.8684, -0.2703,  0.0147,  1.3193,  0.1192, -0.5181,  0.4797, -6.5603,
          0.1293,  0.0346,  0.4051, -0.0652, -3.0337,  0.7838,  0.3655,  0.8057],
        [ 0.4126, -0.5429, -0.0894,  0.2810, -0.2642, -2.9950, -1.6238, -6.3613,
          0.2781, -0.0817, -0.1215, -0.1734, -0.4740,  0.7448,  0.5446, -1.4422],
        [-0.2577, -0.6936, -0.0231, -0.1382, -0.4746, -1.8664, -1.6821, -6.9547,
          0.0147, -0.4205, -0.6317, -0.1817, -0.4609,  0.7180,  0.3965, -0.3452],
        [-0.0559,  0.9980,  0.0409, -0.6047, -0.0651,  1.3021, -1.3014, -6.3468,
         -0.1000, -0.5158, -1.3037, -0.1994, -1.3566,  0.9898,  0.7144,  0.3403]],
       device='cuda:0')), ('layers.6.bias', tensor([-1.8757, -0.2467,  1.1648,  1.5043,  0.7267,  1.1240, -0.4318],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.41411018371582, 7.4454665184021, 7.482695579528809, 14.753981590270996, 11.583368301391602, 5.538944244384766, 6.142013072967529]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.63524341583252, 9.315652847290039, 9.659863471984863, 15.853653907775879, 8.960566520690918, 1.1645638942718506, 3.0138514041900635]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.081260681152344, 10.394217491149902, 6.9385833740234375, 15.584418296813965, 2.8538925647735596, -3.613409996032715, 2.235776424407959]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -8.1109e-01, -1.9047e+00,  1.8131e-03, -2.3270e-02,
          7.3229e-03, -2.5091e-01, -1.0238e-01, -5.6939e-02,  2.2988e-03,
         -1.5128e-01,  4.0835e+00,  1.1431e-01,  1.1405e+00,  1.1477e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -6.9674e-01, -1.5151e+00, -1.4986e-01,  4.9441e-01,
          1.7092e+00,  1.4341e+00, -1.6124e+00, -7.7476e-01, -2.9739e+00,
         -2.1014e-02, -2.2043e+00, -2.8046e-01,  3.9231e-01,  4.5742e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  2.9411e-01, -7.0467e-01, -1.4614e-02,  1.6028e-01,
         -2.2057e+00,  6.4610e-01, -2.3848e+00,  7.5195e-01, -2.5623e+00,
         -5.1788e-01, -1.2656e+00, -5.8721e-01, -2.1764e-01, -4.7742e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.0464e-01, -4.3258e-01,  2.6164e-01, -1.0512e+00,
          3.8028e-01, -1.6076e+00,  4.4073e-01, -1.9963e+00,  9.5321e-01,
         -2.5676e+00,  1.3753e-01, -2.4739e+00,  4.1399e-01,  3.0428e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -5.6684e-01,  3.5358e+00,  1.6143e-01, -4.0001e-01,
          1.8782e-01, -6.3656e-01,  1.2733e-01, -7.1304e-01, -1.3988e+00,
          9.5232e-01, -5.5375e+00,  5.1995e-01,  6.1133e-01,  8.3785e-01],
        [-5.2546e-02,  1.2203e+00, -1.3222e+00,  8.8824e-02, -1.3751e-01,
         -4.4707e-02, -8.4173e-02, -1.2795e+00,  1.5381e+00, -2.4085e+00,
          3.9109e+00, -4.2903e-01,  7.3927e-01, -1.2633e+00, -1.1174e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.9796, -0.0498, -0.4984, -0.4274,  0.0259,  0.5641,  0.0791,  0.0196,
        -0.5313, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6486,  0.9180],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5966,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.0164],
        ...,
        [-2.9914, -0.0335,  0.1464,  ...,  0.0371, -0.9286, -2.5681],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.1794, -0.0366, -0.5259, -0.2948, -0.1164,  3.5720,
         1.7737, -0.0318, -1.6116, -2.6052, -0.4000, -0.3588, -0.3672, -1.1082,
        -0.0070, -0.1532, -0.0976, -3.5220, -0.3914, -0.0238, -4.3559, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.8272, -0.4337,  1.9363,  2.8213,
        -0.3124, -0.2749, -0.8935,  0.4245,  1.1380, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.1221, -0.2724,  3.5065,  3.2389, -0.1994,
        -0.0155, -0.7693, -5.6572, -1.5798, -0.0117, -1.2257, -0.4101, -1.9194,
         0.5935, -0.0092, -5.3016, -0.0836, -0.9495,  0.7795, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.0817,  ..., -2.1722, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.3723,  ..., -0.0864,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -4.6866,  ...,  0.1760,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.4950,  ..., -1.8605, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4060, -0.2027, -0.1888,  4.3473, -0.0527,  1.2072,  4.0192,  0.1643,
        -0.1662, -0.1932,  2.8134, -0.1597,  0.7624,  0.5980,  2.0961, -0.2185],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.1614,  0.6453, -0.0688, -0.4147,  0.1003, -2.0741,  0.6092,  0.5312,
          0.2697,  0.0101, -1.6362,  0.1815,  1.5828,  0.2110,  0.9534,  0.9316],
        [-0.3427, -2.4641, -0.0661, -0.3188,  0.0774, -1.8958,  0.7979, -3.6098,
         -0.1249, -0.3225, -1.9560, -0.0474, -1.9070,  0.2350,  0.6377,  0.3527],
        [-0.3283, -2.1584,  0.0726, -0.2014, -0.0248, -2.1769,  0.7304, -5.1699,
          0.1439, -0.0219, -2.2701,  0.2186, -2.9983,  0.2728,  0.4912,  0.3006],
        [-1.8439, -0.2703,  0.0147,  1.3136,  0.1192, -0.4586,  0.4117, -6.5758,
          0.1293,  0.0346,  0.3378, -0.0652, -3.1189,  0.7856,  0.3265,  0.9689],
        [ 0.3952, -0.5429, -0.0894,  0.2329, -0.2642, -3.1178, -1.5567, -6.4965,
          0.2781, -0.0817,  0.0161, -0.1734, -0.2221,  0.7558,  0.5413, -1.2998],
        [-0.1054, -0.6936, -0.0231, -0.1532, -0.4746, -1.8277, -1.5871, -6.6131,
          0.0147, -0.4205, -0.4982, -0.1817, -0.6220,  0.8540,  0.4102, -0.1688],
        [-0.0251,  0.9980,  0.0409, -0.6288, -0.0651,  1.3387, -1.0778, -6.4240,
         -0.1000, -0.5158, -1.3851, -0.1994, -1.3278,  1.0133,  0.7300,  0.3261]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.0588, -0.0737,  1.1300,  1.5398,  0.9069,  1.3748, -0.3489],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.47280502319336, 6.67379093170166, 6.672868728637695, 16.18529510498047, 10.499402046203613, 6.21027946472168, 5.506333827972412]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.251668930053711, 9.089301109313965, 8.784738540649414, 17.139785766601562, 8.633261680603027, 2.6093506813049316, 3.270944356918335]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [13.66636848449707, 7.589442253112793, 3.083843469619751, 13.661879539489746, 3.881636619567871, -1.999401569366455, 1.3669284582138062]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -8.5167e-01, -1.9453e+00, -4.1584e-02, -1.2456e-02,
          1.3106e-02, -1.4039e-01, -6.8541e-02, -1.5201e-02,  1.2665e-01,
         -3.4900e-02,  4.0951e+00, -4.3990e-02,  1.1811e+00,  1.1883e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -7.3871e-01, -1.4555e+00, -6.9209e-02,  3.6959e-01,
          1.7392e+00,  1.4224e+00, -1.4418e+00, -5.2939e-01, -3.2575e+00,
          2.9434e-03, -2.3952e+00, -2.3848e-01,  4.3429e-01,  4.9940e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  2.7828e-01, -6.9855e-01, -2.9992e-03,  1.9824e-01,
         -2.2848e+00,  5.5232e-01, -2.6457e+00,  6.0201e-01, -2.5431e+00,
         -5.0204e-01, -1.2433e+00, -5.7137e-01, -2.0181e-01, -4.6159e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.5869e-01, -4.1217e-01,  2.7056e-01, -1.1790e+00,
          4.1406e-01, -1.6236e+00,  4.8341e-01, -1.8558e+00,  8.3566e-01,
         -2.8229e+00,  4.0746e-02, -2.5895e+00,  4.6804e-01,  3.5834e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -5.7184e-01,  3.5563e+00,  3.9817e-02, -3.0818e-01,
          1.5022e-01, -7.0229e-01,  2.3648e-01, -6.4749e-01, -1.5267e+00,
          9.0508e-01, -5.5571e+00,  5.2495e-01,  6.1633e-01,  8.4285e-01],
        [-5.2546e-02,  1.2041e+00, -1.2741e+00, -8.5976e-03, -6.7113e-02,
         -8.4206e-02, -1.9741e-02, -1.2472e+00,  1.5472e+00, -2.4282e+00,
          4.1238e+00, -3.9142e-01,  6.6003e-01, -1.2470e+00, -1.1012e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.0201, -0.0498, -0.5404, -0.4274,  0.0259,  0.5482,  0.0791,  0.0196,
        -0.5853, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6536,  0.9017],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5053,  0.0590, -0.4449,  ...,  0.1302, -1.7012, -0.0243],
        ...,
        [-3.1443, -0.0335,  0.1735,  ...,  0.0371, -0.9023, -2.5601],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.3490, -0.0366, -0.3116, -0.2948, -0.1164,  3.6485,
         1.7111, -0.0318, -1.6116, -2.8104, -0.4000, -0.3588, -0.3672, -1.0501,
        -0.0070, -0.1532, -0.0976, -3.5816, -0.3914, -0.0238, -4.3534, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.8681, -0.4337,  1.9392,  2.7504,
        -0.3124, -0.2749, -0.8935,  0.3101,  1.1487, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.0521, -0.2724,  3.6140,  3.3013, -0.1994,
        -0.0155, -0.7693, -5.8635, -1.5798,  0.0981, -1.4554, -0.4101, -1.9163,
         0.2653, -0.0092, -5.4313, -0.0836, -0.9495,  0.8731, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.4640,  ..., -2.3221, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.2871,  ..., -0.1427,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -4.4820,  ..., -0.0460,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.7561,  ..., -2.3891, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2336, -0.2027, -0.1888,  4.3852, -0.0527,  1.2837,  3.9922,  0.1615,
        -0.1662, -0.1932,  2.6858, -0.1597,  0.8121,  0.7114,  2.1695, -0.5263],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0683,  0.6453, -0.0688, -0.4013,  0.1003, -2.2192,  0.6391,  0.5795,
          0.2697,  0.0101, -1.5293,  0.1815,  1.6031,  0.2278,  0.9680,  0.9433],
        [-0.3184, -2.4641, -0.0661, -0.2891,  0.0774, -2.2376,  0.5393, -3.9260,
         -0.1249, -0.3225, -1.9065, -0.0474, -2.0954,  0.2634,  0.7017,  0.4090],
        [-0.4988, -2.1584,  0.0726, -0.1812, -0.0248, -2.2777,  0.8655, -4.9756,
          0.1439, -0.0219, -2.4008,  0.2186, -2.9875,  0.4599,  0.4898,  0.0500],
        [-1.8226, -0.2703,  0.0147,  1.3397,  0.1192, -0.5927,  0.3185, -6.7215,
          0.1293,  0.0346,  0.3374, -0.0652, -2.9413,  0.8472,  0.3650,  0.9858],
        [ 0.4653, -0.5429, -0.0894,  0.3234, -0.2642, -3.3436, -1.5354, -6.3139,
          0.2781, -0.0817, -0.0813, -0.1734, -0.1078,  0.6449,  0.6560, -1.0498],
        [-0.4115, -0.6936, -0.0231, -0.1948, -0.4746, -1.8988, -1.5811, -6.8360,
          0.0147, -0.4205, -0.7130, -0.1817, -0.3332,  0.7824,  0.5001, -0.1080],
        [-0.0979,  0.9980,  0.0409, -0.5935, -0.0651,  1.3439, -1.1129, -6.5408,
         -0.1000, -0.5158, -1.2183, -0.1994, -1.4243,  1.0021,  0.6997,  0.5122]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.1940, -0.1986,  1.4122,  1.5603,  0.8053,  1.2347, -0.4992],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.66236400604248, 8.228734970092773, 7.265620231628418, 16.293622970581055, 13.766700744628906, 7.202090263366699, 5.702749252319336]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.517733573913574, 9.489240646362305, 8.927367210388184, 17.367015838623047, 12.168512344360352, 3.9014010429382324, 3.3838586807250977]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [19.435575485229492, 13.214508056640625, 10.453205108642578, 13.468597412109375, 4.988893508911133, -0.7432748079299927, 3.679107666015625]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -7.7685e-01, -1.8705e+00, -1.1420e-02, -2.5926e-03,
          1.5730e-02,  3.9636e-02, -6.1276e-02, -9.1565e-02,  1.2858e-01,
         -1.6201e-01,  4.2101e+00,  1.6459e-01,  1.1063e+00,  1.1135e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -7.4418e-01, -1.5048e+00,  1.3092e-02,  5.8491e-01,
          1.7874e+00,  1.4530e+00, -1.5313e+00, -5.2723e-01, -3.2281e+00,
          1.7260e-02, -2.3865e+00, -2.3302e-01,  4.3975e-01,  5.0486e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.3313e-01, -6.6219e-01, -2.1543e-02,  2.0651e-01,
         -2.4339e+00,  5.9986e-01, -2.4842e+00,  7.2584e-01, -2.6027e+00,
         -5.5690e-01, -1.2926e+00, -6.2623e-01, -2.5667e-01, -5.1644e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.2511e-01, -3.6679e-01,  2.2623e-01, -1.0705e+00,
          4.1422e-01, -1.5804e+00,  5.8746e-01, -1.8495e+00,  8.4845e-01,
         -2.9372e+00,  1.3789e-01, -2.3854e+00,  4.3445e-01,  3.2475e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -5.8858e-01,  3.6219e+00,  5.5863e-02, -4.6714e-01,
          1.9369e-01, -7.7887e-01,  2.1850e-01, -8.4397e-01, -1.4416e+00,
          8.4113e-01, -5.6587e+00,  5.4168e-01,  6.3306e-01,  8.5958e-01],
        [-5.2546e-02,  1.2143e+00, -1.2619e+00,  2.4346e-02, -1.3239e-01,
         -1.0231e-01, -3.6556e-02, -1.1648e+00,  1.5749e+00, -2.4149e+00,
          4.2614e+00, -4.7761e-01,  5.3374e-01, -1.2572e+00, -1.1114e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.9453, -0.0498, -0.5458, -0.4274,  0.0259,  0.6031,  0.0791,  0.0196,
        -0.5518, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6703,  0.9119],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5466,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.0579],
        ...,
        [-3.4208, -0.0335,  0.1767,  ...,  0.0371, -1.0223, -2.5148],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.2420, -0.0366, -0.2406, -0.2948, -0.1164,  3.7873,
         1.8225, -0.0954, -1.6116, -2.8933, -0.4000, -0.3588, -0.3672, -1.1352,
        -0.0070, -0.1532, -0.0976, -3.8660, -0.3914, -0.0238, -4.4721, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.7587, -0.4337,  1.8286,  2.6519,
        -0.3759, -0.2749, -0.8935,  0.2626,  0.8209, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.1215, -0.2724,  3.6042,  3.2473, -0.1994,
        -0.0155, -0.7693, -6.0752, -1.5798,  0.0541, -1.3566, -0.4101, -1.9495,
         0.2967, -0.0092, -5.5225, -0.0836, -0.9495,  1.0266, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.3549,  ..., -2.6400, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.1778,  ..., -0.3008,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -4.8124,  ..., -0.1988,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.8885,  ..., -1.9855, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4344, -0.2027, -0.1888,  4.4879, -0.0527,  1.0708,  4.0364,  0.3484,
        -0.1662, -0.1932,  2.7358, -0.1597,  0.8638,  0.9294,  2.2110, -0.3918],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0997,  0.6453, -0.0688, -0.4955,  0.1003, -2.1246,  0.7510,  0.5041,
          0.2697,  0.0101, -1.4703,  0.1815,  1.7179,  0.2171,  0.9879,  0.9553],
        [-0.2710, -2.4641, -0.0661, -0.3162,  0.0774, -2.3115,  0.6037, -3.9679,
         -0.1249, -0.3225, -1.6815, -0.0474, -2.1045,  0.0937,  0.6410,  0.3046],
        [-0.2205, -2.1584,  0.0726, -0.1682, -0.0248, -2.3761,  0.8893, -4.8387,
          0.1439, -0.0219, -2.2059,  0.2186, -2.7792,  0.1688,  0.4124,  0.3971],
        [-1.8839, -0.2703,  0.0147,  1.3430,  0.1192, -0.9378,  0.2890, -7.1815,
          0.1293,  0.0346,  0.1416, -0.0652, -3.2447,  0.8069,  0.3552,  1.0901],
        [ 0.2783, -0.5429, -0.0894,  0.3245, -0.2642, -3.4901, -1.4307, -6.4115,
          0.2781, -0.0817, -0.0720, -0.1734, -0.0163,  0.5101,  0.5167, -1.4984],
        [-0.3365, -0.6936, -0.0231, -0.1236, -0.4746, -1.8450, -1.4970, -7.0954,
          0.0147, -0.4205, -0.7544, -0.1817, -0.1909,  0.7762,  0.5498, -0.3699],
        [-0.0469,  0.9980,  0.0409, -0.5731, -0.0651,  1.3251, -1.1035, -6.7576,
         -0.1000, -0.5158, -1.1769, -0.1994, -1.1255,  1.0293,  0.7407,  0.3777]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.2532, -0.3548,  1.2400,  1.3845,  0.6576,  0.9145, -0.3289],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [6.768956184387207, 5.401054382324219, 5.203834533691406, 15.27733039855957, 10.143505096435547, 7.041424751281738, 5.055273532867432]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.44301986694336, 6.501481533050537, 6.699536323547363, 16.10691261291504, 9.09918212890625, 4.737361907958984, 3.250605583190918]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [15.546724319458008, 11.33521556854248, 11.189888954162598, 17.893089294433594, 7.9111833572387695, 3.2044870853424072, 3.9171142578125]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -8.2488e-01, -1.9185e+00, -2.5922e-02,  1.3915e-01,
          5.7562e-02, -2.5378e-01, -4.9282e-03, -1.5542e-01,  1.9596e-01,
         -2.5315e-01,  4.1807e+00,  2.2605e-01,  1.1543e+00,  1.1615e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -7.6312e-01, -1.4769e+00, -2.6834e-02,  4.7945e-01,
          1.7696e+00,  1.5001e+00, -1.5176e+00, -7.0635e-01, -3.3759e+00,
          4.6199e-02, -2.5288e+00, -2.2465e-01,  4.5869e-01,  5.2380e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.7178e-01, -6.1949e-01, -2.1208e-02,  2.1921e-01,
         -2.4876e+00,  7.3336e-01, -2.4603e+00,  8.3009e-01, -2.6458e+00,
         -5.9555e-01, -1.3170e+00, -6.6489e-01, -2.9532e-01, -5.5509e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.1752e-01, -3.3245e-01,  2.1590e-01, -9.7885e-01,
          3.6856e-01, -1.4268e+00,  5.4236e-01, -1.8805e+00,  9.6424e-01,
         -2.7645e+00,  9.4139e-02, -2.5321e+00,  4.2686e-01,  3.1716e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -6.3626e-01,  3.6694e+00,  5.2688e-02, -4.6955e-01,
          9.9028e-02, -6.9144e-01,  1.1548e-01, -6.8527e-01, -1.4721e+00,
          8.7206e-01, -5.8139e+00,  5.8937e-01,  6.8075e-01,  9.0727e-01],
        [-5.2546e-02,  1.2108e+00, -1.2911e+00, -4.0998e-02, -1.4088e-01,
         -1.1616e-01,  3.6368e-02, -1.2173e+00,  1.6270e+00, -2.5476e+00,
          4.2242e+00, -3.9126e-01,  5.7966e-01, -1.2538e+00, -1.1079e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-0.9934, -0.0498, -0.5648, -0.4274,  0.0259,  0.6418,  0.0791,  0.0196,
        -0.5442, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.7180,  0.9085],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5169,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.0480],
        ...,
        [-3.7729, -0.0335,  0.1745,  ...,  0.0371, -0.9765, -2.6891],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.2777, -0.0366, -0.1689, -0.2948, -0.1164,  3.7712,
         1.6645, -0.0954, -1.6116, -2.7857, -0.4000, -0.3588, -0.3672, -1.2619,
        -0.0070, -0.1532, -0.0976, -4.0184, -0.3914, -0.0238, -4.5136, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.7912, -0.4337,  1.9450,  2.6926,
        -0.3759, -0.2749, -0.8935,  0.1793,  0.8005, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350,  0.1073, -0.2724,  3.6481,  3.1953, -0.1994,
        -0.0155, -0.7693, -6.2255, -1.6433,  0.0688, -1.4202, -0.4101, -1.8185,
         0.0897, -0.0092, -5.4589, -0.0836, -0.9495,  1.0015, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.0746,  ..., -2.5541, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.0363,  ..., -0.4324,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -5.0074,  ..., -0.5387,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -3.0540,  ..., -2.2465, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4332, -0.2027, -0.1888,  4.5110, -0.0527,  1.0924,  4.0488,  0.4021,
        -0.1662, -0.1932,  2.5824, -0.1597,  0.8154,  1.1067,  2.1128, -0.5421],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0764,  0.6453, -0.0688, -0.4840,  0.1003, -2.3415,  0.8711,  0.3334,
          0.2697,  0.0101, -1.4661,  0.1815,  1.6001,  0.1649,  0.9554,  0.8633],
        [-0.2075, -2.4641, -0.0661, -0.4358,  0.0774, -2.4003,  0.7290, -4.3246,
         -0.1249, -0.3225, -1.8039, -0.0474, -2.0300,  0.1535,  0.7088,  0.1994],
        [-0.4716, -2.1584,  0.0726, -0.0457, -0.0248, -2.6071,  0.7050, -5.0608,
          0.1439, -0.0219, -2.1603,  0.2186, -3.3793,  0.2405,  0.4374,  0.2310],
        [-1.8418, -0.2703,  0.0147,  1.2971,  0.1192, -0.9662,  0.2848, -7.5685,
          0.1293,  0.0346,  0.1678, -0.0652, -3.2589,  0.8381,  0.4436,  1.2715],
        [ 0.3158, -0.5429, -0.0894,  0.3050, -0.2642, -3.5459, -1.5137, -6.3551,
          0.2781, -0.0817, -0.0968, -0.1734,  0.0722,  0.5288,  0.5691, -1.8662],
        [-0.2796, -0.6936, -0.0231, -0.1859, -0.4746, -1.8037, -1.4203, -7.0486,
          0.0147, -0.4205, -0.6337, -0.1817, -0.1345,  0.7285,  0.4672, -0.3911],
        [-0.0532,  0.9980,  0.0409, -0.5792, -0.0651,  1.2959, -0.9967, -6.8128,
         -0.1000, -0.5158, -1.2779, -0.1994, -0.9888,  0.9370,  0.6933,  0.4101]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.2697, -0.3788,  1.3386,  1.3056,  0.8198,  0.9039, -0.4948],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.364446640014648, 6.678108215332031, 7.2060675621032715, 17.17325782775879, 12.653017044067383, 6.257020950317383, 5.273015975952148]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.564945220947266, 7.478816032409668, 8.005927085876465, 17.345834732055664, 11.053659439086914, 3.6981916427612305, 3.2997350692749023]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [14.542678833007812, 11.267370223999023, 11.061813354492188, 18.505577087402344, 7.585883617401123, -0.5861390829086304, 1.011635422706604]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -8.3508e-01, -1.9288e+00,  1.7622e-02, -1.5553e-02,
          6.0534e-02, -3.4349e-01, -4.2265e-02, -2.6307e-01,  2.1026e-01,
         -2.8127e-01,  4.2438e+00,  1.8789e-01,  1.1645e+00,  1.1718e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -7.8474e-01, -1.4834e+00,  4.2980e-03,  4.1768e-01,
          1.7329e+00,  1.5574e+00, -1.4567e+00, -7.1564e-01, -3.5343e+00,
          6.7827e-02, -2.5685e+00, -2.0302e-01,  4.8031e-01,  5.4543e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.4709e-01, -6.6451e-01, -4.2225e-02,  2.1976e-01,
         -2.5028e+00,  6.0319e-01, -2.6513e+00,  7.8000e-01, -2.6146e+00,
         -5.7086e-01, -1.2943e+00, -6.4020e-01, -2.7063e-01, -5.3040e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -4.7624e-01, -3.3568e-01,  2.4878e-01, -9.4526e-01,
          4.4032e-01, -1.2349e+00,  5.3199e-01, -1.7795e+00,  1.1115e+00,
         -2.8257e+00,  6.6179e-03, -2.6708e+00,  3.8559e-01,  2.7588e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -6.1857e-01,  3.7044e+00,  1.0815e-01, -4.2333e-01,
          2.2791e-01, -6.3547e-01,  1.7407e-01, -9.5324e-01, -1.4927e+00,
          9.2782e-01, -5.7997e+00,  5.7168e-01,  6.6306e-01,  8.8958e-01],
        [-5.2546e-02,  1.2078e+00, -1.2664e+00,  4.3788e-02, -2.4541e-01,
         -1.4089e-01, -3.6079e-02, -1.2840e+00,  1.7255e+00, -2.5596e+00,
          4.3507e+00, -5.0009e-01,  5.2485e-01, -1.2507e+00, -1.1049e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.0036, -0.0498, -0.5864, -0.4274,  0.0259,  0.6171,  0.0791,  0.0196,
        -0.5029, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.7003,  0.9054],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5400,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.1066],
        ...,
        [-4.0337, -0.0335,  0.2400,  ...,  0.0371, -1.0111, -3.0145],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.2924, -0.0366, -0.0641, -0.2948, -0.1164,  3.9219,
         1.6793, -0.0954, -1.6116, -2.8518, -0.4000, -0.3588, -0.3672, -1.2614,
        -0.0070, -0.1532, -0.0976, -3.9895, -0.3914, -0.0238, -4.5701, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  2.0640, -0.4337,  1.7518,  2.6752,
        -0.3759, -0.2749, -0.8935,  0.2266,  0.7501, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350, -0.0742, -0.2724,  3.6754,  3.1496, -0.1994,
        -0.0155, -0.7693, -6.5862, -1.6433, -0.0844, -1.5171, -0.4101, -1.8568,
        -0.0329, -0.0092, -5.6794, -0.0836, -0.9495,  0.8617, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.1783,  ..., -2.6166, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.0808,  ..., -0.5626,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -5.2251,  ..., -0.6340,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.8691,  ..., -2.3857, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4036, -0.2027, -0.1888,  4.5644, -0.0527,  1.2227,  4.1684,  0.5033,
        -0.1662, -0.1932,  2.5919, -0.1597,  0.8869,  1.0149,  1.9566, -0.6160],
       device='cuda:0')), ('layers.6.weight', tensor([[-2.0613e-01,  6.4527e-01, -6.8783e-02, -5.1312e-01,  1.0027e-01,
         -2.3589e+00,  8.5238e-01,  7.6636e-01,  2.6968e-01,  1.0108e-02,
         -1.4206e+00,  1.8148e-01,  1.6195e+00,  1.0545e-01,  9.7631e-01,
          1.0146e+00],
        [-4.2644e-01, -2.4641e+00, -6.6083e-02, -4.1380e-01,  7.7449e-02,
         -2.3976e+00,  8.5806e-01, -4.3996e+00, -1.2491e-01, -3.2248e-01,
         -1.7216e+00, -4.7394e-02, -2.1546e+00,  1.0229e-01,  7.0683e-01,
          2.5330e-01],
        [-5.4098e-01, -2.1584e+00,  7.2597e-02, -2.5779e-01, -2.4838e-02,
         -2.5359e+00,  1.0246e+00, -5.4952e+00,  1.4386e-01, -2.1891e-02,
         -2.0223e+00,  2.1864e-01, -3.4112e+00,  2.5034e-01,  3.8910e-01,
          2.0252e-01],
        [-1.9021e+00, -2.7034e-01,  1.4672e-02,  1.3140e+00,  1.1920e-01,
         -8.5160e-01,  3.2315e-01, -8.0066e+00,  1.2935e-01,  3.4636e-02,
          1.3889e-01, -6.5249e-02, -3.2167e+00,  8.8460e-01,  4.6289e-01,
          1.2909e+00],
        [ 4.3776e-01, -5.4288e-01, -8.9440e-02,  3.9143e-01, -2.6423e-01,
         -3.6171e+00, -1.2593e+00, -6.3427e+00,  2.7806e-01, -8.1673e-02,
         -9.2136e-02, -1.7344e-01, -1.8248e-03,  5.7088e-01,  5.9416e-01,
         -1.6843e+00],
        [-1.3384e-01, -6.9356e-01, -2.3105e-02, -1.9391e-01, -4.7457e-01,
         -1.8531e+00, -1.2544e+00, -7.2579e+00,  1.4677e-02, -4.2051e-01,
         -1.0155e+00, -1.8170e-01, -3.9012e-01,  7.3934e-01,  5.5411e-01,
         -4.4125e-01],
        [-3.9224e-02,  9.9796e-01,  4.0944e-02, -6.5687e-01, -6.5097e-02,
          1.3004e+00, -8.4403e-01, -6.9383e+00, -9.9954e-02, -5.1584e-01,
         -1.3795e+00, -1.9939e-01, -1.1211e+00,  9.0005e-01,  7.3714e-01,
          3.2670e-01]], device='cuda:0')), ('layers.6.bias', tensor([-2.0582, -0.3540,  1.6478,  1.4212,  1.0470,  0.8761, -0.5367],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.7435941696167, 7.6295599937438965, 5.785486221313477, 17.336956024169922, 13.506282806396484, 7.004190444946289, 5.136746406555176]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.580674171447754, 9.080540657043457, 7.29833984375, 17.58847999572754, 12.460968017578125, 4.700936317443848, 3.4524905681610107]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [16.21884536743164, 12.841854095458984, 10.206033706665039, 14.884944915771484, 4.72824764251709, -0.07417535781860352, 2.28800630569458]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -8.6660e-01, -1.9603e+00, -3.5283e-02, -2.8808e-01,
         -9.8289e-03, -2.0702e-01, -2.5319e-02, -1.5700e-01,  3.5536e-01,
         -3.9650e-01,  4.2830e+00,  1.1035e-01,  1.1960e+00,  1.2033e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -7.1610e-01, -1.5137e+00, -1.5743e-01,  3.5349e-01,
          1.8909e+00,  1.5185e+00, -1.5196e+00, -9.6633e-01, -3.4722e+00,
         -8.1691e-04, -2.4633e+00, -2.7166e-01,  4.1167e-01,  4.7678e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.1534e-01, -7.0958e-01, -9.0841e-02,  2.9975e-01,
         -2.5346e+00,  6.5090e-01, -2.7540e+00,  7.7546e-01, -2.6636e+00,
         -5.3911e-01, -1.2211e+00, -6.0845e-01, -2.3888e-01, -4.9865e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -4.9532e-01, -4.2055e-01,  2.5395e-01, -8.0395e-01,
          2.4119e-01, -1.5411e+00,  5.8247e-01, -1.9457e+00,  1.1356e+00,
         -3.0237e+00,  1.0636e-01, -2.4450e+00,  4.0466e-01,  2.9495e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -5.4835e-01,  3.7797e+00,  3.4310e-02, -3.7835e-01,
          1.5298e-01, -7.6626e-01,  1.6078e-01, -8.8469e-01, -1.5586e+00,
          9.0900e-01, -5.8185e+00,  5.0146e-01,  5.9284e-01,  8.1936e-01],
        [-5.2546e-02,  1.2520e+00, -1.1808e+00,  4.1254e-03, -1.2112e-01,
         -8.0778e-02, -7.3783e-02, -1.2659e+00,  1.7670e+00, -2.5688e+00,
          4.4952e+00, -4.9575e-01,  5.0270e-01, -1.2949e+00, -1.1490e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.0351, -0.0498, -0.5178, -0.4274,  0.0259,  0.5853,  0.0791,  0.0196,
        -0.5220, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6301,  0.9496],
       device='cuda:0')), ('layers.2.weight', tensor([[-1.8299e-01,  3.3129e-02, -1.7998e+00,  ...,  7.1283e-02,
         -1.9534e-01, -2.3948e-02],
        [-2.8449e-01,  1.0840e-02, -1.6782e-01,  ..., -5.5688e-02,
         -3.4644e-02, -2.3017e-01],
        [ 5.6106e-01,  5.8952e-02, -4.4491e-01,  ...,  1.3018e-01,
         -1.7012e+00, -1.8866e-03],
        ...,
        [-4.0541e+00, -3.3507e-02,  3.3424e-01,  ...,  3.7084e-02,
         -1.0697e+00, -2.8693e+00],
        [-4.9882e-01, -2.2508e-01,  3.1523e-01,  ...,  8.3389e-02,
         -7.3297e-01, -4.3620e-01],
        [-2.0026e-01,  2.1332e-01, -1.7451e-01,  ..., -1.4030e-01,
         -2.3027e-01, -4.0224e-01]], device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.3057, -0.0366, -0.1399, -0.2948, -0.1164,  4.1553,
         1.8106, -0.0954, -1.6116, -2.9444, -0.4000, -0.3588, -0.3672, -1.5413,
        -0.0070, -0.1532, -0.0976, -4.1950, -0.3914, -0.0238, -4.6061, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  2.1794, -0.4337,  1.8196,  2.7238,
        -0.3759, -0.2749, -0.8935,  0.3676,  0.6962, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350, -0.1039, -0.2724,  3.5953,  3.0306, -0.1994,
        -0.0155, -0.7693, -6.7637, -1.6433,  0.1742, -1.6137, -0.4101, -1.8709,
        -0.0329, -0.0092, -5.7284, -0.0836, -0.9495,  0.7852, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.2108,  ..., -2.6448, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.0962,  ..., -0.4716,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -5.3522,  ..., -0.5072,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.9831,  ..., -2.6216, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4440, -0.2027, -0.1888,  4.5797, -0.0541,  1.0657,  4.3375,  0.5687,
        -0.1662, -0.1932,  2.4376, -0.1597,  0.7682,  0.9614,  1.9199, -0.5268],
       device='cuda:0')), ('layers.6.weight', tensor([[ 5.7663e-02,  6.4527e-01, -6.8783e-02, -5.1713e-01,  1.0236e-01,
         -2.5004e+00,  8.4070e-01,  6.5571e-01,  2.6968e-01,  1.0108e-02,
         -1.3894e+00,  1.8148e-01,  1.6395e+00, -4.7162e-02,  1.0003e+00,
          1.0077e+00],
        [-2.8329e-01, -2.4641e+00, -6.6083e-02, -3.8628e-01,  7.7449e-02,
         -2.2062e+00,  7.4493e-01, -4.0236e+00, -1.2491e-01, -3.2248e-01,
         -1.6715e+00, -4.7394e-02, -2.3049e+00,  4.1548e-02,  6.7941e-01,
          1.4687e-01],
        [-4.2850e-01, -2.1584e+00,  7.2597e-02, -2.9030e-01, -2.4838e-02,
         -2.0702e+00,  9.4948e-01, -5.4294e+00,  1.4386e-01, -2.1891e-02,
         -1.9431e+00,  2.1864e-01, -3.3491e+00,  1.2425e-01,  4.1893e-01,
          2.6486e-01],
        [-1.9593e+00, -2.7034e-01,  1.4672e-02,  1.2052e+00,  1.1920e-01,
         -1.0089e+00,  3.1792e-01, -8.0139e+00,  1.2935e-01,  3.4636e-02,
         -4.8892e-03, -6.5249e-02, -3.5386e+00,  7.9009e-01,  4.5958e-01,
          1.3854e+00],
        [ 3.0770e-01, -5.4288e-01, -8.9440e-02,  3.6589e-01, -2.6423e-01,
         -3.7310e+00, -1.2929e+00, -6.9601e+00,  2.7806e-01, -8.1673e-02,
         -5.9769e-01, -1.7344e-01,  1.2540e-01,  6.0240e-01,  5.9660e-01,
         -1.4303e+00],
        [-2.6131e-01, -6.9356e-01, -2.3105e-02, -1.8364e-01, -4.1104e-01,
         -2.3374e+00, -1.6070e+00, -7.7863e+00,  1.4677e-02, -4.2051e-01,
         -6.7150e-01, -1.8170e-01, -1.0858e-02,  7.5338e-01,  5.1513e-01,
         -2.8465e-01],
        [ 1.0459e-01,  9.9796e-01,  4.0944e-02, -6.6606e-01, -6.5097e-02,
          1.3532e+00, -1.2077e+00, -7.8134e+00, -9.9954e-02, -5.1584e-01,
         -9.4745e-01, -1.9939e-01, -6.9375e-01,  9.5472e-01,  7.2076e-01,
          3.0578e-01]], device='cuda:0')), ('layers.6.bias', tensor([-2.2355, -0.1646,  1.6485,  1.3400,  0.6427,  0.8141, -0.4844],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.149106979370117, 8.491044998168945, 6.444899559020996, 18.225418090820312, 14.207514762878418, 8.238638877868652, 6.815698146820068]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.395071983337402, 9.000965118408203, 6.779575347900391, 17.729167938232422, 14.55216121673584, 6.757781982421875, 5.827912330627441]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [15.10672664642334, 10.513239860534668, 7.670554161071777, 15.213616371154785, 8.134086608886719, 3.7735328674316406, 5.514995098114014]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.9149, -2.0086, -0.0602, -0.0315,  0.0817, -0.0773,  0.0731,
         -0.0240,  0.3744, -0.3999,  4.3142,  0.1860,  1.2444,  1.2516],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.7549, -1.5613, -0.1405,  0.1882,  1.8832,  1.5160, -1.3374,
         -1.0545, -3.5029,  0.0426, -2.4712, -0.2328,  0.4505,  0.5156],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.3561, -0.6660, -0.1374,  0.2397, -2.5734,  0.6598, -2.8026,
          0.7415, -2.7087, -0.5799, -1.2648, -0.6492, -0.2797, -0.5395],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4145, -0.4778,  0.2337, -0.9519,  0.4082, -1.5072,  0.6011,
         -1.9345,  1.2854, -2.9497,  0.3056, -2.5445,  0.3238,  0.2141],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.5902,  3.8000,  0.0721, -0.3202,  0.1791, -0.5196,  0.1683,
         -0.8420, -1.4788,  1.0422, -5.9129,  0.5434,  0.6347,  0.8613],
        [-0.0525,  1.2497, -1.2716,  0.0379, -0.2441, -0.0990,  0.1152, -1.3056,
          1.5690, -2.6682,  4.5445, -0.5422,  0.5467, -1.2927, -1.1468]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.0834, -0.0498, -0.5566, -0.4274,  0.0259,  0.6261,  0.0791,  0.0196,
        -0.4411, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6720,  0.9474],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.5977,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.1696],
        ...,
        [-4.1501, -0.0335,  0.3218,  ...,  0.0371, -1.0800, -2.8039],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.4411, -0.0366, -0.0670, -0.2948, -0.1164,  4.2294,
         1.9031, -0.0954, -1.6116, -2.9517, -0.4000, -0.3588, -0.3672, -1.6378,
        -0.0070, -0.1532, -0.0976, -4.1602, -0.3914, -0.0238, -4.7234, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.8975, -0.4337,  1.8127,  2.7641,
        -0.3759, -0.2749, -0.8935,  0.5291,  0.7489, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350, -0.3240, -0.2724,  3.7512,  3.0445, -0.1994,
        -0.0155, -0.7693, -6.7573, -1.6433,  0.2262, -1.7927, -0.4101, -1.5994,
        -0.0329, -0.0092, -5.8223, -0.0836, -0.9495,  0.7363, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.2638,  ..., -2.5851, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.1363,  ..., -0.4359,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -5.9879,  ..., -0.3464,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -3.0786,  ..., -2.8573, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4491, -0.2027, -0.1888,  4.6629, -0.0541,  1.2556,  4.4474,  0.5414,
        -0.1662, -0.1932,  2.2321, -0.1597,  0.7096,  1.1292,  2.1322, -0.6680],
       device='cuda:0')), ('layers.6.weight', tensor([[-4.9750e-03,  6.4527e-01, -6.8783e-02, -6.6088e-01,  1.0236e-01,
         -2.5376e+00,  8.6907e-01,  5.5332e-01,  2.6968e-01,  1.0108e-02,
         -1.4120e+00,  1.8148e-01,  1.5588e+00, -4.3003e-02,  1.0388e+00,
          9.8234e-01],
        [-2.5083e-01, -2.4641e+00, -6.6083e-02, -4.7495e-01,  7.7449e-02,
         -2.6738e+00,  8.1344e-01, -4.0108e+00, -1.2491e-01, -3.2248e-01,
         -1.6642e+00, -4.7394e-02, -2.5245e+00, -2.9666e-02,  7.1579e-01,
         -8.8801e-03],
        [-6.0819e-01, -2.1584e+00,  7.2597e-02, -2.9267e-01, -2.4838e-02,
         -2.4317e+00,  9.2751e-01, -5.8156e+00,  1.4386e-01, -2.1891e-02,
         -2.0379e+00,  2.1864e-01, -3.5661e+00,  1.8517e-01,  3.9164e-01,
         -1.7125e-01],
        [-1.8305e+00, -2.7034e-01,  1.4672e-02,  1.3332e+00,  1.1920e-01,
         -1.3781e+00,  3.6320e-01, -8.3356e+00,  1.2935e-01,  3.4636e-02,
         -1.2551e-02, -6.5249e-02, -3.6827e+00,  7.4532e-01,  4.6342e-01,
          1.3834e+00],
        [ 1.0055e-02, -5.4288e-01, -8.9440e-02,  3.3368e-01, -2.6423e-01,
         -4.1744e+00, -1.3307e+00, -7.0033e+00,  2.7806e-01, -8.1673e-02,
         -6.4503e-01, -1.7344e-01, -6.0255e-02,  4.1696e-01,  6.1173e-01,
         -1.3445e+00],
        [-5.5054e-01, -6.9356e-01, -2.3105e-02, -1.2621e-01, -4.1104e-01,
         -2.6811e+00, -1.5183e+00, -7.8958e+00,  1.4677e-02, -4.2051e-01,
         -7.8090e-01, -1.8170e-01, -2.8594e-01,  6.8882e-01,  6.0862e-01,
         -3.0842e-01],
        [ 1.2347e-01,  9.9796e-01,  4.0944e-02, -5.0945e-01, -6.5097e-02,
          1.2991e+00, -1.3575e+00, -7.4890e+00, -9.9954e-02, -5.1584e-01,
         -7.4566e-01, -1.9939e-01, -5.9474e-01,  9.2262e-01,  8.1449e-01,
          2.2715e-01]], device='cuda:0')), ('layers.6.bias', tensor([-2.4433, -0.2339,  1.8425,  1.3422,  0.6846,  0.6280, -0.3265],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.181069374084473, 6.7855916023254395, 5.141676425933838, 16.477523803710938, 12.096168518066406, 8.352567672729492, 8.149113655090332]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.089566230773926, 8.218629837036133, 6.311519145965576, 17.08553695678711, 10.287574768066406, 4.858905792236328, 5.527317047119141]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.744224548339844, 4.023195743560791, -1.8461366891860962, 11.402905464172363, -0.9121723175048828, -3.110280752182007, 0.7160625457763672]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.9891, -2.0828,  0.0641, -0.0394, -0.0340, -0.0855,  0.0625,
          0.0135,  0.3556, -0.5138,  4.2946,  0.1031,  1.3186,  1.3258],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.8013, -1.6387, -0.1037,  0.4518,  1.8169,  1.5986, -1.4702,
         -1.1342, -3.4669,  0.1283, -2.3442, -0.1864,  0.4969,  0.5620],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.3721, -0.6653, -0.0578,  0.3562, -2.7094,  0.6190, -2.7086,
          0.8603, -2.7584, -0.5959, -1.2638, -0.6652, -0.2956, -0.5554],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4736, -0.5278,  0.2266, -1.0000,  0.3361, -1.4589,  0.4893,
         -2.0629,  1.1785, -3.2360,  0.1847, -2.3715,  0.3830,  0.2733],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.5674,  3.7765,  0.0808, -0.3588,  0.1466, -0.6973,  0.1731,
         -0.7582, -1.5579,  1.1088, -5.8870,  0.5205,  0.6119,  0.8384],
        [-0.0525,  1.2277, -1.2509,  0.0069, -0.1559, -0.0713, -0.0585, -1.2620,
          1.6084, -2.6994,  4.7043, -0.6011,  0.5073, -1.2706, -1.1247]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.1576, -0.0498, -0.6030, -0.4274,  0.0259,  0.6421,  0.0791,  0.0196,
        -0.5003, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6491,  0.9253],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6503,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.1725],
        ...,
        [-4.3016, -0.0335,  0.2559,  ...,  0.0371, -1.1039, -3.1329],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-0.0211, -0.2566, -2.6510, -0.0366,  0.0489, -0.2948, -0.1164,  4.2933,
         2.0076, -0.0954, -1.6116, -3.1276, -0.4000, -0.3588, -0.3672, -1.6625,
        -0.0070, -0.1532, -0.0976, -4.2713, -0.3914, -0.0238, -4.7634, -0.4893,
        -0.0145, -0.4163, -0.2943, -0.2461,  1.6182, -0.4337,  1.9154,  2.8629,
        -0.3759, -0.2749, -0.8935,  0.3438,  0.7551, -0.1073, -0.2852, -0.1581,
        -0.0490, -0.2556, -0.1350, -0.3502, -0.2724,  3.7158,  2.9604, -0.1994,
        -0.0155, -0.7693, -6.9649, -1.6433,  0.2490, -1.9993, -0.4101, -1.6078,
        -0.0329, -0.0092, -5.8456, -0.0836, -0.9495,  0.6812, -0.4243, -0.1590],
       device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.5120,  ..., -2.6809, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.1295,  ..., -0.3125,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -6.1569,  ..., -0.0943,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -3.1367,  ..., -3.2487, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.5690, -0.2027, -0.1888,  4.8082, -0.1176,  1.1858,  4.6045,  0.4849,
        -0.1662, -0.1932,  1.9681, -0.1597,  0.6574,  1.2195,  2.2176, -0.6616],
       device='cuda:0')), ('layers.6.weight', tensor([[-1.0328e-01,  6.4527e-01, -6.8783e-02, -5.6944e-01,  3.8825e-02,
         -3.2839e+00,  8.1257e-01,  5.9578e-01,  2.6968e-01,  1.0108e-02,
         -1.4330e+00,  1.8148e-01,  1.5505e+00,  4.6066e-02,  1.0204e+00,
          1.1763e+00],
        [-3.6636e-01, -2.4641e+00, -6.6083e-02, -4.3085e-01,  7.7449e-02,
         -2.7688e+00,  8.0545e-01, -4.2730e+00, -1.2491e-01, -3.2248e-01,
         -1.6800e+00, -4.7394e-02, -2.4805e+00,  1.6874e-01,  6.4546e-01,
          1.6951e-01],
        [-5.5188e-01, -2.1584e+00,  7.2597e-02, -2.6365e-01, -2.4838e-02,
         -2.7538e+00,  1.0912e+00, -5.8224e+00,  1.4386e-01, -2.1891e-02,
         -1.9154e+00,  2.1864e-01, -3.5988e+00,  1.5455e-01,  4.1855e-01,
         -1.0569e-02],
        [-2.0694e+00, -2.7034e-01,  1.4672e-02,  1.3489e+00,  1.1920e-01,
         -1.1805e+00,  3.9942e-01, -8.4781e+00,  1.2935e-01,  3.4636e-02,
         -5.9367e-04, -6.5249e-02, -3.5923e+00,  7.1822e-01,  4.7194e-01,
          1.4388e+00],
        [ 8.7688e-02, -5.4288e-01, -8.9440e-02,  3.6991e-01, -2.6423e-01,
         -4.2171e+00, -1.4504e+00, -6.6113e+00,  2.7806e-01, -8.1673e-02,
         -5.0060e-01, -1.7344e-01,  5.4645e-02,  5.2728e-01,  5.9585e-01,
         -1.2931e+00],
        [-5.1294e-01, -6.9356e-01, -2.3105e-02, -1.2614e-01, -4.1104e-01,
         -3.0350e+00, -1.4556e+00, -7.4642e+00,  1.4677e-02, -4.2051e-01,
         -7.3509e-01, -1.8170e-01,  2.4781e-01,  6.6249e-01,  5.5415e-01,
         -6.6761e-01],
        [ 2.1187e-01,  9.9796e-01,  4.0944e-02, -6.2700e-01, -6.5097e-02,
          1.2958e+00, -1.0413e+00, -7.4515e+00, -9.9954e-02, -5.1584e-01,
         -1.0861e+00, -1.9939e-01, -7.1603e-01,  9.3592e-01,  7.7311e-01,
          2.3501e-01]], device='cuda:0')), ('layers.6.bias', tensor([-2.5314e+00,  2.3791e-03,  1.9295e+00,  1.3274e+00,  7.5458e-01,
         7.0009e-01, -4.4134e-01], device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.941308975219727, 6.4113640785217285, 5.8414692878723145, 15.905316352844238, 12.661465644836426, 7.725833892822266, 7.17795467376709]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.540992736816406, 6.588634490966797, 6.214665412902832, 15.995802879333496, 12.083189964294434, 5.411365985870361, 5.725343227386475]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.274127960205078, 4.365173816680908, 1.7173523902893066, 11.4596586227417, -0.5779474377632141, -3.7387802600860596, -0.1842677891254425]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -9.5173e-01, -2.0454e+00, -7.1143e-02,  1.7287e-02,
         -7.0453e-02, -8.6006e-02, -9.9464e-03,  7.8937e-03,  4.9566e-01,
         -5.3055e-01,  4.3802e+00,  1.7955e-01,  1.2812e+00,  1.2884e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -7.9125e-01, -1.5483e+00, -3.9287e-02,  3.9630e-01,
          1.8460e+00,  1.6353e+00, -1.4396e+00, -1.0649e+00, -3.6677e+00,
          1.1172e-01, -2.3996e+00, -1.9651e-01,  4.8683e-01,  5.5194e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  4.0563e-01, -6.2037e-01, -6.2148e-02,  1.2060e-01,
         -2.7063e+00,  6.8457e-01, -2.8900e+00,  8.7052e-01, -2.7891e+00,
         -6.2940e-01, -1.3324e+00, -6.9873e-01, -3.2916e-01, -5.8894e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -4.8024e-01, -5.1292e-01,  2.3028e-01, -8.8119e-01,
          3.6048e-01, -1.5461e+00,  5.9839e-01, -2.0577e+00,  1.1753e+00,
         -3.0465e+00,  6.6083e-02, -2.4401e+00,  3.8958e-01,  2.7987e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -5.4348e-01,  3.8389e+00,  5.7632e-02, -3.4173e-01,
          1.1502e-01, -7.4428e-01,  1.6171e-01, -7.9863e-01, -1.4976e+00,
          1.0024e+00, -5.9634e+00,  4.9659e-01,  5.8797e-01,  8.1449e-01],
        [-5.2546e-02,  1.2577e+00, -1.2511e+00,  8.3859e-02,  5.5051e-03,
         -1.4789e-01, -9.8716e-02, -1.1765e+00,  1.6070e+00, -2.6862e+00,
          4.7872e+00, -5.9390e-01,  4.3926e-01, -1.3006e+00, -1.1548e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.1202, -0.0498, -0.5929, -0.4274,  0.0259,  0.6756,  0.0791,  0.0196,
        -0.5069, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6252,  0.9553],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6505,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.2274],
        ...,
        [-4.6715, -0.0335,  0.2189,  ...,  0.0371, -1.0838, -3.3609],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -2.7826e+00, -3.6639e-02, -1.9192e-01,
        -2.9477e-01, -1.1644e-01,  4.3006e+00,  1.9552e+00, -9.5352e-02,
        -1.6116e+00, -3.2079e+00, -4.0004e-01, -3.5885e-01, -3.6723e-01,
        -1.6051e+00, -7.0119e-03, -1.5324e-01, -9.7591e-02, -4.3998e+00,
        -3.9142e-01, -2.3760e-02, -4.8090e+00, -4.8930e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01, -2.4614e-01,  2.1528e+00, -4.3375e-01,
         1.8429e+00,  2.7606e+00, -3.7588e-01, -2.7489e-01, -8.9347e-01,
         5.4729e-01,  9.0279e-01, -1.0726e-01, -2.8523e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -1.3503e-01, -3.4694e-01, -2.7245e-01,
         3.6397e+00,  2.9222e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -7.2414e+00, -1.6433e+00,  2.9657e-01, -2.1249e+00, -4.1007e-01,
        -1.7249e+00, -3.2900e-02, -9.1751e-03, -5.9664e+00, -8.3575e-02,
        -9.4948e-01,  6.8224e-01, -4.2426e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.5615,  ..., -2.8180, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.2014,  ..., -0.3367,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -6.6711,  ..., -0.1539,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -3.1793,  ..., -3.1381, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.4993, -0.2027, -0.1888,  4.8748, -0.1176,  1.1643,  4.6289,  0.5071,
        -0.1662, -0.1932,  1.8731, -0.1597,  0.5026,  1.2400,  2.2535, -0.7139],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.2037,  0.6453, -0.0688, -0.6578,  0.0388, -3.3545,  0.9193,  0.8006,
          0.2697,  0.0101, -1.3052,  0.1815,  1.4955, -0.0233,  1.0826,  1.2461],
        [-0.4853, -2.4641, -0.0661, -0.3881,  0.0774, -2.9489,  0.8210, -4.4063,
         -0.1249, -0.3225, -1.5561, -0.0474, -2.3285, -0.0675,  0.6147,  0.1221],
        [-0.5575, -2.1584,  0.0726, -0.3440, -0.0248, -2.9401,  1.0713, -5.6815,
          0.1439, -0.0219, -1.9478,  0.2186, -3.7353,  0.1508,  0.4362,  0.0700],
        [-2.1382, -0.2703,  0.0147,  1.2882,  0.1192, -1.4066,  0.4056, -8.4194,
          0.1293,  0.0346,  0.1978, -0.0652, -3.5276,  0.7815,  0.4614,  1.4527],
        [ 0.0221, -0.5429, -0.0894,  0.3647, -0.2642, -4.1442, -1.3490, -6.7415,
          0.2781, -0.0817, -0.6411, -0.1734, -0.1064,  0.4942,  0.5819, -1.5345],
        [-0.1510, -0.6936, -0.0231, -0.0477, -0.4110, -3.6692, -1.5091, -7.2294,
          0.0147, -0.4205, -0.6758, -0.1817,  0.1346,  0.4676,  0.6163, -0.6189],
        [ 0.1380,  0.9980,  0.0409, -0.5573, -0.0651,  1.2710, -1.0956, -7.0864,
         -0.1000, -0.5158, -1.0537, -0.1994, -0.6592,  0.8828,  0.7867,  0.2216]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.3302,  0.0400,  1.6820,  1.2720,  0.9727,  0.6382, -0.4779],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [6.795854568481445, 4.712352275848389, 4.398332118988037, 14.91703987121582, 11.50802230834961, 8.441847801208496, 6.380168914794922]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [7.630840301513672, 5.225126266479492, 4.971381664276123, 15.294811248779297, 10.51642894744873, 6.472953796386719, 4.3326005935668945]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [13.172807693481445, 6.990699291229248, 5.4960784912109375, 15.785616874694824, 1.8455476760864258, -0.14886856079101562, 0.6805884838104248]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -9.6390e-01, -2.0576e+00,  2.3384e-02,  3.7363e-02,
          6.1124e-02,  1.7217e-02, -9.8849e-04,  6.7568e-02,  4.2435e-01,
         -6.8954e-01,  4.4376e+00,  3.1655e-01,  1.2934e+00,  1.3006e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -8.1846e-01, -1.5712e+00, -9.1282e-02,  3.8959e-01,
          1.8032e+00,  1.5450e+00, -1.4896e+00, -1.0736e+00, -3.6937e+00,
          1.3794e-01, -2.4152e+00, -1.6929e-01,  5.1405e-01,  5.7915e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.7697e-01, -6.6692e-01, -6.3708e-02,  1.3151e-01,
         -2.8802e+00,  8.0205e-01, -2.9343e+00,  8.9443e-01, -2.7038e+00,
         -6.0074e-01, -1.3951e+00, -6.7008e-01, -3.0050e-01, -5.6028e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -4.1079e-01, -5.4698e-01,  1.1566e-01, -1.0750e+00,
          2.4758e-01, -1.5920e+00,  5.8766e-01, -2.0768e+00,  1.1316e+00,
         -3.0093e+00,  7.4202e-02, -2.5723e+00,  3.2013e-01,  2.1042e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -6.2427e-01,  3.8099e+00,  1.0298e-01, -2.7614e-01,
          1.2928e-01, -8.5449e-01,  2.5358e-01, -8.1629e-01, -1.5714e+00,
          1.0725e+00, -6.0129e+00,  5.7737e-01,  6.6875e-01,  8.9527e-01],
        [-5.2546e-02,  1.2450e+00, -1.2442e+00,  4.0924e-02, -1.0121e-01,
         -8.5688e-02, -5.0427e-02, -1.2010e+00,  1.5695e+00, -2.7536e+00,
          4.9188e+00, -5.3899e-01,  5.7452e-01, -1.2879e+00, -1.1420e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.1324, -0.0498, -0.6201, -0.4274,  0.0259,  0.6469,  0.0791,  0.0196,
        -0.4374, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.7060,  0.9426],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6599,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.1760],
        ...,
        [-4.9039, -0.0335,  0.3153,  ...,  0.0371, -1.0566, -3.2897],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -2.9287e+00, -3.6639e-02, -3.1502e-01,
        -2.9477e-01, -1.1644e-01,  4.1759e+00,  1.8498e+00, -9.5352e-02,
        -1.6116e+00, -3.2733e+00, -4.0004e-01, -3.5885e-01, -3.6723e-01,
        -1.7212e+00, -7.0119e-03, -1.5324e-01, -9.7591e-02, -4.4921e+00,
        -3.9142e-01, -2.3760e-02, -4.8278e+00, -4.8930e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01, -2.4614e-01,  1.7086e+00, -4.3375e-01,
         1.7033e+00,  2.7450e+00, -3.7588e-01, -2.7489e-01, -8.9347e-01,
         3.7243e-01,  1.0834e+00, -1.0726e-01, -2.8523e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -1.3503e-01, -5.1883e-01, -2.7245e-01,
         3.4786e+00,  2.7564e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -7.3506e+00, -1.6433e+00,  1.8588e-01, -2.1407e+00, -4.1007e-01,
        -1.5579e+00, -3.2900e-02, -9.1751e-03, -5.8901e+00, -8.3575e-02,
        -9.4948e-01,  6.9322e-01, -4.2426e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.5686,  ..., -2.6996, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.3484,  ..., -0.4568,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -6.8732,  ..., -0.1702,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -3.0221,  ..., -2.9357, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.5479, -0.2027, -0.1888,  4.9691, -0.1176,  1.1566,  4.6171,  0.4782,
        -0.1662, -0.1932,  1.5721, -0.1597,  0.6223,  1.6178,  2.4373, -0.8811],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0632,  0.6453, -0.0688, -0.6035,  0.0388, -3.5947,  0.8105,  1.0171,
          0.2697,  0.0101, -1.3207,  0.1815,  1.4556, -0.0714,  1.0614,  1.0600],
        [-0.4773, -2.4641, -0.0661, -0.3901,  0.0774, -2.9396,  0.8137, -4.7724,
         -0.1249, -0.3225, -1.5754, -0.0474, -2.4953,  0.0444,  0.5512,  0.2441],
        [-0.6057, -2.1584,  0.0726, -0.2781, -0.0248, -3.2233,  0.9490, -5.7026,
          0.1439, -0.0219, -1.9088,  0.2186, -3.7580,  0.1287,  0.3862, -0.0364],
        [-2.1281, -0.2703,  0.0147,  1.3570,  0.1192, -1.8269,  0.4128, -8.2182,
          0.1293,  0.0346,  0.0228, -0.0652, -3.4582,  0.7845,  0.4553,  1.5091],
        [ 0.0669, -0.5429, -0.0894,  0.3285, -0.2642, -4.5457, -1.4208, -7.1074,
          0.2781, -0.0817, -0.6062, -0.1734,  0.0837,  0.5683,  0.5229, -1.5896],
        [-0.1223, -0.6936, -0.0231, -0.1791, -0.4110, -3.7130, -1.3994, -7.9620,
          0.0147, -0.4205, -0.7731, -0.1817, -0.1370,  0.7338,  0.6203, -0.3387],
        [ 0.2128,  0.9980,  0.0409, -0.6750, -0.0651,  1.4250, -1.2267, -7.1707,
         -0.1000, -0.5158, -0.8335, -0.1994, -0.7056,  0.9675,  0.8248,  0.2353]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.2688,  0.0182,  1.8892,  1.3273,  1.0183,  0.6566, -0.3366],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.54910659790039, 4.799092769622803, 4.993311882019043, 14.458767890930176, 10.362418174743652, 8.002847671508789, 6.981750011444092]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.685848236083984, 4.393296241760254, 4.585178375244141, 14.729403495788574, 10.52812385559082, 7.0741801261901855, 5.855758190155029]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.32969856262207, 4.156221389770508, 1.8098236322402954, 11.755142211914062, -2.047797918319702, -1.6707231998443604, 1.490107536315918]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -9.8145e-01, -2.0751e+00, -4.6977e-02,  5.5620e-02,
          7.2378e-04, -1.4627e-01, -6.6723e-02, -3.6733e-01,  4.0941e-01,
         -7.0625e-01,  4.4686e+00,  3.3835e-01,  1.3109e+00,  1.3182e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -8.2941e-01, -1.6216e+00, -7.6304e-02,  4.0469e-01,
          1.8699e+00,  1.5150e+00, -1.4023e+00, -1.0590e+00, -3.6634e+00,
          1.5125e-01, -2.3684e+00, -1.5835e-01,  5.2499e-01,  5.9010e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.7201e-01, -6.5210e-01, -6.8072e-02,  1.2059e-01,
         -2.8302e+00,  7.8682e-01, -3.1591e+00,  9.0630e-01, -2.9530e+00,
         -5.9578e-01, -1.2914e+00, -6.6512e-01, -2.9554e-01, -5.5532e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.4198e-01, -5.5113e-01,  2.5795e-01, -9.6177e-01,
          2.6958e-01, -1.7508e+00,  5.9082e-01, -2.2087e+00,  9.1918e-01,
         -3.3271e+00,  1.5072e-02, -2.2284e+00,  4.5132e-01,  3.4161e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -5.9232e-01,  3.8389e+00,  7.5945e-02, -4.3246e-01,
          1.6622e-01, -6.1756e-01,  1.8636e-01, -8.5600e-01, -1.6374e+00,
          8.7010e-01, -6.0550e+00,  5.4542e-01,  6.3680e-01,  8.6332e-01],
        [-5.2546e-02,  1.2281e+00, -1.2227e+00,  2.6074e-02, -1.2805e-01,
         -4.3620e-02,  6.5959e-02, -1.2251e+00,  1.6674e+00, -2.7464e+00,
          5.0084e+00, -5.7775e-01,  5.5581e-01, -1.2710e+00, -1.1251e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.1500, -0.0498, -0.6311, -0.4274,  0.0259,  0.6420,  0.0791,  0.0196,
        -0.5686, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.6740,  0.9257],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6249,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.1481],
        ...,
        [-4.9128, -0.0335,  0.4592,  ...,  0.0371, -1.1098, -3.1988],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -2.9559e+00, -3.6639e-02, -8.2203e-02,
        -2.9477e-01, -1.1644e-01,  4.2604e+00,  1.9512e+00, -9.5352e-02,
        -1.6116e+00, -3.3784e+00, -4.0004e-01, -3.5885e-01, -3.6723e-01,
        -1.8428e+00, -7.0119e-03, -1.5324e-01, -9.7591e-02, -4.5823e+00,
        -3.9142e-01, -2.3760e-02, -4.8992e+00, -4.8930e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01, -2.4614e-01,  1.6867e+00, -4.3375e-01,
         1.8702e+00,  2.7780e+00, -3.7588e-01, -2.7489e-01, -8.9347e-01,
         3.8670e-01,  8.2654e-01, -1.0726e-01, -2.8523e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -1.3503e-01, -4.1689e-01, -2.7245e-01,
         3.5467e+00,  2.8494e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -7.5789e+00, -1.6433e+00,  3.3127e-01, -2.1689e+00, -4.1007e-01,
        -1.8459e+00, -3.2900e-02, -9.1751e-03, -5.9342e+00, -8.3575e-02,
        -9.4948e-01,  8.6548e-01, -4.2426e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.4739,  ..., -2.7572, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.3224,  ..., -0.3164,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -7.2269,  ..., -0.1900,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.9586,  ..., -3.0138, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.5985, -0.1977, -0.1888,  5.0076, -0.1176,  1.0433,  4.6745,  0.5704,
        -0.1662, -0.1932,  1.6059, -0.1597,  0.5003,  1.6405,  2.5511, -0.9797],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.0421,  0.7273, -0.0688, -0.5322,  0.0388, -3.6801,  0.8503,  1.0977,
          0.2697,  0.0101, -1.4049,  0.1815,  1.4448,  0.0418,  1.1356,  1.1001],
        [-0.3074, -2.4641, -0.0661, -0.3616,  0.0774, -3.1774,  0.9060, -5.1233,
         -0.1249, -0.3225, -1.6143, -0.0474, -2.0953, -0.0851,  0.7343,  0.4480],
        [-0.4193, -2.1584,  0.0726, -0.2474, -0.0248, -3.2825,  1.0116, -5.2828,
          0.1439, -0.0219, -2.1292,  0.2186, -3.6799,  0.1801,  0.5036,  0.1526],
        [-2.1875, -0.1433,  0.0147,  1.3731,  0.1192, -1.8523,  0.4001, -8.4182,
          0.1293,  0.0346,  0.0517, -0.0652, -3.5942,  0.9038,  0.5073,  1.5641],
        [ 0.1587, -0.5429, -0.0894,  0.3519, -0.2642, -4.6539, -1.3005, -7.3307,
          0.2781, -0.0817, -0.7721, -0.1734, -0.2045,  0.4960,  0.5949, -1.4584],
        [-0.2783, -0.6936, -0.0231, -0.1504, -0.4110, -4.1354, -1.4693, -8.0943,
          0.0147, -0.4205, -0.7038, -0.1817, -0.3973,  0.7720,  0.6237, -0.5924],
        [ 0.2703,  0.9980,  0.0409, -0.5438, -0.0651,  1.3897, -1.2316, -7.7475,
         -0.1000, -0.5158, -0.6243, -0.1994, -0.7680,  0.9393,  0.8246,  0.1191]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.2115, -0.1123,  1.9288,  1.4117,  0.9806,  0.8217, -0.4022],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.924968719482422, 7.800253391265869, 7.036456108093262, 17.25157356262207, 13.369528770446777, 8.814878463745117, 8.300827026367188]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.837892532348633, 8.745017051696777, 8.179551124572754, 17.991252899169922, 11.832345008850098, 5.982429504394531, 5.8500165939331055]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [8.855546951293945, 4.0591254234313965, -0.14857935905456543, 11.016154289245605, -2.0717146396636963, -2.190533399581909, 1.1759265661239624]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-0.0892, -0.9563, -2.0500, -0.0152,  0.1273,  0.0226, -0.0576,  0.1123,
         -0.2882,  0.3480, -0.6580,  4.5341,  0.4536,  1.2857,  1.2930],
        [ 0.1579, -0.1120, -0.0769,  0.0581, -0.2117, -0.2212, -0.1867, -0.2523,
         -0.0267, -0.1772, -0.0406, -0.0083,  0.0786,  0.1166,  0.1386],
        [-0.1264, -0.8139, -1.5858, -0.1279,  0.4297,  1.8947,  1.5766, -1.2274,
         -1.1808, -3.7766,  0.1357, -2.4257, -0.1739,  0.5095,  0.5746],
        [-0.0328, -0.3220,  0.0140, -3.5803,  0.4395, -0.2357,  0.2408,  0.0495,
          0.1053,  0.1222,  0.2522,  0.1087,  0.0455,  0.5035,  0.7054],
        [ 0.2538, -0.2445,  0.0954, -0.0745, -0.0410, -0.0474,  0.0708, -0.0242,
         -0.2512,  0.0880, -0.1176, -0.1442,  0.2186,  0.0950, -0.1091],
        [ 0.2046,  0.3268, -0.6874, -0.0120,  0.1146, -2.8419,  0.7182, -3.2579,
          0.9778, -3.0369, -0.5506, -1.2697, -0.6199, -0.2504, -0.5101],
        [ 0.0861, -0.2453, -0.0933, -0.1869,  0.2419,  0.1239, -0.0362, -0.0496,
         -0.1797, -0.1774, -0.0386, -0.2225, -0.1734, -0.0284, -0.0097],
        [-0.1487, -0.2517,  0.0567,  0.0387,  0.1272, -0.1453,  0.0686, -0.1370,
          0.2322, -0.1383,  0.2550,  0.0198, -0.0202, -0.0507, -0.0236],
        [-0.2303, -0.4825, -0.4869,  0.2360, -0.9518,  0.3387, -1.6357,  0.4651,
         -2.1236,  1.0425, -3.1150,  0.0843, -2.3688,  0.3919,  0.2821],
        [-0.0110, -0.1975,  0.0527, -0.2430,  0.0739, -0.1839,  0.0224, -0.2342,
          0.1156,  0.1282, -0.0533, -0.0379, -0.0776,  0.3637,  0.0828],
        [-0.2545, -0.3062,  0.0530, -0.0556, -0.1269, -0.2298,  0.2810,  0.0839,
         -0.0329, -0.0524,  0.0662,  0.0717,  0.0522,  0.2928, -0.0191],
        [-0.2062, -0.2167, -0.0338,  0.0779, -0.2333, -0.1821,  0.0326, -0.0732,
         -0.1649, -0.1313, -0.0346, -0.0578, -0.1257, -0.0987,  0.0949],
        [ 0.0925, -0.1429, -0.7166,  0.0437, -0.0261, -0.2209, -0.1029, -0.1813,
         -0.2488, -0.3915,  0.1021,  0.0945, -0.1232,  0.1197, -0.0286],
        [-0.1708, -0.2262, -0.4124, -0.0898,  0.1842,  0.0792, -0.1047, -0.2921,
          0.1101, -0.0547,  0.1196,  0.1000, -0.0444,  0.2438, -0.0472],
        [ 0.1991, -0.6219,  3.8617,  0.1035, -0.3542,  0.2337, -0.5567,  0.1439,
         -0.7908, -1.5774,  1.0036, -6.1975,  0.5750,  0.6664,  0.8929],
        [-0.0525,  1.2656, -1.1711, -0.0455, -0.0100, -0.0124, -0.0065, -1.2377,
          1.6853, -2.8153,  5.0072, -0.5126,  0.6616, -1.3086, -1.1627]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.1248, -0.0498, -0.6156, -0.4274,  0.0259,  0.5968,  0.0791,  0.0196,
        -0.5091, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.7036,  0.9633],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6712,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.1153],
        ...,
        [-4.8601, -0.0335,  0.5697,  ...,  0.0371, -1.1884, -3.2676],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -2.9496e+00, -3.6639e-02, -2.0445e-01,
        -2.9477e-01, -1.1644e-01,  4.1399e+00,  1.7702e+00, -9.5352e-02,
        -1.6116e+00, -3.3318e+00, -4.0004e-01, -3.5885e-01, -3.6723e-01,
        -1.9581e+00, -7.0119e-03, -1.5324e-01, -9.7591e-02, -4.7087e+00,
        -3.9142e-01, -2.3760e-02, -5.0461e+00, -4.8930e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01, -2.4614e-01,  1.7389e+00, -4.3375e-01,
         1.7308e+00,  2.6625e+00, -3.7588e-01, -2.7489e-01, -8.9347e-01,
         3.2972e-01,  8.4133e-01, -1.0726e-01, -2.8523e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -1.3503e-01, -4.3587e-01, -2.7245e-01,
         3.7303e+00,  2.8216e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -7.6584e+00, -1.6433e+00,  3.1987e-01, -2.2353e+00, -4.1007e-01,
        -1.6322e+00, -3.2900e-02, -9.1751e-03, -5.9301e+00, -8.3575e-02,
        -9.4948e-01,  8.2399e-01, -4.2426e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.2829,  ..., -2.6991, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.4499,  ..., -0.5454,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -7.4186,  ..., -0.1102,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.9087,  ..., -3.2571, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.3700, -0.1977, -0.1888,  5.1609, -0.1176,  1.1116,  4.7776,  0.5580,
        -0.1662, -0.1932,  1.4877, -0.1597,  0.5036,  1.4677,  2.5466, -1.1214],
       device='cuda:0')), ('layers.6.weight', tensor([[ 0.0485,  0.7273, -0.0688, -0.5706,  0.0388, -4.1314,  0.8632,  0.9351,
          0.2697,  0.0101, -1.4204,  0.1815,  1.4606, -0.0819,  1.0662,  0.9949],
        [-0.3670, -2.4641, -0.0661, -0.4589,  0.0774, -3.1637,  0.8624, -5.1678,
         -0.1249, -0.3225, -1.5743, -0.0474, -1.9671, -0.0454,  0.7358,  0.2993],
        [-0.5140, -2.1584,  0.0726, -0.2485, -0.0248, -3.1009,  1.0680, -5.6202,
          0.1439, -0.0219, -2.2075,  0.2186, -3.4527,  0.1354,  0.5240, -0.3128],
        [-2.0758, -0.1433,  0.0147,  1.3799,  0.1192, -2.5353,  0.3568, -8.1465,
          0.1293,  0.0346, -0.0478, -0.0652, -3.5888,  0.8625,  0.4732,  1.4633],
        [ 0.0356, -0.5429, -0.0894,  0.3068, -0.2642, -4.9996, -1.2678, -7.3199,
          0.2781, -0.0817, -0.7427, -0.1734, -0.2096,  0.5505,  0.5707, -1.6114],
        [-0.4378, -0.6936, -0.0231, -0.3269, -0.4110, -4.1199, -1.4164, -8.1040,
          0.0147, -0.4205, -0.8062, -0.1817, -0.1317,  0.7317,  0.6340, -0.3464],
        [ 0.2656,  0.9980,  0.0409, -0.7721, -0.0651,  1.4126, -1.1501, -7.7361,
         -0.1000, -0.5158, -0.6479, -0.1994, -1.0501,  0.9189,  0.9104,  0.2555]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.3625, -0.0996,  1.6456,  1.3503,  1.0797,  0.7490, -0.5778],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [7.553398132324219, 6.2074785232543945, 6.556203365325928, 15.471226692199707, 10.27601432800293, 6.579723834991455, 6.149606704711914]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [7.800710678100586, 6.256150245666504, 7.0135087966918945, 15.839407920837402, 9.1513032913208, 4.016561985015869, 3.9231739044189453]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.548114776611328, 6.6015944480896, 3.768260955810547, 11.685235023498535, -0.2589472532272339, -1.7005445957183838, 2.2758257389068604]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -8.7084e-01, -1.9645e+00, -6.7510e-02,  2.2806e-01,
         -8.4454e-02, -2.4758e-02,  2.4727e-02, -1.8656e-01,  3.6795e-01,
         -4.6874e-01,  4.5953e+00,  5.3528e-01,  1.2003e+00,  1.2076e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -7.8331e-01, -1.5237e+00, -1.0773e-01,  6.0841e-01,
          1.8303e+00,  1.3977e+00, -1.3045e+00, -1.1887e+00, -3.8687e+00,
          1.0515e-01, -2.4787e+00, -2.0445e-01,  4.7889e-01,  5.4400e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.5978e-01, -6.7694e-01, -4.4023e-02,  8.6148e-02,
         -2.9301e+00,  6.9192e-01, -3.0939e+00,  1.0905e+00, -3.1614e+00,
         -5.8357e-01, -1.3026e+00, -6.5291e-01, -2.8332e-01, -5.4311e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -5.9838e-01, -4.3053e-01,  2.1277e-01, -1.0002e+00,
          3.7647e-01, -1.5813e+00,  6.0304e-01, -1.9375e+00,  9.5446e-01,
         -3.5569e+00,  6.0380e-03, -2.4904e+00,  5.0772e-01,  3.9802e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -6.5633e-01,  3.8619e+00,  1.2401e-01, -5.2215e-01,
          1.7054e-01, -7.6319e-01,  1.8341e-01, -7.6292e-01, -1.6015e+00,
          1.0821e+00, -6.2465e+00,  6.0943e-01,  7.0081e-01,  9.2733e-01],
        [-5.2546e-02,  1.3084e+00, -1.1518e+00,  1.1072e-01, -1.4108e-01,
         -3.2286e-02,  1.1481e-02, -1.1958e+00,  1.7920e+00, -2.6505e+00,
          5.1248e+00, -5.5221e-01,  6.8058e-01, -1.3513e+00, -1.2054e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.0394, -0.0498, -0.5850, -0.4274,  0.0259,  0.6298,  0.0791,  0.0196,
        -0.6250, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.7381,  1.0060],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.4786,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.0971],
        ...,
        [-5.1724, -0.0335,  0.7574,  ...,  0.0371, -1.2232, -3.7901],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -3.0160e+00, -3.6639e-02, -3.6407e-01,
        -2.9477e-01, -1.1644e-01,  4.1666e+00,  1.7624e+00, -9.5352e-02,
        -1.6116e+00, -3.4776e+00, -4.0004e-01, -3.5885e-01, -3.6723e-01,
        -2.2162e+00, -7.0119e-03, -1.5324e-01, -9.7591e-02, -4.8000e+00,
        -3.9142e-01, -2.3760e-02, -5.1182e+00, -4.8930e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01, -2.4614e-01,  1.2025e+00, -4.3375e-01,
         1.6621e+00,  2.5129e+00, -3.7588e-01, -2.7489e-01, -8.9347e-01,
         2.0047e-01,  6.5464e-01, -1.0726e-01, -2.8523e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -1.3503e-01, -5.3405e-01, -2.7245e-01,
         3.6330e+00,  2.6282e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -7.7858e+00, -1.6433e+00,  5.0021e-01, -2.2730e+00, -4.1007e-01,
        -1.6862e+00, -3.2900e-02, -9.1751e-03, -5.9559e+00, -8.3575e-02,
        -9.4948e-01,  8.7041e-01, -4.2426e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  1.1934,  ..., -2.7387, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342, -0.0740,  ..., -0.5640,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -7.6301,  ...,  0.0397,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.8354,  ..., -3.2157, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.3587, -0.1977, -0.1888,  5.2374, -0.1176,  1.0956,  4.7805,  0.5066,
        -0.1662, -0.1932,  1.3814, -0.1597,  0.6942,  1.5156,  2.5938, -1.2625],
       device='cuda:0')), ('layers.6.weight', tensor([[-4.4804e-02,  7.2733e-01, -6.8783e-02, -5.1871e-01,  3.8825e-02,
         -4.1834e+00,  9.2067e-01,  1.0437e+00,  2.6968e-01,  1.0108e-02,
         -1.4610e+00,  1.8148e-01,  1.4514e+00,  4.0379e-03,  1.1667e+00,
          9.0793e-01],
        [-3.5353e-01, -2.4641e+00, -6.6083e-02, -3.8272e-01,  7.7449e-02,
         -3.5620e+00,  7.5806e-01, -5.5151e+00, -1.2491e-01, -3.2248e-01,
         -1.6441e+00, -4.7394e-02, -2.5426e+00, -1.7070e-02,  7.7034e-01,
          3.3335e-01],
        [-5.9013e-01, -2.1584e+00,  7.2597e-02, -2.3262e-01, -2.4838e-02,
         -3.7449e+00,  1.0676e+00, -5.7730e+00,  1.4386e-01, -2.1891e-02,
         -1.9610e+00,  2.1864e-01, -3.6973e+00,  1.2478e-01,  5.1029e-01,
         -2.5704e-02],
        [-1.9330e+00, -1.4328e-01,  1.4672e-02,  1.3660e+00,  1.1920e-01,
         -2.7621e+00,  3.9012e-01, -7.9435e+00,  1.2935e-01,  3.4636e-02,
         -4.8811e-02, -6.5249e-02, -3.5565e+00,  8.0773e-01,  5.0860e-01,
          1.5202e+00],
        [-1.3167e-01, -5.4288e-01, -8.9440e-02,  1.2556e-01, -2.6423e-01,
         -4.8918e+00, -1.2491e+00, -7.1003e+00,  2.7806e-01, -8.1673e-02,
         -3.8914e-01, -1.7344e-01, -3.0942e-01,  5.8252e-01,  5.8550e-01,
         -1.5645e+00],
        [-3.8969e-01, -6.9356e-01, -2.3105e-02, -3.4915e-01, -4.1104e-01,
         -4.2186e+00, -1.3686e+00, -8.1866e+00,  1.4677e-02, -4.2051e-01,
         -7.7819e-01, -1.8170e-01, -1.7824e-02,  6.9960e-01,  6.6390e-01,
         -4.2141e-01],
        [ 3.5899e-01,  9.9796e-01,  4.0944e-02, -8.2282e-01, -6.5097e-02,
          1.4590e+00, -8.7118e-01, -7.7624e+00, -9.9954e-02, -5.1584e-01,
         -1.1139e+00, -1.9939e-01, -8.6195e-01,  9.9710e-01,  9.2453e-01,
          4.6015e-01]], device='cuda:0')), ('layers.6.bias', tensor([-2.3390,  0.0159,  1.5202,  1.3096,  1.2232,  0.7329, -0.6064],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [9.925470352172852, 7.536275386810303, 6.319688320159912, 15.969197273254395, 9.96157169342041, 7.001617431640625, 6.611618518829346]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.473398208618164, 7.569016933441162, 6.363351345062256, 16.53530502319336, 9.5252103805542, 5.4865007400512695, 5.723669528961182]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [12.897289276123047, 8.915918350219727, 8.099555969238281, 16.5516414642334, 3.7146778106689453, 0.1807154417037964, 2.144787311553955]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -1.0533e+00, -2.1470e+00, -3.5964e-02,  2.8052e-02,
          5.2116e-02, -1.0111e-01, -5.0279e-02, -1.0331e-01,  2.5952e-01,
         -6.1031e-01,  4.4857e+00,  4.3399e-01,  1.3828e+00,  1.3900e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -8.2773e-01, -1.5753e+00, -9.9147e-02,  6.4276e-01,
          1.7750e+00,  1.3017e+00, -1.4214e+00, -1.2954e+00, -3.8066e+00,
          1.4956e-01, -2.4248e+00, -1.6004e-01,  5.2330e-01,  5.8841e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.4395e-01, -6.8824e-01,  1.7995e-02,  9.1294e-02,
         -2.8976e+00,  8.3271e-01, -3.0248e+00,  1.1733e+00, -3.3801e+00,
         -5.6775e-01, -1.3583e+00, -6.3708e-01, -2.6749e-01, -5.2728e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -6.5000e-01, -4.2934e-01,  2.4085e-01, -9.5063e-01,
          4.2657e-01, -1.6588e+00,  4.8835e-01, -1.8647e+00,  1.0671e+00,
         -3.3493e+00, -1.6130e-01, -2.9319e+00,  5.5934e-01,  4.4964e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -6.3467e-01,  3.9408e+00,  1.6883e-02, -5.4731e-01,
          1.9816e-01, -7.5932e-01,  1.9495e-01, -9.4113e-01, -1.6682e+00,
          9.0241e-01, -6.3489e+00,  5.8778e-01,  6.7916e-01,  9.0568e-01],
        [-5.2546e-02,  1.3027e+00, -1.1712e+00,  2.5105e-03, -9.9687e-02,
         -1.0845e-01,  7.8607e-02, -1.2296e+00,  1.6459e+00, -2.7265e+00,
          5.1598e+00, -5.1901e-01,  7.1932e-01, -1.3456e+00, -1.1998e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.2218, -0.0498, -0.6294, -0.4274,  0.0259,  0.6140,  0.0791,  0.0196,
        -0.6766, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.7164,  1.0003],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6011,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.0604],
        ...,
        [-5.2550, -0.0335,  0.8460,  ...,  0.0371, -1.2138, -3.9731],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -2.7439e+00, -3.6639e-02, -1.6713e-01,
        -2.9477e-01, -1.1644e-01,  4.3720e+00,  1.6868e+00, -1.7846e-01,
        -1.6116e+00, -3.5981e+00, -4.0004e-01, -3.5885e-01, -3.6723e-01,
        -2.3882e+00, -7.0119e-03, -1.5324e-01, -9.7591e-02, -4.8173e+00,
        -3.9142e-01, -2.3760e-02, -5.1566e+00, -4.8930e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01, -2.4614e-01,  1.0126e+00, -4.3375e-01,
         1.5055e+00,  2.5010e+00, -3.7588e-01, -2.7489e-01, -8.9347e-01,
        -5.4430e-02,  5.5234e-01, -1.0726e-01, -2.8287e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -1.3503e-01, -2.2954e-01, -2.7245e-01,
         3.6037e+00,  2.5057e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -7.8741e+00, -1.6433e+00,  4.3085e-01, -2.4233e+00, -4.1007e-01,
        -1.7285e+00, -3.2900e-02, -9.1751e-03, -5.9166e+00, -8.3575e-02,
        -9.4948e-01,  8.9784e-01, -4.2426e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.9040,  ..., -2.8095, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.1592,  ..., -0.4657,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -7.9833,  ..., -0.0257,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.4917,  ..., -3.0972, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2434, -0.2801, -0.1888,  5.3662, -0.1176,  1.3220,  4.9259,  0.6170,
        -0.1662, -0.1932,  1.4918, -0.1597,  0.7500,  1.6916,  2.6877, -1.2216],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.1909,  0.9166, -0.0688, -0.6597,  0.0388, -4.4785,  0.9445,  1.2023,
          0.2697,  0.0101, -1.5645,  0.1815,  1.4819,  0.0683,  1.2697,  0.8483],
        [-0.5319, -2.3370, -0.0661, -0.3582,  0.0774, -4.0810,  0.8480, -5.6848,
         -0.1249, -0.3225, -1.5987, -0.0474, -2.7536,  0.1473,  0.7910,  0.1375],
        [-0.5358, -2.1584,  0.0726, -0.1153, -0.0248, -4.4345,  1.0702, -5.8344,
          0.1439, -0.0219, -2.0769,  0.2186, -3.4006,  0.2021,  0.6074,  0.0362],
        [-1.6987, -0.1433,  0.0147,  1.4027,  0.1192, -3.0231,  0.3515, -8.0016,
          0.1293,  0.0346, -0.0558, -0.0652, -4.1967,  0.8781,  0.5352,  1.4355],
        [-0.4629, -0.5429, -0.0894,  0.2192, -0.2642, -5.0240, -1.2494, -7.2212,
          0.2781, -0.0817, -0.7757, -0.1734, -0.4619,  0.6265,  0.6150, -1.1988],
        [-0.3336, -0.6300, -0.0231, -0.3112, -0.4110, -4.3853, -1.3348, -8.1304,
          0.0147, -0.4205, -0.7434, -0.1817, -0.1528,  0.7656,  0.7081, -0.3297],
        [ 0.4037,  0.9980,  0.0409, -0.8943, -0.0651,  1.5773, -0.9180, -8.1870,
         -0.1000, -0.5158, -0.8807, -0.1994, -1.2739,  0.8603,  0.9256,  0.4177]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.2647,  0.0841,  1.5431,  1.2486,  1.0236,  0.9783, -0.5718],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.253329277038574, 8.552922248840332, 8.96761703491211, 16.440807342529297, 10.716700553894043, 8.718547821044922, 7.047536373138428]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.042241096496582, 7.565371036529541, 8.339601516723633, 16.76271629333496, 10.38757610321045, 7.803319454193115, 5.953383922576904]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [5.5465898513793945, 2.98779559135437, 1.6970340013504028, 14.203370094299316, 0.7351601123809814, -0.5173921585083008, -1.0628511905670166]
Model Architecture:
DQN(
  (layers): ModuleList(
    (0): Linear(in_features=15, out_features=16, bias=True)
    (1): ReLU()
    (2): Linear(in_features=16, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=16, bias=True)
    (5): ReLU()
    (6): Linear(in_features=16, out_features=7, bias=True)
  )
)

Model State Dict:
OrderedDict([('layers.0.weight', tensor([[-8.9209e-02, -1.0533e+00, -2.1470e+00, -3.5964e-02,  2.8052e-02,
          5.2116e-02, -1.0111e-01, -5.0279e-02, -1.0331e-01,  2.5952e-01,
         -6.1031e-01,  4.4857e+00,  4.3399e-01,  1.3828e+00,  1.3900e+00],
        [ 1.5790e-01, -1.1204e-01, -7.6928e-02,  5.8129e-02, -2.1166e-01,
         -2.2125e-01, -1.8669e-01, -2.5233e-01, -2.6667e-02, -1.7724e-01,
         -4.0620e-02, -8.3335e-03,  7.8552e-02,  1.1665e-01,  1.3858e-01],
        [-1.2635e-01, -8.2773e-01, -1.5753e+00, -9.9147e-02,  6.4276e-01,
          1.7750e+00,  1.3017e+00, -1.4214e+00, -1.2954e+00, -3.8066e+00,
          1.4956e-01, -2.4248e+00, -1.6004e-01,  5.2330e-01,  5.8841e-01],
        [-3.2809e-02, -3.2200e-01,  1.4045e-02, -3.5803e+00,  4.3952e-01,
         -2.3575e-01,  2.4085e-01,  4.9519e-02,  1.0530e-01,  1.2215e-01,
          2.5215e-01,  1.0866e-01,  4.5513e-02,  5.0347e-01,  7.0540e-01],
        [ 2.5384e-01, -2.4449e-01,  9.5356e-02, -7.4513e-02, -4.0979e-02,
         -4.7414e-02,  7.0834e-02, -2.4190e-02, -2.5125e-01,  8.8037e-02,
         -1.1759e-01, -1.4419e-01,  2.1862e-01,  9.4969e-02, -1.0910e-01],
        [ 2.0464e-01,  3.4395e-01, -6.8824e-01,  1.7995e-02,  9.1294e-02,
         -2.8976e+00,  8.3271e-01, -3.0248e+00,  1.1733e+00, -3.3801e+00,
         -5.6775e-01, -1.3583e+00, -6.3708e-01, -2.6749e-01, -5.2728e-01],
        [ 8.6147e-02, -2.4529e-01, -9.3320e-02, -1.8690e-01,  2.4187e-01,
          1.2389e-01, -3.6216e-02, -4.9595e-02, -1.7969e-01, -1.7738e-01,
         -3.8607e-02, -2.2249e-01, -1.7342e-01, -2.8380e-02, -9.6514e-03],
        [-1.4874e-01, -2.5174e-01,  5.6739e-02,  3.8667e-02,  1.2720e-01,
         -1.4534e-01,  6.8650e-02, -1.3701e-01,  2.3220e-01, -1.3831e-01,
          2.5497e-01,  1.9769e-02, -2.0163e-02, -5.0726e-02, -2.3557e-02],
        [-2.3035e-01, -6.5000e-01, -4.2934e-01,  2.4085e-01, -9.5063e-01,
          4.2657e-01, -1.6588e+00,  4.8835e-01, -1.8647e+00,  1.0671e+00,
         -3.3493e+00, -1.6130e-01, -2.9319e+00,  5.5934e-01,  4.4964e-01],
        [-1.1017e-02, -1.9750e-01,  5.2655e-02, -2.4295e-01,  7.3923e-02,
         -1.8394e-01,  2.2393e-02, -2.3418e-01,  1.1560e-01,  1.2820e-01,
         -5.3305e-02, -3.7923e-02, -7.7572e-02,  3.6370e-01,  8.2795e-02],
        [-2.5451e-01, -3.0623e-01,  5.2980e-02, -5.5646e-02, -1.2695e-01,
         -2.2975e-01,  2.8099e-01,  8.3887e-02, -3.2887e-02, -5.2357e-02,
          6.6170e-02,  7.1708e-02,  5.2241e-02,  2.9277e-01, -1.9070e-02],
        [-2.0621e-01, -2.1670e-01, -3.3843e-02,  7.7856e-02, -2.3332e-01,
         -1.8215e-01,  3.2592e-02, -7.3157e-02, -1.6493e-01, -1.3125e-01,
         -3.4615e-02, -5.7830e-02, -1.2573e-01, -9.8675e-02,  9.4901e-02],
        [ 9.2529e-02, -1.4292e-01, -7.1658e-01,  4.3660e-02, -2.6150e-02,
         -2.2092e-01, -1.0290e-01, -1.8134e-01, -2.4877e-01, -3.9149e-01,
          1.0211e-01,  9.4549e-02, -1.2316e-01,  1.1965e-01, -2.8566e-02],
        [-1.7085e-01, -2.2619e-01, -4.1242e-01, -8.9752e-02,  1.8424e-01,
          7.9206e-02, -1.0466e-01, -2.9213e-01,  1.1008e-01, -5.4748e-02,
          1.1963e-01,  1.0003e-01, -4.4447e-02,  2.4377e-01, -4.7197e-02],
        [ 1.9907e-01, -6.3467e-01,  3.9408e+00,  1.6883e-02, -5.4731e-01,
          1.9816e-01, -7.5932e-01,  1.9495e-01, -9.4113e-01, -1.6682e+00,
          9.0241e-01, -6.3489e+00,  5.8778e-01,  6.7916e-01,  9.0568e-01],
        [-5.2546e-02,  1.3027e+00, -1.1712e+00,  2.5105e-03, -9.9687e-02,
         -1.0845e-01,  7.8607e-02, -1.2296e+00,  1.6459e+00, -2.7265e+00,
          5.1598e+00, -5.1901e-01,  7.1932e-01, -1.3456e+00, -1.1998e+00]],
       device='cuda:0')), ('layers.0.bias', tensor([-1.2218, -0.0498, -0.6294, -0.4274,  0.0259,  0.6140,  0.0791,  0.0196,
        -0.6766, -0.1799, -0.2375, -0.1683,  0.0339, -0.1520, -0.7164,  1.0003],
       device='cuda:0')), ('layers.2.weight', tensor([[-0.1830,  0.0331, -1.7998,  ...,  0.0713, -0.1953, -0.0239],
        [-0.2845,  0.0108, -0.1678,  ..., -0.0557, -0.0346, -0.2302],
        [ 0.6011,  0.0590, -0.4449,  ...,  0.1302, -1.7012,  0.0604],
        ...,
        [-5.2550, -0.0335,  0.8460,  ...,  0.0371, -1.2138, -3.9731],
        [-0.4988, -0.2251,  0.3152,  ...,  0.0834, -0.7330, -0.4362],
        [-0.2003,  0.2133, -0.1745,  ..., -0.1403, -0.2303, -0.4022]],
       device='cuda:0')), ('layers.2.bias', tensor([-2.1060e-02, -2.5655e-01, -2.7439e+00, -3.6639e-02, -1.6713e-01,
        -2.9477e-01, -1.1644e-01,  4.3720e+00,  1.6868e+00, -1.7846e-01,
        -1.6116e+00, -3.5981e+00, -4.0004e-01, -3.5885e-01, -3.6723e-01,
        -2.3882e+00, -7.0119e-03, -1.5324e-01, -9.7591e-02, -4.8173e+00,
        -3.9142e-01, -2.3760e-02, -5.1566e+00, -4.8930e-01, -1.4481e-02,
        -4.1629e-01, -2.9431e-01, -2.4614e-01,  1.0126e+00, -4.3375e-01,
         1.5055e+00,  2.5010e+00, -3.7588e-01, -2.7489e-01, -8.9347e-01,
        -5.4430e-02,  5.5234e-01, -1.0726e-01, -2.8287e-01, -1.5806e-01,
        -4.9004e-02, -2.5560e-01, -1.3503e-01, -2.2954e-01, -2.7245e-01,
         3.6037e+00,  2.5057e+00, -1.9938e-01, -1.5521e-02, -7.6931e-01,
        -7.8741e+00, -1.6433e+00,  4.3085e-01, -2.4233e+00, -4.1007e-01,
        -1.7285e+00, -3.2900e-02, -9.1751e-03, -5.9166e+00, -8.3575e-02,
        -9.4948e-01,  8.9784e-01, -4.2426e-01, -1.5899e-01], device='cuda:0')), ('layers.4.weight', tensor([[ 0.2110,  0.4424,  0.9040,  ..., -2.8095, -0.1910, -0.0872],
        [-0.2348, -0.3104, -1.0407,  ..., -0.1605,  0.1902, -0.0331],
        [-0.0927, -0.0508, -0.1591,  ..., -0.0715, -0.1166,  0.0869],
        ...,
        [ 0.0943, -0.5342,  0.1592,  ..., -0.4657,  0.5846,  0.0321],
        [ 0.1699, -0.1953, -7.9833,  ..., -0.0257,  0.0795,  0.1076],
        [ 0.2073, -0.3631, -2.4917,  ..., -3.0972, -0.0441, -0.1114]],
       device='cuda:0')), ('layers.4.bias', tensor([-0.2434, -0.2801, -0.1888,  5.3662, -0.1176,  1.3220,  4.9259,  0.6170,
        -0.1662, -0.1932,  1.4918, -0.1597,  0.7500,  1.6916,  2.6877, -1.2216],
       device='cuda:0')), ('layers.6.weight', tensor([[-0.1909,  0.9166, -0.0688, -0.6597,  0.0388, -4.4785,  0.9445,  1.2023,
          0.2697,  0.0101, -1.5645,  0.1815,  1.4819,  0.0683,  1.2697,  0.8483],
        [-0.5319, -2.3370, -0.0661, -0.3582,  0.0774, -4.0810,  0.8480, -5.6848,
         -0.1249, -0.3225, -1.5987, -0.0474, -2.7536,  0.1473,  0.7910,  0.1375],
        [-0.5358, -2.1584,  0.0726, -0.1153, -0.0248, -4.4345,  1.0702, -5.8344,
          0.1439, -0.0219, -2.0769,  0.2186, -3.4006,  0.2021,  0.6074,  0.0362],
        [-1.6987, -0.1433,  0.0147,  1.4027,  0.1192, -3.0231,  0.3515, -8.0016,
          0.1293,  0.0346, -0.0558, -0.0652, -4.1967,  0.8781,  0.5352,  1.4355],
        [-0.4629, -0.5429, -0.0894,  0.2192, -0.2642, -5.0240, -1.2494, -7.2212,
          0.2781, -0.0817, -0.7757, -0.1734, -0.4619,  0.6265,  0.6150, -1.1988],
        [-0.3336, -0.6300, -0.0231, -0.3112, -0.4110, -4.3853, -1.3348, -8.1304,
          0.0147, -0.4205, -0.7434, -0.1817, -0.1528,  0.7656,  0.7081, -0.3297],
        [ 0.4037,  0.9980,  0.0409, -0.8943, -0.0651,  1.5773, -0.9180, -8.1870,
         -0.1000, -0.5158, -0.8807, -0.1994, -1.2739,  0.8603,  0.9256,  0.4177]],
       device='cuda:0')), ('layers.6.bias', tensor([-2.2647,  0.0841,  1.5431,  1.2486,  1.0236,  0.9783, -0.5718],
       device='cuda:0'))])

Input Tests:
Test Input 1: [0, 6, 6, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [11.253329277038574, 8.552922248840332, 8.96761703491211, 16.440807342529297, 10.716700553894043, 8.718547821044922, 7.047536373138428]
Test Input 2: [0, 6, 4, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [10.042241096496582, 7.565371036529541, 8.339601516723633, 16.76271629333496, 10.38757610321045, 7.803319454193115, 5.953383922576904]
Test Input 3: [0, 6, 2, 5, 1, 3, -1, -1, 0, -1, 0, -1, 0, -1, 0]
Output: [5.5465898513793945, 2.98779559135437, 1.6970340013504028, 14.203370094299316, 0.7351601123809814, -0.5173921585083008, -1.0628511905670166]
